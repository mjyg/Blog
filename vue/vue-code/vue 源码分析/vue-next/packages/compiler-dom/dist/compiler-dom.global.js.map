{"version":3,"file":"compiler-dom.global.js","sources":["../../shared/src/patchFlags.ts","../../shared/src/makeMap.ts","../../shared/src/index.ts","../../compiler-core/src/errors.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/parse.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/codeframe.ts","../../compiler-core/src/index.ts","../src/tagConfig.ts","../src/parserOptionsMinimal.ts","../src/transforms/transformStyle.ts","../src/transforms/vCloak.ts","../src/errors.ts","../src/transforms/vHtml.ts","../src/transforms/vText.ts","../src/runtimeHelpers.ts","../src/transforms/vModel.ts","../src/transforms/vOn.ts","../src/index.ts"],"sourcesContent":["// Patch flags are optimization hints generated by the compiler.\n// when a block with dynamicChildren is encountered during diff, the algorithm\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\n// a render function generated by the compiler, so the algorithm only needs to\n// handle updates explicitly marked by these patch flags.\n\n// Patch flags can be combined using the | bitwise operator and can be checked\n// using the & operator, e.g.\n//\n//   const flag = TEXT | CLASS\n//   if (flag & TEXT) { ... }\n//\n// Check the `patchElement` function in './createRenderer.ts' to see how the\n// flags are handled during diff.\n\nexport const enum PatchFlags {\n  // Indicates an element with dynamic textContent (children fast path)\n  TEXT = 1,\n\n  // Indicates an element with dynamic class binding.\n  CLASS = 1 << 1,\n\n  // Indicates an element with dynamic style\n  // The compiler pre-compiles static string styles into static objects\n  // + detects and hoists inline static objects\n  // e.g. style=\"color: red\" and :style=\"{ color: 'red' }\" both get hoisted as\n  //   const style = { color: 'red' }\n  //   render() { return e('div', { style }) }\n  STYLE = 1 << 2,\n\n  // Indicates an element that has non-class/style dynamic props.\n  // Can also be on a component that has any dynamic props (includes\n  // class/style). when this flag is present, the vnode also has a dynamicProps\n  // array that contains the keys of the props that may change so the runtime\n  // can diff them faster (without having to worry about removed props)\n  PROPS = 1 << 3,\n\n  // Indicates an element with props with dynamic keys. When keys change, a full\n  // diff is always needed to remove the old key. This flag is mutually\n  // exclusive with CLASS, STYLE and PROPS.\n  FULL_PROPS = 1 << 4,\n\n  // Indicates an element that only needs non-props patching, e.g. ref or\n  // directives (onVnodeXXX hooks). It simply marks the vnode as \"need patch\",\n  // since every patched vnode checks for refs and onVnodeXXX hooks.\n  // This flag is never directly matched against, it simply serves as a non-zero\n  // value.\n  NEED_PATCH = 1 << 5,\n\n  // Indicates a fragment with keyed or partially keyed children\n  KEYED_FRAGMENT = 1 << 6,\n\n  // Indicates a fragment with unkeyed children.\n  UNKEYED_FRAGMENT = 1 << 7,\n\n  // Indicates a component with dynamic slots (e.g. slot that references a v-for\n  // iterated value, or dynamic slot names).\n  // Components with this flag are always force updated.\n  DYNAMIC_SLOTS = 1 << 8,\n\n  // A special flag that indicates that the diffing algorithm should bail out\n  // of optimized mode. This is only on block fragments created by renderSlot()\n  // when encountering non-compiler generated slots (i.e. manually written\n  // render functions, which should always be fully diffed)\n  BAIL = -1\n}\n\n// runtime object for public consumption\nexport const PublicPatchFlags = {\n  TEXT: PatchFlags.TEXT,\n  CLASS: PatchFlags.CLASS,\n  STYLE: PatchFlags.STYLE,\n  PROPS: PatchFlags.PROPS,\n  NEED_PATCH: PatchFlags.NEED_PATCH,\n  FULL_PROPS: PatchFlags.FULL_PROPS,\n  KEYED_FRAGMENT: PatchFlags.KEYED_FRAGMENT,\n  UNKEYED_FRAGMENT: PatchFlags.UNKEYED_FRAGMENT,\n  DYNAMIC_SLOTS: PatchFlags.DYNAMIC_SLOTS,\n  BAIL: PatchFlags.BAIL\n}\n\n// dev only flag -> name mapping\nexport const PatchFlagNames = {\n  [PatchFlags.TEXT]: `TEXT`,\n  [PatchFlags.CLASS]: `CLASS`,\n  [PatchFlags.STYLE]: `STYLE`,\n  [PatchFlags.PROPS]: `PROPS`,\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\n  [PatchFlags.BAIL]: `BAIL`\n}\n","// Make a map and return a function for checking if a key\n// is in that map.\n//\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\n// So that rollup can tree-shake them if necessary.\nexport function makeMap(\n  str: string,\n  expectsLowerCase?: boolean\n): (key: string) => boolean {\n  const map: Record<string, boolean> = Object.create(null)\n  const list: Array<string> = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\n}\n","export * from './patchFlags'\nexport { isGloballyWhitelisted } from './globalsWhitelist'\nexport { makeMap } from './makeMap'\n\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\n  ? Object.freeze({})\n  : {}\nexport const EMPTY_ARR: [] = []\n\nexport const NOOP = () => {}\n\n/**\n * Always return false.\n */\nexport const NO = () => false\n\nexport const isOn = (key: string) => key[0] === 'o' && key[1] === 'n'\n\nexport const extend = <T extends object, U extends object>(\n  a: T,\n  b: U\n): T & U => {\n  for (const key in b) {\n    ;(a as any)[key] = b[key]\n  }\n  return a as any\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (\n  val: object,\n  key: string | symbol\n): key is keyof typeof val => hasOwnProperty.call(val, key)\n\nexport const isArray = Array.isArray\nexport const isFunction = (val: unknown): val is Function =>\n  typeof val === 'function'\nexport const isString = (val: unknown): val is string => typeof val === 'string'\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\nexport const isObject = (val: unknown): val is Record<any, any> =>\n  val !== null && typeof val === 'object'\n\nexport function isPromise<T = any>(val: unknown): val is Promise<T> {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\n}\n\nexport const objectToString = Object.prototype.toString\nexport const toTypeString = (value: unknown): string =>\n  objectToString.call(value)\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\n\nexport const isReservedProp = (key: string): boolean =>\n  key === 'key' || key === 'ref' || key === '$once' || key.startsWith(`onVnode`)\n\nconst camelizeRE = /-(\\w)/g\nexport const camelize = (str: string): string => {\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\n}\n\nconst hyphenateRE = /\\B([A-Z])/g\nexport const hyphenate = (str: string): string => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n}\n\nexport const capitalize = (str: string): string => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n","import { SourceLocation } from './ast'\n\nexport interface CompilerError extends SyntaxError {\n  code: number\n  loc?: SourceLocation\n}\n\nexport interface CoreCompilerError extends CompilerError {\n  code: ErrorCodes\n}\n\nexport function defaultOnError(error: CompilerError) {\n  throw error\n}\n\nexport function createCompilerError<T extends number>(\n  code: T,\n  loc?: SourceLocation,\n  messages?: { [code: number]: string }\n): T extends ErrorCodes ? CoreCompilerError : CompilerError {\n  const msg = __DEV__ || !__BROWSER__ ? (messages || errorMessages)[code] : code\n  const locInfo = loc ? ` (${loc.start.line}:${loc.start.column})` : ``\n  const error = new SyntaxError(msg + locInfo) as CompilerError\n  error.code = code\n  error.loc = loc\n  return error as any\n}\n\nexport const enum ErrorCodes {\n  // parse errors\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\n  ABSENCE_OF_DIGITS_IN_NUMERIC_CHARACTER_REFERENCE,\n  CDATA_IN_HTML_CONTENT,\n  CHARACTER_REFERENCE_OUTSIDE_UNICODE_RANGE,\n  CONTROL_CHARACTER_REFERENCE,\n  DUPLICATE_ATTRIBUTE,\n  END_TAG_WITH_ATTRIBUTES,\n  END_TAG_WITH_TRAILING_SOLIDUS,\n  EOF_BEFORE_TAG_NAME,\n  EOF_IN_CDATA,\n  EOF_IN_COMMENT,\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\n  EOF_IN_TAG,\n  INCORRECTLY_CLOSED_COMMENT,\n  INCORRECTLY_OPENED_COMMENT,\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\n  MISSING_ATTRIBUTE_VALUE,\n  MISSING_END_TAG_NAME,\n  MISSING_SEMICOLON_AFTER_CHARACTER_REFERENCE,\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\n  NESTED_COMMENT,\n  NONCHARACTER_CHARACTER_REFERENCE,\n  NULL_CHARACTER_REFERENCE,\n  SURROGATE_CHARACTER_REFERENCE,\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\n  UNEXPECTED_NULL_CHARACTER,\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\n  UNEXPECTED_SOLIDUS_IN_TAG,\n  UNKNOWN_NAMED_CHARACTER_REFERENCE,\n\n  // Vue-specific parse errors\n  X_INVALID_END_TAG,\n  X_MISSING_END_TAG,\n  X_MISSING_INTERPOLATION_END,\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\n\n  // transform errors\n  X_V_IF_NO_EXPRESSION,\n  X_V_ELSE_NO_ADJACENT_IF,\n  X_V_FOR_NO_EXPRESSION,\n  X_V_FOR_MALFORMED_EXPRESSION,\n  X_V_BIND_NO_EXPRESSION,\n  X_V_ON_NO_EXPRESSION,\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\n  X_V_SLOT_NAMED_SLOT_ON_COMPONENT,\n  X_V_SLOT_MIXED_SLOT_USAGE,\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\n  X_V_SLOT_EXTRANEOUS_NON_SLOT_CHILDREN,\n  X_V_SLOT_MISPLACED,\n  X_V_MODEL_NO_EXPRESSION,\n  X_V_MODEL_MALFORMED_EXPRESSION,\n  X_V_MODEL_ON_SCOPE_VARIABLE,\n  X_INVALID_EXPRESSION,\n\n  // generic errors\n  X_PREFIX_ID_NOT_SUPPORTED,\n  X_MODULE_MODE_NOT_SUPPORTED,\n\n  // Special value for higher-order compilers to pick up the last code\n  // to avoid collision of error codes. This should always be kept as the last\n  // item.\n  __EXTEND_POINT__\n}\n\nexport const errorMessages: { [code: number]: string } = {\n  // parse errors\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\n  [ErrorCodes.ABSENCE_OF_DIGITS_IN_NUMERIC_CHARACTER_REFERENCE]:\n    'Illegal numeric character reference: invalid character.',\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\n    'CDATA section is allowed only in XML context.',\n  [ErrorCodes.CHARACTER_REFERENCE_OUTSIDE_UNICODE_RANGE]:\n    'Illegal numeric character reference: too big.',\n  [ErrorCodes.CONTROL_CHARACTER_REFERENCE]:\n    'Illegal numeric character reference: control character.',\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\n    'Unexpected EOF in script.',\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\n  [ErrorCodes.MISSING_SEMICOLON_AFTER_CHARACTER_REFERENCE]:\n    'Semicolon was expected.',\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\n    'Whitespace was expected.',\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\n  [ErrorCodes.NONCHARACTER_CHARACTER_REFERENCE]:\n    'Illegal numeric character reference: non character.',\n  [ErrorCodes.NULL_CHARACTER_REFERENCE]:\n    'Illegal numeric character reference: null character.',\n  [ErrorCodes.SURROGATE_CHARACTER_REFERENCE]:\n    'Illegal numeric character reference: non-pair surrogate.',\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\n    \"Attribute name cannot start with '='.\",\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\n    \"'<?' is allowed only in XML context.\",\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\n  [ErrorCodes.UNKNOWN_NAMED_CHARACTER_REFERENCE]: 'Unknown entity name.',\n\n  // Vue-specific parse errors\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\n  [ErrorCodes.X_MISSING_END_TAG]: 'End tag was not found.',\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\n    'Interpolation end sign was not found.',\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\n    'End bracket for dynamic directive argument was not found. ' +\n    'Note that dynamic directive argument cannot contain spaces.',\n\n  // transform errors\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if.`,\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\n  [ErrorCodes.X_V_SLOT_NAMED_SLOT_ON_COMPONENT]:\n    `Named v-slot on component. ` +\n    `Named slots should use <template v-slot> syntax nested inside the component.`,\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\n    `Mixed v-slot usage on both the component and nested <template>.` +\n    `The default slot should also use <template> syntax when there are other ` +\n    `named slots to avoid scope ambiguity.`,\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_NON_SLOT_CHILDREN]:\n    `Extraneous children found when component has explicit slots. ` +\n    `These children will be ignored.`,\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Invalid JavaScript expression.`,\n\n  // generic errors\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`\n}\n","import { isString } from '@vue/shared'\nimport { ForParseResult } from './transforms/vFor'\nimport {\n  CREATE_VNODE,\n  WITH_DIRECTIVES,\n  RENDER_SLOT,\n  CREATE_SLOTS,\n  RENDER_LIST,\n  OPEN_BLOCK,\n  CREATE_BLOCK,\n  FRAGMENT\n} from './runtimeHelpers'\nimport { PropsExpression } from './transforms/transformElement'\n\n// Vue template is a platform-agnostic superset of HTML (syntax only).\n// More namespaces like SVG and MathML are declared by platform specific\n// compilers.\nexport type Namespace = number\n\nexport const enum Namespaces {\n  HTML\n}\n\nexport const enum NodeTypes {\n  ROOT,\n  ELEMENT,\n  TEXT,\n  COMMENT,\n  SIMPLE_EXPRESSION,\n  INTERPOLATION,\n  ATTRIBUTE,\n  DIRECTIVE,\n  // containers\n  COMPOUND_EXPRESSION,\n  IF,\n  IF_BRANCH,\n  FOR,\n  TEXT_CALL,\n  // codegen\n  JS_CALL_EXPRESSION,\n  JS_OBJECT_EXPRESSION,\n  JS_PROPERTY,\n  JS_ARRAY_EXPRESSION,\n  JS_FUNCTION_EXPRESSION,\n  JS_SEQUENCE_EXPRESSION,\n  JS_CONDITIONAL_EXPRESSION,\n  JS_CACHE_EXPRESSION\n}\n\nexport const enum ElementTypes {\n  ELEMENT,\n  COMPONENT,\n  SLOT,\n  TEMPLATE,\n  PORTAL,\n  SUSPENSE\n}\n\nexport interface Node {\n  type: NodeTypes\n  loc: SourceLocation\n}\n\n// The node's range. The `start` is inclusive and `end` is exclusive.\n// [start, end)\nexport interface SourceLocation {\n  start: Position\n  end: Position\n  source: string\n}\n\nexport interface Position {\n  offset: number // from start of file\n  line: number\n  column: number\n}\n\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\n\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\n\nexport type TemplateChildNode =\n  | ElementNode\n  | InterpolationNode\n  | CompoundExpressionNode\n  | TextNode\n  | CommentNode\n  | IfNode\n  | ForNode\n  | TextCallNode\n\nexport interface RootNode extends Node {\n  type: NodeTypes.ROOT\n  children: TemplateChildNode[]\n  helpers: symbol[]\n  components: string[]\n  directives: string[]\n  hoists: JSChildNode[]\n  cached: number\n  codegenNode: TemplateChildNode | JSChildNode | undefined\n}\n\nexport type ElementNode =\n  | PlainElementNode\n  | ComponentNode\n  | SlotOutletNode\n  | TemplateNode\n  | PortalNode\n  | SuspenseNode\n\nexport interface BaseElementNode extends Node {\n  type: NodeTypes.ELEMENT\n  ns: Namespace\n  tag: string\n  tagType: ElementTypes\n  isSelfClosing: boolean\n  props: Array<AttributeNode | DirectiveNode>\n  children: TemplateChildNode[]\n  codegenNode: CallExpression | SimpleExpressionNode | undefined\n}\n\nexport interface PlainElementNode extends BaseElementNode {\n  tagType: ElementTypes.ELEMENT\n  codegenNode: ElementCodegenNode | undefined | SimpleExpressionNode // only when hoisted\n}\n\nexport interface ComponentNode extends BaseElementNode {\n  tagType: ElementTypes.COMPONENT\n  codegenNode: ComponentCodegenNode | undefined\n}\n\nexport interface SlotOutletNode extends BaseElementNode {\n  tagType: ElementTypes.SLOT\n  codegenNode: SlotOutletCodegenNode | undefined\n}\n\nexport interface TemplateNode extends BaseElementNode {\n  tagType: ElementTypes.TEMPLATE\n  codegenNode:\n    | ElementCodegenNode\n    | CodegenNodeWithDirective<ElementCodegenNode>\n    | undefined\n}\n\nexport interface PortalNode extends BaseElementNode {\n  tagType: ElementTypes.PORTAL\n  codegenNode: ElementCodegenNode | undefined\n}\n\nexport interface SuspenseNode extends BaseElementNode {\n  tagType: ElementTypes.SUSPENSE\n  codegenNode: ElementCodegenNode | undefined\n}\n\nexport interface TextNode extends Node {\n  type: NodeTypes.TEXT\n  content: string\n  isEmpty: boolean\n}\n\nexport interface CommentNode extends Node {\n  type: NodeTypes.COMMENT\n  content: string\n}\n\nexport interface AttributeNode extends Node {\n  type: NodeTypes.ATTRIBUTE\n  name: string\n  value: TextNode | undefined\n}\n\nexport interface DirectiveNode extends Node {\n  type: NodeTypes.DIRECTIVE\n  name: string\n  exp: ExpressionNode | undefined\n  arg: ExpressionNode | undefined\n  modifiers: string[]\n  // optional property to cache the expression parse result for v-for\n  parseResult?: ForParseResult\n}\n\nexport interface SimpleExpressionNode extends Node {\n  type: NodeTypes.SIMPLE_EXPRESSION\n  content: string\n  isStatic: boolean\n  isConstant: boolean\n  // an expression parsed as the params of a function will track\n  // the identifiers declared inside the function body.\n  identifiers?: string[]\n}\n\nexport interface InterpolationNode extends Node {\n  type: NodeTypes.INTERPOLATION\n  content: ExpressionNode\n}\n\nexport interface CompoundExpressionNode extends Node {\n  type: NodeTypes.COMPOUND_EXPRESSION\n  children: (\n    | SimpleExpressionNode\n    | InterpolationNode\n    | TextNode\n    | string\n    | symbol)[]\n  // an expression parsed as the params of a function will track\n  // the identifiers declared inside the function body.\n  identifiers?: string[]\n}\n\nexport interface IfNode extends Node {\n  type: NodeTypes.IF\n  branches: IfBranchNode[]\n  codegenNode: IfCodegenNode\n}\n\nexport interface IfBranchNode extends Node {\n  type: NodeTypes.IF_BRANCH\n  condition: ExpressionNode | undefined // else\n  children: TemplateChildNode[]\n}\n\nexport interface ForNode extends Node {\n  type: NodeTypes.FOR\n  source: ExpressionNode\n  valueAlias: ExpressionNode | undefined\n  keyAlias: ExpressionNode | undefined\n  objectIndexAlias: ExpressionNode | undefined\n  children: TemplateChildNode[]\n  codegenNode: ForCodegenNode\n}\n\nexport interface TextCallNode extends Node {\n  type: NodeTypes.TEXT_CALL\n  content: TextNode | InterpolationNode | CompoundExpressionNode\n  codegenNode: CallExpression\n}\n\n// We also include a number of JavaScript AST nodes for code generation.\n// The AST is an intentionally minimal subset just to meet the exact needs of\n// Vue render function generation.\nexport type JSChildNode =\n  | CallExpression\n  | ObjectExpression\n  | ArrayExpression\n  | ExpressionNode\n  | FunctionExpression\n  | ConditionalExpression\n  | SequenceExpression\n  | CacheExpression\n\nexport interface CallExpression extends Node {\n  type: NodeTypes.JS_CALL_EXPRESSION\n  callee: string | symbol\n  arguments: (\n    | string\n    | symbol\n    | JSChildNode\n    | TemplateChildNode\n    | TemplateChildNode[])[]\n}\n\nexport interface ObjectExpression extends Node {\n  type: NodeTypes.JS_OBJECT_EXPRESSION\n  properties: Array<Property>\n}\n\nexport interface Property extends Node {\n  type: NodeTypes.JS_PROPERTY\n  key: ExpressionNode\n  value: JSChildNode\n}\n\nexport interface ArrayExpression extends Node {\n  type: NodeTypes.JS_ARRAY_EXPRESSION\n  elements: Array<string | JSChildNode>\n}\n\nexport interface FunctionExpression extends Node {\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\n  params: ExpressionNode | ExpressionNode[] | undefined\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\n  newline: boolean\n}\n\nexport interface SequenceExpression extends Node {\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\n  expressions: JSChildNode[]\n}\n\nexport interface ConditionalExpression extends Node {\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\n  test: ExpressionNode\n  consequent: JSChildNode\n  alternate: JSChildNode\n}\n\nexport interface CacheExpression extends Node {\n  type: NodeTypes.JS_CACHE_EXPRESSION\n  index: number\n  value: JSChildNode\n}\n\n// Codegen Node Types ----------------------------------------------------------\n\n// createVNode(...)\nexport interface PlainElementCodegenNode extends CallExpression {\n  callee: typeof CREATE_VNODE | typeof CREATE_BLOCK\n  arguments:  // tag, props, children, patchFlag, dynamicProps\n    | [string | symbol]\n    | [string | symbol, PropsExpression]\n    | [string | symbol, 'null' | PropsExpression, TemplateChildNode[]]\n    | [\n        string | symbol,\n        'null' | PropsExpression,\n        'null' | TemplateChildNode[],\n        string\n      ]\n    | [\n        string | symbol,\n        'null' | PropsExpression,\n        'null' | TemplateChildNode[],\n        string,\n        string\n      ]\n}\n\nexport type ElementCodegenNode =\n  | PlainElementCodegenNode\n  | CodegenNodeWithDirective<PlainElementCodegenNode>\n\n// createVNode(...)\nexport interface PlainComponentCodegenNode extends CallExpression {\n  callee: typeof CREATE_VNODE | typeof CREATE_BLOCK\n  arguments:  // Comp, props, slots, patchFlag, dynamicProps\n    | [string | symbol]\n    | [string | symbol, PropsExpression]\n    | [string | symbol, 'null' | PropsExpression, SlotsExpression]\n    | [\n        string | symbol,\n        'null' | PropsExpression,\n        'null' | SlotsExpression,\n        string\n      ]\n    | [\n        string | symbol,\n        'null' | PropsExpression,\n        'null' | SlotsExpression,\n        string,\n        string\n      ]\n}\n\nexport type ComponentCodegenNode =\n  | PlainComponentCodegenNode\n  | CodegenNodeWithDirective<PlainComponentCodegenNode>\n\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\n\n// { foo: () => [...] }\nexport interface SlotsObjectExpression extends ObjectExpression {\n  properties: SlotsObjectProperty[]\n}\n\nexport interface SlotsObjectProperty extends Property {\n  value: SlotFunctionExpression\n}\n\nexport interface SlotFunctionExpression extends FunctionExpression {\n  returns: TemplateChildNode[]\n}\n\n// createSlots({ ... }, [\n//    foo ? () => [] : undefined,\n//    renderList(list, i => () => [i])\n// ])\nexport interface DynamicSlotsExpression extends CallExpression {\n  callee: typeof CREATE_SLOTS\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\n}\n\nexport interface DynamicSlotEntries extends ArrayExpression {\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\n}\n\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\n  consequent: DynamicSlotNode\n  alternate: DynamicSlotNode | SimpleExpressionNode\n}\n\nexport interface ListDynamicSlotNode extends CallExpression {\n  callee: typeof RENDER_LIST\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\n}\n\nexport interface ListDynamicSlotIterator extends FunctionExpression {\n  returns: DynamicSlotNode\n}\n\nexport interface DynamicSlotNode extends ObjectExpression {\n  properties: [Property, DynamicSlotFnProperty]\n}\n\nexport interface DynamicSlotFnProperty extends Property {\n  value: SlotFunctionExpression\n}\n\n// withDirectives(createVNode(...), [\n//    [_directive_foo, someValue],\n//    [_directive_bar, someValue, \"arg\", { mod: true }]\n// ])\nexport interface CodegenNodeWithDirective<T extends CallExpression>\n  extends CallExpression {\n  callee: typeof WITH_DIRECTIVES\n  arguments: [T, DirectiveArguments]\n}\n\nexport interface DirectiveArguments extends ArrayExpression {\n  elements: DirectiveArgumentNode[]\n}\n\nexport interface DirectiveArgumentNode extends ArrayExpression {\n  elements:  // dir, exp, arg, modifiers\n    | [string]\n    | [string, ExpressionNode]\n    | [string, ExpressionNode, ExpressionNode]\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\n}\n\n// renderSlot(...)\nexport interface SlotOutletCodegenNode extends CallExpression {\n  callee: typeof RENDER_SLOT\n  arguments:  // $slots, name, props, fallback\n    | [string, string | ExpressionNode]\n    | [string, string | ExpressionNode, PropsExpression]\n    | [\n        string,\n        string | ExpressionNode,\n        PropsExpression | '{}',\n        TemplateChildNode[]\n      ]\n}\n\nexport type BlockCodegenNode =\n  | ElementCodegenNode\n  | ComponentCodegenNode\n  | SlotOutletCodegenNode\n\nexport interface IfCodegenNode extends SequenceExpression {\n  expressions: [OpenBlockExpression, IfConditionalExpression]\n}\n\nexport interface IfConditionalExpression extends ConditionalExpression {\n  consequent: BlockCodegenNode\n  alternate: BlockCodegenNode | IfConditionalExpression\n}\n\nexport interface ForCodegenNode extends SequenceExpression {\n  expressions: [OpenBlockExpression, ForBlockCodegenNode]\n}\n\nexport interface ForBlockCodegenNode extends CallExpression {\n  callee: typeof CREATE_BLOCK\n  arguments: [typeof FRAGMENT, 'null', ForRenderListExpression, string]\n}\n\nexport interface ForRenderListExpression extends CallExpression {\n  callee: typeof RENDER_LIST\n  arguments: [ExpressionNode, ForIteratorExpression]\n}\n\nexport interface ForIteratorExpression extends FunctionExpression {\n  returns: BlockCodegenNode\n}\n\nexport interface OpenBlockExpression extends CallExpression {\n  callee: typeof OPEN_BLOCK\n  arguments: []\n}\n\n// AST Utilities ---------------------------------------------------------------\n\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nexport const locStub: SourceLocation = {\n  source: '',\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 }\n}\n\nexport function createArrayExpression(\n  elements: ArrayExpression['elements'],\n  loc: SourceLocation = locStub\n): ArrayExpression {\n  return {\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\n    loc,\n    elements\n  }\n}\n\nexport function createObjectExpression(\n  properties: ObjectExpression['properties'],\n  loc: SourceLocation = locStub\n): ObjectExpression {\n  return {\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\n    loc,\n    properties\n  }\n}\n\nexport function createObjectProperty(\n  key: Property['key'] | string,\n  value: Property['value']\n): Property {\n  return {\n    type: NodeTypes.JS_PROPERTY,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  }\n}\n\nexport function createSimpleExpression(\n  content: SimpleExpressionNode['content'],\n  isStatic: SimpleExpressionNode['isStatic'],\n  loc: SourceLocation = locStub,\n  isConstant: boolean = false\n): SimpleExpressionNode {\n  return {\n    type: NodeTypes.SIMPLE_EXPRESSION,\n    loc,\n    isConstant,\n    content,\n    isStatic\n  }\n}\n\nexport function createInterpolation(\n  content: InterpolationNode['content'] | string,\n  loc: SourceLocation\n): InterpolationNode {\n  return {\n    type: NodeTypes.INTERPOLATION,\n    loc,\n    content: isString(content)\n      ? createSimpleExpression(content, false, loc)\n      : content\n  }\n}\n\nexport function createCompoundExpression(\n  children: CompoundExpressionNode['children'],\n  loc: SourceLocation = locStub\n): CompoundExpressionNode {\n  return {\n    type: NodeTypes.COMPOUND_EXPRESSION,\n    loc,\n    children\n  }\n}\n\ntype InferCodegenNodeType<T> = T extends\n  | typeof CREATE_VNODE\n  | typeof CREATE_BLOCK\n  ? PlainElementCodegenNode | PlainComponentCodegenNode\n  : T extends typeof WITH_DIRECTIVES\n    ?\n        | CodegenNodeWithDirective<PlainElementCodegenNode>\n        | CodegenNodeWithDirective<PlainComponentCodegenNode>\n    : T extends typeof RENDER_SLOT ? SlotOutletCodegenNode : CallExpression\n\nexport function createCallExpression<T extends CallExpression['callee']>(\n  callee: T,\n  args: CallExpression['arguments'] = [],\n  loc: SourceLocation = locStub\n): InferCodegenNodeType<T> {\n  return {\n    type: NodeTypes.JS_CALL_EXPRESSION,\n    loc,\n    callee,\n    arguments: args\n  } as any\n}\n\nexport function createFunctionExpression(\n  params: FunctionExpression['params'],\n  returns: FunctionExpression['returns'],\n  newline: boolean = false,\n  loc: SourceLocation = locStub\n): FunctionExpression {\n  return {\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\n    params,\n    returns,\n    newline,\n    loc\n  }\n}\n\nexport function createSequenceExpression(\n  expressions: SequenceExpression['expressions']\n): SequenceExpression {\n  return {\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\n    expressions,\n    loc: locStub\n  }\n}\n\nexport function createConditionalExpression(\n  test: ConditionalExpression['test'],\n  consequent: ConditionalExpression['consequent'],\n  alternate: ConditionalExpression['alternate']\n): ConditionalExpression {\n  return {\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  }\n}\n\nexport function createCacheExpression(\n  index: number,\n  value: JSChildNode\n): CacheExpression {\n  return {\n    type: NodeTypes.JS_CACHE_EXPRESSION,\n    index,\n    value,\n    loc: locStub\n  }\n}\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\nexport const PORTAL = Symbol(__DEV__ ? `Portal` : ``)\nexport const COMMENT = Symbol(__DEV__ ? `Comment` : ``)\nexport const TEXT = Symbol(__DEV__ ? `Text` : ``)\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  __DEV__ ? `resolveDynamicComponent` : ``\n)\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\nexport const TO_STRING = Symbol(__DEV__ ? `toString` : ``)\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\n\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\n// Using `any` here because TS doesn't allow symbols as index type.\nexport const helperNameMap: any = {\n  [FRAGMENT]: `Fragment`,\n  [PORTAL]: `Portal`,\n  [COMMENT]: `Comment`,\n  [TEXT]: `Text`,\n  [SUSPENSE]: `Suspense`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_STRING]: `toString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`\n}\n\nexport function registerRuntimeHelpers(helpers: any) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s]\n  })\n}\n","import {\n  SourceLocation,\n  Position,\n  ElementNode,\n  NodeTypes,\n  CallExpression,\n  SequenceExpression,\n  createSequenceExpression,\n  createCallExpression,\n  DirectiveNode,\n  ElementTypes,\n  TemplateChildNode,\n  RootNode,\n  ObjectExpression,\n  Property,\n  JSChildNode,\n  createObjectExpression,\n  SlotOutletNode,\n  TemplateNode,\n  BlockCodegenNode,\n  ElementCodegenNode,\n  SlotOutletCodegenNode,\n  ComponentCodegenNode,\n  ExpressionNode,\n  IfBranchNode\n} from './ast'\nimport { parse } from 'acorn'\nimport { walk } from 'estree-walker'\nimport { TransformContext } from './transform'\nimport { OPEN_BLOCK, MERGE_PROPS, RENDER_SLOT } from './runtimeHelpers'\nimport { isString, isFunction, isObject } from '@vue/shared'\n\n// cache node requires\n// lazy require dependencies so that they don't end up in rollup's dep graph\n// and thus can be tree-shaken in browser builds.\nlet _parse: typeof parse\nlet _walk: typeof walk\n\nexport function loadDep(name: string) {\n  if (typeof process !== 'undefined' && isFunction(require)) {\n    return require(name)\n  } else {\n    // This is only used when we are building a dev-only build of the compiler\n    // which runs in the browser but also uses Node deps.\n    return (window as any)._deps[name]\n  }\n}\n\nexport const parseJS: typeof parse = (code, options) => {\n  assert(\n    !__BROWSER__,\n    `Expression AST analysis can only be performed in non-browser builds.`\n  )\n  const parse = _parse || (_parse = loadDep('acorn').parse)\n  return parse(code, options)\n}\n\nexport const walkJS: typeof walk = (ast, walker) => {\n  assert(\n    !__BROWSER__,\n    `Expression AST analysis can only be performed in non-browser builds.`\n  )\n  const walk = _walk || (_walk = loadDep('estree-walker').walk)\n  return walk(ast, walker)\n}\n\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\nexport const isSimpleIdentifier = (name: string): boolean =>\n  !nonIdentifierRE.test(name)\n\nconst memberExpRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\[[^\\]]+\\])*$/\nexport const isMemberExpression = (path: string): boolean =>\n  memberExpRE.test(path)\n\nexport function getInnerRange(\n  loc: SourceLocation,\n  offset: number,\n  length?: number\n): SourceLocation {\n  __DEV__ && assert(offset <= loc.source.length)\n  const source = loc.source.substr(offset, length)\n  const newLoc: SourceLocation = {\n    source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  }\n\n  if (length != null) {\n    __DEV__ && assert(offset + length <= loc.source.length)\n    newLoc.end = advancePositionWithClone(\n      loc.start,\n      loc.source,\n      offset + length\n    )\n  }\n\n  return newLoc\n}\n\nexport function advancePositionWithClone(\n  pos: Position,\n  source: string,\n  numberOfCharacters: number = source.length\n): Position {\n  return advancePositionWithMutation({ ...pos }, source, numberOfCharacters)\n}\n\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nexport function advancePositionWithMutation(\n  pos: Position,\n  source: string,\n  numberOfCharacters: number = source.length\n): Position {\n  let linesCount = 0\n  let lastNewLinePos = -1\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\n      linesCount++\n      lastNewLinePos = i\n    }\n  }\n\n  pos.offset += numberOfCharacters\n  pos.line += linesCount\n  pos.column =\n    lastNewLinePos === -1\n      ? pos.column + numberOfCharacters\n      : Math.max(1, numberOfCharacters - lastNewLinePos)\n\n  return pos\n}\n\nexport function assert(condition: boolean, msg?: string) {\n  /* istanbul ignore if */\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`)\n  }\n}\n\nexport function findDir(\n  node: ElementNode,\n  name: string | RegExp,\n  allowEmpty: boolean = false\n): DirectiveNode | undefined {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (\n      p.type === NodeTypes.DIRECTIVE &&\n      (allowEmpty || p.exp) &&\n      (isString(name) ? p.name === name : name.test(p.name))\n    ) {\n      return p\n    }\n  }\n}\n\nexport function findProp(\n  node: ElementNode,\n  name: string,\n  dynamicOnly: boolean = false\n): ElementNode['props'][0] | undefined {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (dynamicOnly) continue\n      if (p.name === name && p.value && !p.value.isEmpty) {\n        return p\n      }\n    } else if (\n      p.name === 'bind' &&\n      p.arg &&\n      p.arg.type === NodeTypes.SIMPLE_EXPRESSION &&\n      p.arg.isStatic &&\n      p.arg.content === name &&\n      p.exp\n    ) {\n      return p\n    }\n  }\n}\n\nexport function createBlockExpression(\n  blockExp: BlockCodegenNode,\n  context: TransformContext\n): SequenceExpression {\n  return createSequenceExpression([\n    createCallExpression(context.helper(OPEN_BLOCK)),\n    blockExp\n  ])\n}\n\nexport const isVSlot = (p: ElementNode['props'][0]): p is DirectiveNode =>\n  p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\n\nexport const isTemplateNode = (\n  node: RootNode | TemplateChildNode\n): node is TemplateNode =>\n  node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\n\nexport const isSlotOutlet = (\n  node: RootNode | TemplateChildNode\n): node is SlotOutletNode =>\n  node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\n\nexport function injectProp(\n  node: ElementCodegenNode | ComponentCodegenNode | SlotOutletCodegenNode,\n  prop: Property,\n  context: TransformContext\n) {\n  let propsWithInjection: ObjectExpression | CallExpression\n  const props =\n    node.callee === RENDER_SLOT ? node.arguments[2] : node.arguments[1]\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop])\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    const first = props.arguments[0] as string | JSChildNode\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n      first.properties.unshift(prop)\n    } else {\n      props.arguments.unshift(createObjectExpression([prop]))\n    }\n    propsWithInjection = props\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n    props.properties.unshift(prop)\n    propsWithInjection = props\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ])\n  }\n  if (node.callee === RENDER_SLOT) {\n    node.arguments[2] = propsWithInjection\n  } else {\n    node.arguments[1] = propsWithInjection\n  }\n}\n\nexport function toValidAssetId(\n  name: string,\n  type: 'component' | 'directive'\n): string {\n  return `_${type}_${name.replace(/[^\\w]/g, '_')}`\n}\n\nexport function isEmptyExpression(node: ExpressionNode) {\n  return node.type === NodeTypes.SIMPLE_EXPRESSION && !node.content.trim()\n}\n\n// Check if a node contains expressions that reference current context scope ids\nexport function hasScopeRef(\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\n  ids: TransformContext['identifiers']\n): boolean {\n  if (!node || Object.keys(ids).length === 0) {\n    return false\n  }\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i]\n        if (\n          p.type === NodeTypes.DIRECTIVE &&\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\n        ) {\n          return true\n        }\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.FOR:\n      if (hasScopeRef(node.source, ids)) {\n        return true\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.IF:\n      return node.branches.some(b => hasScopeRef(b, ids))\n    case NodeTypes.IF_BRANCH:\n      if (hasScopeRef(node.condition, ids)) {\n        return true\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.SIMPLE_EXPRESSION:\n      return (\n        !node.isStatic &&\n        isSimpleIdentifier(node.content) &&\n        !!ids[node.content]\n      )\n    case NodeTypes.COMPOUND_EXPRESSION:\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\n    case NodeTypes.INTERPOLATION:\n    case NodeTypes.TEXT_CALL:\n      return hasScopeRef(node.content, ids)\n    case NodeTypes.TEXT:\n    case NodeTypes.COMMENT:\n      return false\n    default:\n      if (__DEV__) {\n        const exhaustiveCheck: never = node\n        exhaustiveCheck\n      }\n      return false\n  }\n}\n","import { NO } from '@vue/shared'\nimport {\n  ErrorCodes,\n  createCompilerError,\n  defaultOnError,\n  CompilerError\n} from './errors'\nimport {\n  assert,\n  advancePositionWithMutation,\n  advancePositionWithClone\n} from './utils'\nimport {\n  Namespace,\n  Namespaces,\n  AttributeNode,\n  CommentNode,\n  DirectiveNode,\n  ElementNode,\n  ElementTypes,\n  ExpressionNode,\n  NodeTypes,\n  Position,\n  RootNode,\n  SourceLocation,\n  TextNode,\n  TemplateChildNode,\n  InterpolationNode\n} from './ast'\nimport { extend } from '@vue/shared'\n\nexport interface ParserOptions {\n  isVoidTag?: (tag: string) => boolean // e.g. img, br, hr\n  isNativeTag?: (tag: string) => boolean // e.g. loading-indicator in weex\n  isCustomElement?: (tag: string) => boolean\n  getNamespace?: (tag: string, parent: ElementNode | undefined) => Namespace\n  getTextMode?: (tag: string, ns: Namespace) => TextModes\n  delimiters?: [string, string] // ['{{', '}}']\n  ignoreSpaces?: boolean\n\n  // Map to HTML entities. E.g., `{ \"amp;\": \"&\" }`\n  // The full set is https://html.spec.whatwg.org/multipage/named-characters.html#named-character-references\n  namedCharacterReferences?: { [name: string]: string | undefined }\n\n  onError?: (error: CompilerError) => void\n}\n\n// `isNativeTag` is optional, others are required\ntype MergedParserOptions = Omit<Required<ParserOptions>, 'isNativeTag'> &\n  Pick<ParserOptions, 'isNativeTag'>\n\nexport const defaultParserOptions: MergedParserOptions = {\n  delimiters: [`{{`, `}}`],\n  ignoreSpaces: true,\n  getNamespace: () => Namespaces.HTML,\n  getTextMode: () => TextModes.DATA,\n  isVoidTag: NO,\n  isCustomElement: NO,\n  namedCharacterReferences: {\n    'gt;': '>',\n    'lt;': '<',\n    'amp;': '&',\n    'apos;': \"'\",\n    'quot;': '\"'\n  },\n  onError: defaultOnError\n}\n\nexport const enum TextModes {\n  //          | Elements | Entities | End sign              | Inside of\n  DATA, //    | ✔       | ✔       | End tags of ancestors |\n  RCDATA, //  | ✘       | ✔       | End tag of the parent | <textarea>\n  RAWTEXT, // | ✘       | ✘       | End tag of the parent | <style>,<script>\n  CDATA,\n  ATTRIBUTE_VALUE\n}\n\ninterface ParserContext {\n  options: MergedParserOptions\n  readonly originalSource: string\n  source: string\n  offset: number\n  line: number\n  column: number\n  maxCRNameLength: number\n  inPre: boolean\n}\n\nexport function parse(content: string, options: ParserOptions = {}): RootNode {\n  const context = createParserContext(content, options)\n  const start = getCursor(context)\n\n  return {\n    type: NodeTypes.ROOT,\n    children: parseChildren(context, TextModes.DATA, []),\n    helpers: [],\n    components: [],\n    directives: [],\n    hoists: [],\n    cached: 0,\n    codegenNode: undefined,\n    loc: getSelection(context, start)\n  }\n}\n\nfunction createParserContext(\n  content: string,\n  options: ParserOptions\n): ParserContext {\n  return {\n    options: {\n      ...defaultParserOptions,\n      ...options\n    },\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    maxCRNameLength: Object.keys(\n      options.namedCharacterReferences ||\n        defaultParserOptions.namedCharacterReferences\n    ).reduce((max, name) => Math.max(max, name.length), 0),\n    inPre: false\n  }\n}\n\nfunction parseChildren(\n  context: ParserContext,\n  mode: TextModes,\n  ancestors: ElementNode[]\n): TemplateChildNode[] {\n  const parent = last(ancestors)\n  const ns = parent ? parent.ns : Namespaces.HTML\n  const nodes: TemplateChildNode[] = []\n\n  while (!isEnd(context, mode, ancestors)) {\n    __DEV__ && assert(context.source.length > 0)\n    const s = context.source\n    let node: TemplateChildNode | TemplateChildNode[] | undefined = undefined\n\n    if (!context.inPre && startsWith(s, context.options.delimiters[0])) {\n      // '{{'\n      node = parseInterpolation(context, mode)\n    } else if (mode === TextModes.DATA && s[0] === '<') {\n      // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n      if (s.length === 1) {\n        emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 1)\n      } else if (s[1] === '!') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n        if (startsWith(s, '<!--')) {\n          node = parseComment(context)\n        } else if (startsWith(s, '<!DOCTYPE')) {\n          // Ignore DOCTYPE by a limitation.\n          node = parseBogusComment(context)\n        } else if (startsWith(s, '<![CDATA[')) {\n          if (ns !== Namespaces.HTML) {\n            node = parseCDATA(context, ancestors)\n          } else {\n            emitError(context, ErrorCodes.CDATA_IN_HTML_CONTENT)\n            node = parseBogusComment(context)\n          }\n        } else {\n          emitError(context, ErrorCodes.INCORRECTLY_OPENED_COMMENT)\n          node = parseBogusComment(context)\n        }\n      } else if (s[1] === '/') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n        if (s.length === 2) {\n          emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 2)\n        } else if (s[2] === '>') {\n          emitError(context, ErrorCodes.MISSING_END_TAG_NAME, 2)\n          advanceBy(context, 3)\n          continue\n        } else if (/[a-z]/i.test(s[2])) {\n          emitError(context, ErrorCodes.X_INVALID_END_TAG)\n          parseTag(context, TagType.End, parent)\n          continue\n        } else {\n          emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 2)\n          node = parseBogusComment(context)\n        }\n      } else if (/[a-z]/i.test(s[1])) {\n        node = parseElement(context, ancestors)\n      } else if (s[1] === '?') {\n        emitError(\n          context,\n          ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\n          1\n        )\n        node = parseBogusComment(context)\n      } else {\n        emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 1)\n      }\n    }\n    if (!node) {\n      node = parseText(context, mode)\n    }\n\n    if (Array.isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        pushNode(context, nodes, node[i])\n      }\n    } else {\n      pushNode(context, nodes, node)\n    }\n  }\n\n  return nodes\n}\n\nfunction pushNode(\n  context: ParserContext,\n  nodes: TemplateChildNode[],\n  node: TemplateChildNode\n): void {\n  // ignore comments in production\n  /* istanbul ignore next */\n  if (!__DEV__ && node.type === NodeTypes.COMMENT) {\n    return\n  }\n  if (\n    context.options.ignoreSpaces &&\n    node.type === NodeTypes.TEXT &&\n    node.isEmpty\n  ) {\n    return\n  }\n\n  // Merge if both this and the previous node are text and those are consecutive.\n  // This happens on \"a < b\" or something like.\n  const prev = last(nodes)\n  if (\n    prev &&\n    prev.type === NodeTypes.TEXT &&\n    node.type === NodeTypes.TEXT &&\n    prev.loc.end.offset === node.loc.start.offset\n  ) {\n    prev.content += node.content\n    prev.isEmpty = prev.content.trim().length === 0\n    prev.loc.end = node.loc.end\n    prev.loc.source += node.loc.source\n  } else {\n    nodes.push(node)\n  }\n}\n\nfunction parseCDATA(\n  context: ParserContext,\n  ancestors: ElementNode[]\n): TemplateChildNode[] {\n  __DEV__ &&\n    assert(last(ancestors) == null || last(ancestors)!.ns !== Namespaces.HTML)\n  __DEV__ && assert(startsWith(context.source, '<![CDATA['))\n\n  advanceBy(context, 9)\n  const nodes = parseChildren(context, TextModes.CDATA, ancestors)\n  if (context.source.length === 0) {\n    emitError(context, ErrorCodes.EOF_IN_CDATA)\n  } else {\n    __DEV__ && assert(startsWith(context.source, ']]>'))\n    advanceBy(context, 3)\n  }\n\n  return nodes\n}\n\nfunction parseComment(context: ParserContext): CommentNode {\n  __DEV__ && assert(startsWith(context.source, '<!--'))\n\n  const start = getCursor(context)\n  let content: string\n\n  // Regular comment.\n  const match = /--(\\!)?>/.exec(context.source)\n  if (!match) {\n    content = context.source.slice(4)\n    advanceBy(context, context.source.length)\n    emitError(context, ErrorCodes.EOF_IN_COMMENT)\n  } else {\n    if (match.index <= 3) {\n      emitError(context, ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT)\n    }\n    if (match[1]) {\n      emitError(context, ErrorCodes.INCORRECTLY_CLOSED_COMMENT)\n    }\n    content = context.source.slice(4, match.index)\n\n    // Advancing with reporting nested comments.\n    const s = context.source.slice(0, match.index)\n    let prevIndex = 1,\n      nestedIndex = 0\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1)\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, ErrorCodes.NESTED_COMMENT)\n      }\n      prevIndex = nestedIndex + 1\n    }\n    advanceBy(context, match.index + match[0].length - prevIndex + 1)\n  }\n\n  return {\n    type: NodeTypes.COMMENT,\n    content,\n    loc: getSelection(context, start)\n  }\n}\n\nfunction parseBogusComment(context: ParserContext): CommentNode | undefined {\n  __DEV__ && assert(/^<(?:[\\!\\?]|\\/[^a-z>])/i.test(context.source))\n\n  const start = getCursor(context)\n  const contentStart = context.source[1] === '?' ? 1 : 2\n  let content: string\n\n  const closeIndex = context.source.indexOf('>')\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart)\n    advanceBy(context, context.source.length)\n  } else {\n    content = context.source.slice(contentStart, closeIndex)\n    advanceBy(context, closeIndex + 1)\n  }\n\n  return {\n    type: NodeTypes.COMMENT,\n    content,\n    loc: getSelection(context, start)\n  }\n}\n\nfunction parseElement(\n  context: ParserContext,\n  ancestors: ElementNode[]\n): ElementNode | undefined {\n  __DEV__ && assert(/^<[a-z]/i.test(context.source))\n\n  // Start tag.\n  const wasInPre = context.inPre\n  const parent = last(ancestors)\n  const element = parseTag(context, TagType.Start, parent)\n  const isPreBoundary = context.inPre && !wasInPre\n\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    return element\n  }\n\n  // Children.\n  ancestors.push(element)\n  const mode = context.options.getTextMode(element.tag, element.ns)\n  const children = parseChildren(context, mode, ancestors)\n  ancestors.pop()\n\n  element.children = children\n\n  // End tag.\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, TagType.End, parent)\n  } else {\n    emitError(context, ErrorCodes.X_MISSING_END_TAG)\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n      const first = children[0]\n      if (first && startsWith(first.loc.source, '<!--')) {\n        emitError(context, ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT)\n      }\n    }\n  }\n\n  element.loc = getSelection(context, element.loc.start)\n\n  if (isPreBoundary) {\n    context.inPre = false\n  }\n  return element\n}\n\nconst enum TagType {\n  Start,\n  End\n}\n\n/**\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\n */\nfunction parseTag(\n  context: ParserContext,\n  type: TagType,\n  parent: ElementNode | undefined\n): ElementNode {\n  __DEV__ && assert(/^<\\/?[a-z]/i.test(context.source))\n  __DEV__ &&\n    assert(\n      type === (startsWith(context.source, '</') ? TagType.End : TagType.Start)\n    )\n\n  // Tag open.\n  const start = getCursor(context)\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)!\n  const tag = match[1]\n  const ns = context.options.getNamespace(tag, parent)\n\n  advanceBy(context, match[0].length)\n  advanceSpaces(context)\n\n  // save current state in case we need to re-parse attributes with v-pre\n  const cursor = getCursor(context)\n  const currentSource = context.source\n\n  // Attributes.\n  let props = parseAttributes(context, type)\n\n  // check v-pre\n  if (\n    !context.inPre &&\n    props.some(p => p.type === NodeTypes.DIRECTIVE && p.name === 'pre')\n  ) {\n    context.inPre = true\n    // reset context\n    extend(context, cursor)\n    context.source = currentSource\n    // re-parse attrs and filter out v-pre itself\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre')\n  }\n\n  // Tag close.\n  let isSelfClosing = false\n  if (context.source.length === 0) {\n    emitError(context, ErrorCodes.EOF_IN_TAG)\n  } else {\n    isSelfClosing = startsWith(context.source, '/>')\n    if (type === TagType.End && isSelfClosing) {\n      emitError(context, ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS)\n    }\n    advanceBy(context, isSelfClosing ? 2 : 1)\n  }\n\n  let tagType = ElementTypes.ELEMENT\n  if (!context.inPre && !context.options.isCustomElement(tag)) {\n    if (context.options.isNativeTag) {\n      if (!context.options.isNativeTag(tag)) tagType = ElementTypes.COMPONENT\n    } else {\n      if (/^[A-Z]/.test(tag)) tagType = ElementTypes.COMPONENT\n    }\n\n    if (tag === 'slot') tagType = ElementTypes.SLOT\n    else if (tag === 'template') tagType = ElementTypes.TEMPLATE\n    else if (tag === 'portal' || tag === 'Portal') tagType = ElementTypes.PORTAL\n    else if (tag === 'suspense' || tag === 'Suspense')\n      tagType = ElementTypes.SUSPENSE\n  }\n\n  return {\n    type: NodeTypes.ELEMENT,\n    ns,\n    tag,\n    tagType,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: undefined // to be created during transform phase\n  }\n}\n\nfunction parseAttributes(\n  context: ParserContext,\n  type: TagType\n): (AttributeNode | DirectiveNode)[] {\n  const props = []\n  const attributeNames = new Set<string>()\n  while (\n    context.source.length > 0 &&\n    !startsWith(context.source, '>') &&\n    !startsWith(context.source, '/>')\n  ) {\n    if (startsWith(context.source, '/')) {\n      emitError(context, ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG)\n      advanceBy(context, 1)\n      advanceSpaces(context)\n      continue\n    }\n    if (type === TagType.End) {\n      emitError(context, ErrorCodes.END_TAG_WITH_ATTRIBUTES)\n    }\n\n    const attr = parseAttribute(context, attributeNames)\n    if (type === TagType.Start) {\n      props.push(attr)\n    }\n\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES)\n    }\n    advanceSpaces(context)\n  }\n  return props\n}\n\nfunction parseAttribute(\n  context: ParserContext,\n  nameSet: Set<string>\n): AttributeNode | DirectiveNode {\n  __DEV__ && assert(/^[^\\t\\r\\n\\f />]/.test(context.source))\n\n  // Name.\n  const start = getCursor(context)\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\n  const name = match[0]\n\n  if (nameSet.has(name)) {\n    emitError(context, ErrorCodes.DUPLICATE_ATTRIBUTE)\n  }\n  nameSet.add(name)\n\n  if (name[0] === '=') {\n    emitError(context, ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME)\n  }\n  {\n    const pattern = /[\"'<]/g\n    let m: RegExpExecArray | null\n    while ((m = pattern.exec(name)) !== null) {\n      emitError(\n        context,\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\n        m.index\n      )\n    }\n  }\n\n  advanceBy(context, name.length)\n\n  // Value\n  let value:\n    | {\n        content: string\n        isQuoted: boolean\n        loc: SourceLocation\n      }\n    | undefined = undefined\n\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context)\n    advanceBy(context, 1)\n    advanceSpaces(context)\n    value = parseAttributeValue(context)\n    if (!value) {\n      emitError(context, ErrorCodes.MISSING_ATTRIBUTE_VALUE)\n    }\n  }\n  const loc = getSelection(context, start)\n\n  if (!context.inPre && /^(v-|:|@|#)/.test(name)) {\n    const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)([^\\.]+))?(.+)?$/i.exec(\n      name\n    )!\n\n    let arg: ExpressionNode | undefined\n\n    if (match[2]) {\n      const startOffset = name.split(match[2], 2)!.shift()!.length\n      const loc = getSelection(\n        context,\n        getNewPosition(context, start, startOffset),\n        getNewPosition(context, start, startOffset + match[2].length)\n      )\n      let content = match[2]\n      let isStatic = true\n\n      if (content.startsWith('[')) {\n        isStatic = false\n\n        if (!content.endsWith(']')) {\n          emitError(\n            context,\n            ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\n          )\n        }\n\n        content = content.substr(1, content.length - 2)\n      }\n\n      arg = {\n        type: NodeTypes.SIMPLE_EXPRESSION,\n        content,\n        isStatic,\n        isConstant: isStatic,\n        loc\n      }\n    }\n\n    if (value && value.isQuoted) {\n      const valueLoc = value.loc\n      valueLoc.start.offset++\n      valueLoc.start.column++\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content)\n      valueLoc.source = valueLoc.source.slice(1, -1)\n    }\n\n    return {\n      type: NodeTypes.DIRECTIVE,\n      name:\n        match[1] ||\n        (startsWith(name, ':')\n          ? 'bind'\n          : startsWith(name, '@')\n            ? 'on'\n            : 'slot'),\n      exp: value && {\n        type: NodeTypes.SIMPLE_EXPRESSION,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // true by `transformExpression` to make it eligible for hoisting.\n        isConstant: false,\n        loc: value.loc\n      },\n      arg,\n      modifiers: match[3] ? match[3].substr(1).split('.') : [],\n      loc\n    }\n  }\n\n  return {\n    type: NodeTypes.ATTRIBUTE,\n    name,\n    value: value && {\n      type: NodeTypes.TEXT,\n      content: value.content,\n      isEmpty: value.content.trim().length === 0,\n      loc: value.loc\n    },\n    loc\n  }\n}\n\nfunction parseAttributeValue(\n  context: ParserContext\n):\n  | {\n      content: string\n      isQuoted: boolean\n      loc: SourceLocation\n    }\n  | undefined {\n  const start = getCursor(context)\n  let content: string\n\n  const quote = context.source[0]\n  const isQuoted = quote === `\"` || quote === `'`\n  if (isQuoted) {\n    // Quoted value.\n    advanceBy(context, 1)\n\n    const endIndex = context.source.indexOf(quote)\n    if (endIndex === -1) {\n      content = parseTextData(\n        context,\n        context.source.length,\n        TextModes.ATTRIBUTE_VALUE\n      )\n    } else {\n      content = parseTextData(context, endIndex, TextModes.ATTRIBUTE_VALUE)\n      advanceBy(context, 1)\n    }\n  } else {\n    // Unquoted\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source)\n    if (!match) {\n      return undefined\n    }\n    let unexpectedChars = /[\"'<=`]/g\n    let m: RegExpExecArray | null\n    while ((m = unexpectedChars.exec(match[0])) !== null) {\n      emitError(\n        context,\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\n        m.index\n      )\n    }\n    content = parseTextData(context, match[0].length, TextModes.ATTRIBUTE_VALUE)\n  }\n\n  return { content, isQuoted, loc: getSelection(context, start) }\n}\n\nfunction parseInterpolation(\n  context: ParserContext,\n  mode: TextModes\n): InterpolationNode | undefined {\n  const [open, close] = context.options.delimiters\n  __DEV__ && assert(startsWith(context.source, open))\n\n  const closeIndex = context.source.indexOf(close, open.length)\n  if (closeIndex === -1) {\n    emitError(context, ErrorCodes.X_MISSING_INTERPOLATION_END)\n    return undefined\n  }\n\n  const start = getCursor(context)\n  advanceBy(context, open.length)\n  const innerStart = getCursor(context)\n  const innerEnd = getCursor(context)\n  const rawContentLength = closeIndex - open.length\n  const rawContent = context.source.slice(0, rawContentLength)\n  const preTrimContent = parseTextData(context, rawContentLength, mode)\n  const content = preTrimContent.trim()\n  const startOffset = preTrimContent.indexOf(content)\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\n  }\n  const endOffset =\n    rawContentLength - (preTrimContent.length - content.length - startOffset)\n  advancePositionWithMutation(innerEnd, rawContent, endOffset)\n  advanceBy(context, close.length)\n\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      isConstant: false,\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  }\n}\n\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\n  __DEV__ && assert(context.source.length > 0)\n\n  const [open] = context.options.delimiters\n  const endIndex = Math.min(\n    ...[\n      context.source.indexOf('<', 1),\n      context.source.indexOf(open, 1),\n      mode === TextModes.CDATA ? context.source.indexOf(']]>') : -1,\n      context.source.length\n    ].filter(n => n !== -1)\n  )\n  __DEV__ && assert(endIndex > 0)\n\n  const start = getCursor(context)\n  const content = parseTextData(context, endIndex, mode)\n\n  return {\n    type: NodeTypes.TEXT,\n    content,\n    loc: getSelection(context, start),\n    isEmpty: !content.trim()\n  }\n}\n\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(\n  context: ParserContext,\n  length: number,\n  mode: TextModes\n): string {\n  if (mode === TextModes.RAWTEXT || mode === TextModes.CDATA) {\n    const text = context.source.slice(0, length)\n    advanceBy(context, length)\n    return text\n  }\n\n  // DATA or RCDATA. Entity decoding required.\n  const end = context.offset + length\n  let text: string = ''\n\n  while (context.offset < end) {\n    const head = /&(?:#x?)?/i.exec(context.source)\n    if (!head || context.offset + head.index >= end) {\n      const remaining = end - context.offset\n      text += context.source.slice(0, remaining)\n      advanceBy(context, remaining)\n      break\n    }\n\n    // Advance to the \"&\".\n    text += context.source.slice(0, head.index)\n    advanceBy(context, head.index)\n\n    if (head[0] === '&') {\n      // Named character reference.\n      let name = '',\n        value: string | undefined = undefined\n      if (/[0-9a-z]/i.test(context.source[1])) {\n        for (\n          let length = context.maxCRNameLength;\n          !value && length > 0;\n          --length\n        ) {\n          name = context.source.substr(1, length)\n          value = context.options.namedCharacterReferences[name]\n        }\n        if (value) {\n          const semi = name.endsWith(';')\n          if (\n            mode === TextModes.ATTRIBUTE_VALUE &&\n            !semi &&\n            /[=a-z0-9]/i.test(context.source[1 + name.length] || '')\n          ) {\n            text += '&'\n            text += name\n            advanceBy(context, 1 + name.length)\n          } else {\n            text += value\n            advanceBy(context, 1 + name.length)\n            if (!semi) {\n              emitError(\n                context,\n                ErrorCodes.MISSING_SEMICOLON_AFTER_CHARACTER_REFERENCE\n              )\n            }\n          }\n        } else {\n          emitError(context, ErrorCodes.UNKNOWN_NAMED_CHARACTER_REFERENCE)\n          text += '&'\n          text += name\n          advanceBy(context, 1 + name.length)\n        }\n      } else {\n        text += '&'\n        advanceBy(context, 1)\n      }\n    } else {\n      // Numeric character reference.\n      const hex = head[0] === '&#x'\n      const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/\n      const body = pattern.exec(context.source)\n      if (!body) {\n        text += head[0]\n        emitError(\n          context,\n          ErrorCodes.ABSENCE_OF_DIGITS_IN_NUMERIC_CHARACTER_REFERENCE\n        )\n        advanceBy(context, head[0].length)\n      } else {\n        // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\n        let cp = Number.parseInt(body[1], hex ? 16 : 10)\n        if (cp === 0) {\n          emitError(context, ErrorCodes.NULL_CHARACTER_REFERENCE)\n          cp = 0xfffd\n        } else if (cp > 0x10ffff) {\n          emitError(\n            context,\n            ErrorCodes.CHARACTER_REFERENCE_OUTSIDE_UNICODE_RANGE\n          )\n          cp = 0xfffd\n        } else if (cp >= 0xd800 && cp <= 0xdfff) {\n          emitError(context, ErrorCodes.SURROGATE_CHARACTER_REFERENCE)\n          cp = 0xfffd\n        } else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) {\n          emitError(context, ErrorCodes.NONCHARACTER_CHARACTER_REFERENCE)\n        } else if (\n          (cp >= 0x01 && cp <= 0x08) ||\n          cp === 0x0b ||\n          (cp >= 0x0d && cp <= 0x1f) ||\n          (cp >= 0x7f && cp <= 0x9f)\n        ) {\n          emitError(context, ErrorCodes.CONTROL_CHARACTER_REFERENCE)\n          cp = CCR_REPLACEMENTS[cp] || cp\n        }\n        text += String.fromCodePoint(cp)\n        advanceBy(context, body[0].length)\n        if (!body![0].endsWith(';')) {\n          emitError(\n            context,\n            ErrorCodes.MISSING_SEMICOLON_AFTER_CHARACTER_REFERENCE\n          )\n        }\n      }\n    }\n  }\n  return text\n}\n\nfunction getCursor(context: ParserContext): Position {\n  const { column, line, offset } = context\n  return { column, line, offset }\n}\n\nfunction getSelection(\n  context: ParserContext,\n  start: Position,\n  end?: Position\n): SourceLocation {\n  end = end || getCursor(context)\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  }\n}\n\nfunction last<T>(xs: T[]): T | undefined {\n  return xs[xs.length - 1]\n}\n\nfunction startsWith(source: string, searchString: string): boolean {\n  return source.startsWith(searchString)\n}\n\nfunction advanceBy(context: ParserContext, numberOfCharacters: number): void {\n  const { source } = context\n  __DEV__ && assert(numberOfCharacters <= source.length)\n  advancePositionWithMutation(context, source, numberOfCharacters)\n  context.source = source.slice(numberOfCharacters)\n}\n\nfunction advanceSpaces(context: ParserContext): void {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\n  if (match) {\n    advanceBy(context, match[0].length)\n  }\n}\n\nfunction getNewPosition(\n  context: ParserContext,\n  start: Position,\n  numberOfCharacters: number\n): Position {\n  return advancePositionWithClone(\n    start,\n    context.originalSource.slice(start.offset, numberOfCharacters),\n    numberOfCharacters\n  )\n}\n\nfunction emitError(\n  context: ParserContext,\n  code: ErrorCodes,\n  offset?: number\n): void {\n  const loc = getCursor(context)\n  if (offset) {\n    loc.offset += offset\n    loc.column += offset\n  }\n  context.options.onError(\n    createCompilerError(code, {\n      start: loc,\n      end: loc,\n      source: ''\n    })\n  )\n}\n\nfunction isEnd(\n  context: ParserContext,\n  mode: TextModes,\n  ancestors: ElementNode[]\n): boolean {\n  const s = context.source\n\n  switch (mode) {\n    case TextModes.DATA:\n      if (startsWith(s, '</')) {\n        //TODO: probably bad performance\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true\n          }\n        }\n      }\n      break\n\n    case TextModes.RCDATA:\n    case TextModes.RAWTEXT: {\n      const parent = last(ancestors)\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\n        return true\n      }\n      break\n    }\n\n    case TextModes.CDATA:\n      if (startsWith(s, ']]>')) {\n        return true\n      }\n      break\n  }\n\n  return !s\n}\n\nfunction startsWithEndTagOpen(source: string, tag: string): boolean {\n  return (\n    startsWith(source, '</') &&\n    source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\n    /[\\t\\n\\f />]/.test(source[2 + tag.length] || '>')\n  )\n}\n\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\nconst CCR_REPLACEMENTS: { [key: number]: number | undefined } = {\n  0x80: 0x20ac,\n  0x82: 0x201a,\n  0x83: 0x0192,\n  0x84: 0x201e,\n  0x85: 0x2026,\n  0x86: 0x2020,\n  0x87: 0x2021,\n  0x88: 0x02c6,\n  0x89: 0x2030,\n  0x8a: 0x0160,\n  0x8b: 0x2039,\n  0x8c: 0x0152,\n  0x8e: 0x017d,\n  0x91: 0x2018,\n  0x92: 0x2019,\n  0x93: 0x201c,\n  0x94: 0x201d,\n  0x95: 0x2022,\n  0x96: 0x2013,\n  0x97: 0x2014,\n  0x98: 0x02dc,\n  0x99: 0x2122,\n  0x9a: 0x0161,\n  0x9b: 0x203a,\n  0x9c: 0x0153,\n  0x9e: 0x017e,\n  0x9f: 0x0178\n}\n","import {\n  RootNode,\n  NodeTypes,\n  TemplateChildNode,\n  SimpleExpressionNode,\n  ElementTypes,\n  ElementCodegenNode,\n  PlainElementNode,\n  ComponentNode,\n  TemplateNode,\n  ElementNode,\n  PlainElementCodegenNode\n} from '../ast'\nimport { TransformContext } from '../transform'\nimport { WITH_DIRECTIVES } from '../runtimeHelpers'\nimport { PatchFlags, isString, isSymbol } from '@vue/shared'\nimport { isSlotOutlet, findProp } from '../utils'\n\nexport function hoistStatic(root: RootNode, context: TransformContext) {\n  walk(\n    root.children,\n    context,\n    new Map(),\n    isSingleElementRoot(root, root.children[0])\n  )\n}\n\nexport function isSingleElementRoot(\n  root: RootNode,\n  child: TemplateChildNode\n): child is PlainElementNode | ComponentNode | TemplateNode {\n  const { children } = root\n  return (\n    children.length === 1 &&\n    child.type === NodeTypes.ELEMENT &&\n    !isSlotOutlet(child)\n  )\n}\n\nfunction walk(\n  children: TemplateChildNode[],\n  context: TransformContext,\n  resultCache: Map<TemplateChildNode, boolean>,\n  doNotHoistNode: boolean = false\n) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    // only plain elements are eligible for hoisting.\n    if (\n      child.type === NodeTypes.ELEMENT &&\n      child.tagType === ElementTypes.ELEMENT\n    ) {\n      if (!doNotHoistNode && isStaticNode(child, resultCache)) {\n        // whole tree is static\n        child.codegenNode = context.hoist(child.codegenNode!)\n        continue\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        const flag = getPatchFlag(child)\n        if (\n          (!flag ||\n            flag === PatchFlags.NEED_PATCH ||\n            flag === PatchFlags.TEXT) &&\n          !hasDynamicKeyOrRef(child) &&\n          !hasCachedProps(child)\n        ) {\n          const props = getNodeProps(child)\n          if (props && props !== `null`) {\n            getVNodeCall(child).arguments[1] = context.hoist(props)\n          }\n        }\n      }\n    }\n    if (child.type === NodeTypes.ELEMENT) {\n      walk(child.children, context, resultCache)\n    } else if (child.type === NodeTypes.FOR) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child.children, context, resultCache, child.children.length === 1)\n    } else if (child.type === NodeTypes.IF) {\n      for (let i = 0; i < child.branches.length; i++) {\n        const branchChildren = child.branches[i].children\n        // Do not hoist v-if single child because it has to be a block\n        walk(branchChildren, context, resultCache, branchChildren.length === 1)\n      }\n    }\n  }\n}\n\nexport function isStaticNode(\n  node: TemplateChildNode | SimpleExpressionNode,\n  resultCache: Map<TemplateChildNode, boolean> = new Map()\n): boolean {\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      if (node.tagType !== ElementTypes.ELEMENT) {\n        return false\n      }\n      const cached = resultCache.get(node)\n      if (cached !== undefined) {\n        return cached\n      }\n      const flag = getPatchFlag(node)\n      if (!flag && !hasDynamicKeyOrRef(node) && !hasCachedProps(node)) {\n        // element self is static. check its children.\n        for (let i = 0; i < node.children.length; i++) {\n          if (!isStaticNode(node.children[i], resultCache)) {\n            resultCache.set(node, false)\n            return false\n          }\n        }\n        resultCache.set(node, true)\n        return true\n      } else {\n        resultCache.set(node, false)\n        return false\n      }\n    case NodeTypes.TEXT:\n    case NodeTypes.COMMENT:\n      return true\n    case NodeTypes.IF:\n    case NodeTypes.FOR:\n      return false\n    case NodeTypes.INTERPOLATION:\n    case NodeTypes.TEXT_CALL:\n      return isStaticNode(node.content, resultCache)\n    case NodeTypes.SIMPLE_EXPRESSION:\n      return node.isConstant\n    case NodeTypes.COMPOUND_EXPRESSION:\n      return node.children.every(child => {\n        return (\n          isString(child) || isSymbol(child) || isStaticNode(child, resultCache)\n        )\n      })\n    default:\n      if (__DEV__) {\n        const exhaustiveCheck: never = node\n        exhaustiveCheck\n      }\n      return false\n  }\n}\n\nfunction hasDynamicKeyOrRef(node: ElementNode): boolean {\n  return !!(findProp(node, 'key', true) || findProp(node, 'ref', true))\n}\n\nfunction hasCachedProps(node: PlainElementNode): boolean {\n  if (__BROWSER__) {\n    return false\n  }\n  const props = getNodeProps(node)\n  if (\n    props &&\n    props !== 'null' &&\n    props.type === NodeTypes.JS_OBJECT_EXPRESSION\n  ) {\n    const { properties } = props\n    for (let i = 0; i < properties.length; i++) {\n      if (properties[i].value.type === NodeTypes.JS_CACHE_EXPRESSION) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction getVNodeCall(node: PlainElementNode) {\n  let codegenNode = node.codegenNode as ElementCodegenNode\n  if (codegenNode.callee === WITH_DIRECTIVES) {\n    codegenNode = codegenNode.arguments[0]\n  }\n  return codegenNode\n}\n\nfunction getVNodeArgAt(\n  node: PlainElementNode,\n  index: number\n): PlainElementCodegenNode['arguments'][number] {\n  return getVNodeCall(node).arguments[index]\n}\n\nfunction getPatchFlag(node: PlainElementNode): number | undefined {\n  const flag = getVNodeArgAt(node, 3) as string\n  return flag ? parseInt(flag, 10) : undefined\n}\n\nfunction getNodeProps(node: PlainElementNode) {\n  return getVNodeArgAt(node, 1) as PlainElementCodegenNode['arguments'][1]\n}\n","import {\n  RootNode,\n  NodeTypes,\n  ParentNode,\n  TemplateChildNode,\n  ElementNode,\n  DirectiveNode,\n  Property,\n  ExpressionNode,\n  createSimpleExpression,\n  JSChildNode,\n  SimpleExpressionNode,\n  ElementTypes,\n  ElementCodegenNode,\n  ComponentCodegenNode,\n  createCallExpression,\n  CacheExpression,\n  createCacheExpression\n} from './ast'\nimport { isString, isArray } from '@vue/shared'\nimport { CompilerError, defaultOnError } from './errors'\nimport {\n  TO_STRING,\n  COMMENT,\n  CREATE_VNODE,\n  FRAGMENT,\n  helperNameMap,\n  WITH_DIRECTIVES,\n  CREATE_BLOCK\n} from './runtimeHelpers'\nimport { isVSlot, createBlockExpression } from './utils'\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\n\n// There are two types of transforms:\n//\n// - NodeTransform:\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\n//   replace or remove the node being processed.\nexport type NodeTransform = (\n  node: RootNode | TemplateChildNode,\n  context: TransformContext\n) => void | (() => void) | (() => void)[]\n\n// - DirectiveTransform:\n//   Transforms that handles a single directive attribute on an element.\n//   It translates the raw directive into actual props for the VNode.\nexport type DirectiveTransform = (\n  dir: DirectiveNode,\n  node: ElementNode,\n  context: TransformContext,\n  // a platform specific compiler can import the base transform and augment\n  // it by passing in this optional argument.\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult\n) => DirectiveTransformResult\n\nexport interface DirectiveTransformResult {\n  props: Property[]\n  needRuntime: boolean | symbol\n}\n\n// A structural directive transform is a technically a NodeTransform;\n// Only v-if and v-for fall into this category.\nexport type StructuralDirectiveTransform = (\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext\n) => void | (() => void)\n\nexport interface TransformOptions {\n  nodeTransforms?: NodeTransform[]\n  directiveTransforms?: { [name: string]: DirectiveTransform }\n  prefixIdentifiers?: boolean\n  hoistStatic?: boolean\n  cacheHandlers?: boolean\n  onError?: (error: CompilerError) => void\n}\n\nexport interface TransformContext extends Required<TransformOptions> {\n  root: RootNode\n  helpers: Set<symbol>\n  components: Set<string>\n  directives: Set<string>\n  hoists: JSChildNode[]\n  cached: number\n  identifiers: { [name: string]: number | undefined }\n  scopes: {\n    vFor: number\n    vSlot: number\n    vPre: number\n    vOnce: number\n  }\n  parent: ParentNode | null\n  childIndex: number\n  currentNode: RootNode | TemplateChildNode | null\n  helper<T extends symbol>(name: T): T\n  helperString(name: symbol): string\n  replaceNode(node: TemplateChildNode): void\n  removeNode(node?: TemplateChildNode): void\n  onNodeRemoved(): void\n  addIdentifiers(exp: ExpressionNode | string): void\n  removeIdentifiers(exp: ExpressionNode | string): void\n  hoist(exp: JSChildNode): SimpleExpressionNode\n  cache<T extends JSChildNode>(exp: T): CacheExpression | T\n}\n\nfunction createTransformContext(\n  root: RootNode,\n  {\n    prefixIdentifiers = false,\n    hoistStatic = false,\n    cacheHandlers = false,\n    nodeTransforms = [],\n    directiveTransforms = {},\n    onError = defaultOnError\n  }: TransformOptions\n): TransformContext {\n  const context: TransformContext = {\n    root,\n    helpers: new Set(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    cached: 0,\n    identifiers: {},\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    prefixIdentifiers,\n    hoistStatic,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    onError,\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    helper(name) {\n      context.helpers.add(name)\n      return name\n    },\n    helperString(name) {\n      return (\n        (context.prefixIdentifiers ? `` : `_`) +\n        helperNameMap[context.helper(name)]\n      )\n    },\n    replaceNode(node) {\n      /* istanbul ignore if */\n      if (__DEV__) {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`)\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`)\n        }\n      }\n      context.parent!.children[context.childIndex] = context.currentNode = node\n    },\n    removeNode(node) {\n      if (__DEV__ && !context.parent) {\n        throw new Error(`Cannot remove root node.`)\n      }\n      const list = context.parent!.children\n      const removalIndex = node\n        ? list.indexOf(node)\n        : context.currentNode\n          ? context.childIndex\n          : -1\n      /* istanbul ignore if */\n      if (__DEV__ && removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`)\n      }\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null\n        context.onNodeRemoved()\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--\n          context.onNodeRemoved()\n        }\n      }\n      context.parent!.children.splice(removalIndex, 1)\n    },\n    onNodeRemoved: () => {},\n    addIdentifiers(exp) {\n      // identifier tracking only happens in non-browser builds.\n      if (!__BROWSER__) {\n        if (isString(exp)) {\n          addId(exp)\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId)\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          addId(exp.content)\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      if (!__BROWSER__) {\n        if (isString(exp)) {\n          removeId(exp)\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId)\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          removeId(exp.content)\n        }\n      }\n    },\n    hoist(exp) {\n      context.hoists.push(exp)\n      return createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc\n      )\n    },\n    cache(exp) {\n      return cacheHandlers ? createCacheExpression(++context.cached, exp) : exp\n    }\n  }\n\n  function addId(id: string) {\n    const { identifiers } = context\n    if (identifiers[id] === undefined) {\n      identifiers[id] = 0\n    }\n    identifiers[id]!++\n  }\n\n  function removeId(id: string) {\n    context.identifiers[id]!--\n  }\n\n  return context\n}\n\nexport function transform(root: RootNode, options: TransformOptions) {\n  const context = createTransformContext(root, options)\n  traverseNode(root, context)\n  if (options.hoistStatic) {\n    hoistStatic(root, context)\n  }\n  finalizeRoot(root, context)\n}\n\nfunction finalizeRoot(root: RootNode, context: TransformContext) {\n  const { helper } = context\n  const { children } = root\n  const child = children[0]\n  if (children.length === 1) {\n    // if the single child is an element, turn it into a block.\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      const codegenNode = child.codegenNode as\n        | ElementCodegenNode\n        | ComponentCodegenNode\n      if (codegenNode.callee === WITH_DIRECTIVES) {\n        codegenNode.arguments[0].callee = helper(CREATE_BLOCK)\n      } else {\n        codegenNode.callee = helper(CREATE_BLOCK)\n      }\n      root.codegenNode = createBlockExpression(codegenNode, context)\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    root.codegenNode = createBlockExpression(\n      createCallExpression(helper(CREATE_BLOCK), [\n        helper(FRAGMENT),\n        `null`,\n        root.children\n      ]),\n      context\n    )\n  } else {\n    // no children = noop. codegen will return null.\n  }\n  // finalize meta information\n  root.helpers = [...context.helpers]\n  root.components = [...context.components]\n  root.directives = [...context.directives]\n  root.hoists = context.hoists\n  root.cached = context.cached\n}\n\nexport function traverseChildren(\n  parent: ParentNode,\n  context: TransformContext\n) {\n  let i = 0\n  const nodeRemoved = () => {\n    i--\n  }\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i]\n    if (isString(child)) continue\n    context.currentNode = child\n    context.parent = parent\n    context.childIndex = i\n    context.onNodeRemoved = nodeRemoved\n    traverseNode(child, context)\n  }\n}\n\nexport function traverseNode(\n  node: RootNode | TemplateChildNode,\n  context: TransformContext\n) {\n  // apply transform plugins\n  const { nodeTransforms } = context\n  const exitFns = []\n  for (let i = 0; i < nodeTransforms.length; i++) {\n    const onExit = nodeTransforms[i](node, context)\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push(...onExit)\n      } else {\n        exitFns.push(onExit)\n      }\n    }\n    if (!context.currentNode) {\n      // node was removed\n      return\n    } else {\n      // node may have been replaced\n      node = context.currentNode\n    }\n  }\n\n  switch (node.type) {\n    case NodeTypes.COMMENT:\n      // inject import for the Comment symbol, which is needed for creating\n      // comment nodes with `createVNode`\n      context.helper(CREATE_VNODE)\n      context.helper(COMMENT)\n      break\n    case NodeTypes.INTERPOLATION:\n      // no need to traverse, but we need to inject toString helper\n      context.helper(TO_STRING)\n      break\n\n    // for container types, further traverse downwards\n    case NodeTypes.IF:\n      for (let i = 0; i < node.branches.length; i++) {\n        traverseChildren(node.branches[i], context)\n      }\n      break\n    case NodeTypes.FOR:\n    case NodeTypes.ELEMENT:\n    case NodeTypes.ROOT:\n      traverseChildren(node, context)\n      break\n  }\n\n  // exit transforms\n  let i = exitFns.length\n  while (i--) {\n    exitFns[i]()\n  }\n}\n\nexport function createStructuralDirectiveTransform(\n  name: string | RegExp,\n  fn: StructuralDirectiveTransform\n): NodeTransform {\n  const matches = isString(name)\n    ? (n: string) => n === name\n    : (n: string) => name.test(n)\n\n  return (node, context) => {\n    if (node.type === NodeTypes.ELEMENT) {\n      const { props } = node\n      // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\n        return\n      }\n      const exitFns = []\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i]\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1)\n          i--\n          const onExit = fn(node, prop, context)\n          if (onExit) exitFns.push(onExit)\n        }\n      }\n      return exitFns\n    }\n  }\n}\n","import {\n  RootNode,\n  TemplateChildNode,\n  TextNode,\n  CommentNode,\n  ExpressionNode,\n  NodeTypes,\n  JSChildNode,\n  CallExpression,\n  ArrayExpression,\n  ObjectExpression,\n  SourceLocation,\n  Position,\n  InterpolationNode,\n  CompoundExpressionNode,\n  SimpleExpressionNode,\n  FunctionExpression,\n  SequenceExpression,\n  ConditionalExpression,\n  CacheExpression\n} from './ast'\nimport { SourceMapGenerator, RawSourceMap } from 'source-map'\nimport {\n  advancePositionWithMutation,\n  assert,\n  isSimpleIdentifier,\n  loadDep,\n  toValidAssetId\n} from './utils'\nimport { isString, isArray, isSymbol } from '@vue/shared'\nimport {\n  TO_STRING,\n  CREATE_VNODE,\n  COMMENT,\n  helperNameMap,\n  RESOLVE_COMPONENT,\n  RESOLVE_DIRECTIVE\n} from './runtimeHelpers'\n\ntype CodegenNode = TemplateChildNode | JSChildNode\n\nexport interface CodegenOptions {\n  // - Module mode will generate ES module import statements for helpers\n  //   and export the render function as the default export.\n  // - Function mode will generate a single `const { helpers... } = Vue`\n  //   statement and return the render function. It is meant to be used with\n  //   `new Function(code)()` to generate a render function at runtime.\n  // Default: 'function'\n  mode?: 'module' | 'function'\n  // Prefix suitable identifiers with _ctx.\n  // If this option is false, the generated code will be wrapped in a\n  // `with (this) { ... }` block.\n  // Default: false\n  prefixIdentifiers?: boolean\n  // Generate source map?\n  // Default: false\n  sourceMap?: boolean\n  // Filename for source map generation.\n  // Default: `template.vue.html`\n  filename?: string\n}\n\nexport interface CodegenResult {\n  code: string\n  ast: RootNode\n  map?: RawSourceMap\n}\n\nexport interface CodegenContext extends Required<CodegenOptions> {\n  source: string\n  code: string\n  line: number\n  column: number\n  offset: number\n  indentLevel: number\n  map?: SourceMapGenerator\n  helper(key: symbol): string\n  push(code: string, node?: CodegenNode, openOnly?: boolean): void\n  resetMapping(loc: SourceLocation): void\n  indent(): void\n  deindent(withoutNewLine?: boolean): void\n  newline(): void\n}\n\nfunction createCodegenContext(\n  ast: RootNode,\n  {\n    mode = 'function',\n    prefixIdentifiers = mode === 'module',\n    sourceMap = false,\n    filename = `template.vue.html`\n  }: CodegenOptions\n): CodegenContext {\n  const context: CodegenContext = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    source: ast.loc.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n\n    // lazy require source-map implementation, only in non-browser builds!\n    map:\n      __BROWSER__ || !sourceMap\n        ? undefined\n        : new (loadDep('source-map')).SourceMapGenerator(),\n\n    helper(key) {\n      const name = helperNameMap[key]\n      return prefixIdentifiers ? name : `_${name}`\n    },\n    push(code, node, openOnly) {\n      context.code += code\n      if (!__BROWSER__ && context.map) {\n        if (node) {\n          let name\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, '')\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content\n            }\n          }\n          addMapping(node.loc.start, name)\n        }\n        advancePositionWithMutation(context, code)\n        if (node && !openOnly) {\n          addMapping(node.loc.end)\n        }\n      }\n    },\n    resetMapping(loc: SourceLocation) {\n      if (!__BROWSER__ && context.map) {\n        addMapping(loc.start)\n      }\n    },\n    indent() {\n      newline(++context.indentLevel)\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel\n      } else {\n        newline(--context.indentLevel)\n      }\n    },\n    newline() {\n      newline(context.indentLevel)\n    }\n  }\n\n  function newline(n: number) {\n    context.push('\\n' + `  `.repeat(n))\n  }\n\n  function addMapping(loc: Position, name?: string) {\n    context.map!.addMapping({\n      name,\n      source: context.filename,\n      original: {\n        line: loc.line,\n        column: loc.column - 1 // source-map column is 0 based\n      },\n      generated: {\n        line: context.line,\n        column: context.column - 1\n      }\n    })\n  }\n\n  if (!__BROWSER__ && context.map) {\n    context.map.setSourceContent(filename, context.source)\n  }\n  return context\n}\n\nexport function generate(\n  ast: RootNode,\n  options: CodegenOptions = {}\n): CodegenResult {\n  const context = createCodegenContext(ast, options)\n  const {\n    mode,\n    push,\n    helper,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline\n  } = context\n  const hasHelpers = ast.helpers.length > 0\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\n\n  // preambles\n  if (mode === 'function') {\n    // Generate const declaration for helpers\n    // In prefix mode, we place the const declaration at top so it's done\n    // only once; But if we not prefixing, we place the declaration inside the\n    // with block so it doesn't incur the `in` check cost for every helper access.\n    if (hasHelpers) {\n      if (prefixIdentifiers) {\n        push(`const { ${ast.helpers.map(helper).join(', ')} } = Vue\\n`)\n      } else {\n        // \"with\" mode.\n        // save Vue in a separate variable to avoid collision\n        push(`const _Vue = Vue\\n`)\n        // in \"with\" mode, helpers are declared inside the with block to avoid\n        // has check cost, but hoists are lifted out of the function - we need\n        // to provide the helper here.\n        if (ast.hoists.length) {\n          push(`const _${helperNameMap[CREATE_VNODE]} = Vue.createVNode\\n`)\n          if (ast.helpers.includes(COMMENT)) {\n            push(`const _${helperNameMap[COMMENT]} = Vue.Comment\\n`)\n          }\n        }\n      }\n    }\n    genHoists(ast.hoists, context)\n    newline()\n    push(`return `)\n  } else {\n    // generate import statements for helpers\n    if (hasHelpers) {\n      push(`import { ${ast.helpers.map(helper).join(', ')} } from \"vue\"\\n`)\n    }\n    genHoists(ast.hoists, context)\n    newline()\n    push(`export default `)\n  }\n\n  // enter render function\n  push(`function render() {`)\n  indent()\n\n  if (useWithBlock) {\n    push(`with (this) {`)\n    indent()\n    // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n    if (hasHelpers) {\n      push(\n        `const { ${ast.helpers\n          .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\n          .join(', ')} } = _Vue`\n      )\n      newline()\n      newline()\n    }\n  } else {\n    push(`const _ctx = this`)\n    if (ast.cached > 0) {\n      newline()\n      push(`const _cache = _ctx.$cache`)\n    }\n    newline()\n  }\n\n  // generate asset resolution statements\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context)\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context)\n  }\n  if (ast.components.length || ast.directives.length) {\n    newline()\n  }\n\n  // generate the VNode tree expression\n  push(`return `)\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context)\n  } else {\n    push(`null`)\n  }\n\n  if (useWithBlock) {\n    deindent()\n    push(`}`)\n  }\n\n  deindent()\n  push(`}`)\n  return {\n    ast,\n    code: context.code,\n    map: context.map ? context.map.toJSON() : undefined\n  }\n}\n\nfunction genAssets(\n  assets: string[],\n  type: 'component' | 'directive',\n  context: CodegenContext\n) {\n  const resolver = context.helper(\n    type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  )\n  for (let i = 0; i < assets.length; i++) {\n    const id = assets[i]\n    context.push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)})`\n    )\n    context.newline()\n  }\n}\n\nfunction genHoists(hoists: JSChildNode[], context: CodegenContext) {\n  if (!hoists.length) {\n    return\n  }\n  context.newline()\n  hoists.forEach((exp, i) => {\n    context.push(`const _hoisted_${i + 1} = `)\n    genNode(exp, context)\n    context.newline()\n  })\n}\n\nfunction isText(n: string | CodegenNode) {\n  return (\n    isString(n) ||\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\n    n.type === NodeTypes.TEXT ||\n    n.type === NodeTypes.INTERPOLATION ||\n    n.type === NodeTypes.COMPOUND_EXPRESSION\n  )\n}\n\nfunction genNodeListAsArray(\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\n  context: CodegenContext\n) {\n  const multilines =\n    nodes.length > 3 ||\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\n  context.push(`[`)\n  multilines && context.indent()\n  genNodeList(nodes, context, multilines)\n  multilines && context.deindent()\n  context.push(`]`)\n}\n\nfunction genNodeList(\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\n  context: CodegenContext,\n  multilines: boolean = false\n) {\n  const { push, newline } = context\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i]\n    if (isString(node)) {\n      push(node)\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context)\n    } else {\n      genNode(node, context)\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        push(',')\n        newline()\n      } else {\n        push(', ')\n      }\n    }\n  }\n}\n\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\n  if (isString(node)) {\n    context.push(node)\n    return\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node))\n    return\n  }\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n    case NodeTypes.IF:\n    case NodeTypes.FOR:\n      __DEV__ &&\n        assert(\n          node.codegenNode != null,\n          `Codegen node is missing for element/if/for node. ` +\n            `Apply appropriate transforms first.`\n        )\n      genNode(node.codegenNode!, context)\n      break\n    case NodeTypes.TEXT:\n      genText(node, context)\n      break\n    case NodeTypes.SIMPLE_EXPRESSION:\n      genExpression(node, context)\n      break\n    case NodeTypes.INTERPOLATION:\n      genInterpolation(node, context)\n      break\n    case NodeTypes.TEXT_CALL:\n      genNode(node.codegenNode, context)\n      break\n    case NodeTypes.COMPOUND_EXPRESSION:\n      genCompoundExpression(node, context)\n      break\n    case NodeTypes.COMMENT:\n      genComment(node, context)\n      break\n    case NodeTypes.JS_CALL_EXPRESSION:\n      genCallExpression(node, context)\n      break\n    case NodeTypes.JS_OBJECT_EXPRESSION:\n      genObjectExpression(node, context)\n      break\n    case NodeTypes.JS_ARRAY_EXPRESSION:\n      genArrayExpression(node, context)\n      break\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\n      genFunctionExpression(node, context)\n      break\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\n      genSequenceExpression(node, context)\n      break\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\n      genConditionalExpression(node, context)\n      break\n    case NodeTypes.JS_CACHE_EXPRESSION:\n      genCacheExpression(node, context)\n      break\n    /* istanbul ignore next */\n    default:\n      if (__DEV__) {\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\n        // make sure we exhaust all possible types\n        const exhaustiveCheck: never = node\n        return exhaustiveCheck\n      }\n  }\n}\n\nfunction genText(\n  node: TextNode | SimpleExpressionNode,\n  context: CodegenContext\n) {\n  context.push(JSON.stringify(node.content), node)\n}\n\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\n  const { content, isStatic } = node\n  context.push(isStatic ? JSON.stringify(content) : content, node)\n}\n\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\n  const { push, helper } = context\n  push(`${helper(TO_STRING)}(`)\n  genNode(node.content, context)\n  push(`)`)\n}\n\nfunction genCompoundExpression(\n  node: CompoundExpressionNode,\n  context: CodegenContext\n) {\n  for (let i = 0; i < node.children!.length; i++) {\n    const child = node.children![i]\n    if (isString(child)) {\n      context.push(child)\n    } else {\n      genNode(child, context)\n    }\n  }\n}\n\nfunction genExpressionAsPropertyKey(\n  node: ExpressionNode,\n  context: CodegenContext\n) {\n  const { push } = context\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\n    push(`[`)\n    genCompoundExpression(node, context)\n    push(`]`)\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    const text = isSimpleIdentifier(node.content)\n      ? node.content\n      : JSON.stringify(node.content)\n    push(text, node)\n  } else {\n    push(`[${node.content}]`, node)\n  }\n}\n\nfunction genComment(node: CommentNode, context: CodegenContext) {\n  if (__DEV__) {\n    const { push, helper } = context\n    push(\n      `${helper(CREATE_VNODE)}(${helper(COMMENT)}, null, ${JSON.stringify(\n        node.content\n      )})`,\n      node\n    )\n  }\n}\n\n// JavaScript\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\n  const callee = isString(node.callee)\n    ? node.callee\n    : context.helper(node.callee)\n  context.push(callee + `(`, node, true)\n  genNodeList(node.arguments, context)\n  context.push(`)`)\n}\n\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\n  const { push, indent, deindent, newline, resetMapping } = context\n  const { properties } = node\n  if (!properties.length) {\n    push(`{}`, node)\n    return\n  }\n  const multilines =\n    properties.length > 1 ||\n    ((!__BROWSER__ || __DEV__) &&\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\n  push(multilines ? `{` : `{ `)\n  multilines && indent()\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value, loc } = properties[i]\n    resetMapping(loc) // reset source mapping for every property.\n    // key\n    genExpressionAsPropertyKey(key, context)\n    push(`: `)\n    // value\n    genNode(value, context)\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(`,`)\n      newline()\n    }\n  }\n  multilines && deindent()\n  const lastChar = context.code[context.code.length - 1]\n  push(multilines || /[\\])}]/.test(lastChar) ? `}` : ` }`)\n}\n\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\n  genNodeListAsArray(node.elements, context)\n}\n\nfunction genFunctionExpression(\n  node: FunctionExpression,\n  context: CodegenContext\n) {\n  const { push, indent, deindent } = context\n  const { params, returns, newline } = node\n  push(`(`, node)\n  if (isArray(params)) {\n    genNodeList(params, context)\n  } else if (params) {\n    genNode(params, context)\n  }\n  push(`) => `)\n  if (newline) {\n    push(`{`)\n    indent()\n    push(`return `)\n  }\n  if (isArray(returns)) {\n    genNodeListAsArray(returns, context)\n  } else {\n    genNode(returns, context)\n  }\n  if (newline) {\n    deindent()\n    push(`}`)\n  }\n}\n\nfunction genConditionalExpression(\n  node: ConditionalExpression,\n  context: CodegenContext\n) {\n  const { test, consequent, alternate } = node\n  const { push, indent, deindent, newline } = context\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\n    const needsParens = !isSimpleIdentifier(test.content)\n    needsParens && push(`(`)\n    genExpression(test, context)\n    needsParens && push(`)`)\n  } else {\n    push(`(`)\n    genCompoundExpression(test, context)\n    push(`)`)\n  }\n  indent()\n  context.indentLevel++\n  push(`? `)\n  genNode(consequent, context)\n  context.indentLevel--\n  newline()\n  push(`: `)\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\n  if (!isNested) {\n    context.indentLevel++\n  }\n  genNode(alternate, context)\n  if (!isNested) {\n    context.indentLevel--\n  }\n  deindent(true /* without newline */)\n}\n\nfunction genSequenceExpression(\n  node: SequenceExpression,\n  context: CodegenContext\n) {\n  context.push(`(`)\n  genNodeList(node.expressions, context)\n  context.push(`)`)\n}\n\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\n  context.push(`_cache[${node.index}] || (_cache[${node.index}] = `)\n  genNode(node.value, context)\n  context.push(`)`)\n}\n","import {\n  createStructuralDirectiveTransform,\n  traverseChildren,\n  TransformContext\n} from '../transform'\nimport {\n  NodeTypes,\n  ElementTypes,\n  ElementNode,\n  DirectiveNode,\n  IfBranchNode,\n  SimpleExpressionNode,\n  createSequenceExpression,\n  createCallExpression,\n  createConditionalExpression,\n  ConditionalExpression,\n  CallExpression,\n  createSimpleExpression,\n  createObjectProperty,\n  createObjectExpression,\n  IfCodegenNode,\n  IfConditionalExpression,\n  BlockCodegenNode,\n  SlotOutletCodegenNode,\n  ElementCodegenNode,\n  ComponentCodegenNode\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { processExpression } from './transformExpression'\nimport {\n  OPEN_BLOCK,\n  CREATE_BLOCK,\n  COMMENT,\n  FRAGMENT,\n  WITH_DIRECTIVES,\n  CREATE_VNODE\n} from '../runtimeHelpers'\nimport { injectProp } from '../utils'\n\nexport const transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    if (\n      dir.name !== 'else' &&\n      (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\n    ) {\n      const loc = dir.exp ? dir.exp.loc : node.loc\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc)\n      )\n      dir.exp = createSimpleExpression(`true`, false, loc)\n    }\n\n    if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\n      // dir.exp can only be simple expression because vIf transform is applied\n      // before expression transform.\n      dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\n    }\n\n    if (dir.name === 'if') {\n      const branch = createIfBranch(node, dir)\n      const codegenNode = createSequenceExpression([\n        createCallExpression(context.helper(OPEN_BLOCK))\n      ]) as IfCodegenNode\n\n      context.replaceNode({\n        type: NodeTypes.IF,\n        loc: node.loc,\n        branches: [branch],\n        codegenNode\n      })\n\n      // Exit callback. Complete the codegenNode when all children have been\n      // transformed.\n      return () => {\n        codegenNode.expressions.push(createCodegenNodeForBranch(\n          branch,\n          0,\n          context\n        ) as IfConditionalExpression)\n      }\n    } else {\n      // locate the adjacent v-if\n      const siblings = context.parent!.children\n      const comments = []\n      let i = siblings.indexOf(node)\n      while (i-- >= -1) {\n        const sibling = siblings[i]\n        if (__DEV__ && sibling && sibling.type === NodeTypes.COMMENT) {\n          context.removeNode(sibling)\n          comments.unshift(sibling)\n          continue\n        }\n        if (sibling && sibling.type === NodeTypes.IF) {\n          // move the node to the if node's branches\n          context.removeNode()\n          const branch = createIfBranch(node, dir)\n          if (__DEV__ && comments.length) {\n            branch.children = [...comments, ...branch.children]\n          }\n          sibling.branches.push(branch)\n          // since the branch was removed, it will not be traversed.\n          // make sure to traverse here.\n          traverseChildren(branch, context)\n          // make sure to reset currentNode after traversal to indicate this\n          // node has been removed.\n          context.currentNode = null\n          // attach this branch's codegen node to the v-if root.\n          let parentCondition = sibling.codegenNode\n            .expressions[1] as ConditionalExpression\n          while (true) {\n            if (\n              parentCondition.alternate.type ===\n              NodeTypes.JS_CONDITIONAL_EXPRESSION\n            ) {\n              parentCondition = parentCondition.alternate\n            } else {\n              parentCondition.alternate = createCodegenNodeForBranch(\n                branch,\n                sibling.branches.length - 1,\n                context\n              )\n              break\n            }\n          }\n        } else {\n          context.onError(\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\n          )\n        }\n        break\n      }\n    }\n  }\n)\n\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\n  return {\n    type: NodeTypes.IF_BRANCH,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: node.tagType === ElementTypes.TEMPLATE ? node.children : [node]\n  }\n}\n\nfunction createCodegenNodeForBranch(\n  branch: IfBranchNode,\n  index: number,\n  context: TransformContext\n): IfConditionalExpression | BlockCodegenNode {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, index, context),\n      createCallExpression(context.helper(CREATE_BLOCK), [\n        context.helper(COMMENT)\n      ])\n    ) as IfConditionalExpression\n  } else {\n    return createChildrenCodegenNode(branch, index, context) as BlockCodegenNode\n  }\n}\n\nfunction createChildrenCodegenNode(\n  branch: IfBranchNode,\n  index: number,\n  context: TransformContext\n): CallExpression {\n  const { helper } = context\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(index + '', false)\n  )\n  const { children } = branch\n  const child = children[0]\n  const needFragmentWrapper =\n    children.length !== 1 || child.type !== NodeTypes.ELEMENT\n  if (needFragmentWrapper) {\n    const blockArgs: CallExpression['arguments'] = [\n      helper(FRAGMENT),\n      createObjectExpression([keyProperty]),\n      children\n    ]\n    if (children.length === 1 && child.type === NodeTypes.FOR) {\n      // optimize away nested fragments when child is a ForNode\n      const forBlockArgs = child.codegenNode.expressions[1].arguments\n      // directly use the for block's children and patchFlag\n      blockArgs[2] = forBlockArgs[2]\n      blockArgs[3] = forBlockArgs[3]\n    }\n    return createCallExpression(helper(CREATE_BLOCK), blockArgs)\n  } else {\n    const childCodegen = (child as ElementNode).codegenNode as\n      | ElementCodegenNode\n      | ComponentCodegenNode\n      | SlotOutletCodegenNode\n    let vnodeCall = childCodegen\n    // Element with custom directives. Locate the actual createVNode() call.\n    if (vnodeCall.callee === WITH_DIRECTIVES) {\n      vnodeCall = vnodeCall.arguments[0]\n    }\n    // Change createVNode to createBlock.\n    if (vnodeCall.callee === CREATE_VNODE) {\n      vnodeCall.callee = helper(CREATE_BLOCK)\n    }\n    // inject branch key\n    injectProp(vnodeCall, keyProperty, context)\n    return childCodegen\n  }\n}\n","import {\n  createStructuralDirectiveTransform,\n  TransformContext\n} from '../transform'\nimport {\n  NodeTypes,\n  ExpressionNode,\n  createSimpleExpression,\n  SourceLocation,\n  SimpleExpressionNode,\n  createSequenceExpression,\n  createCallExpression,\n  createFunctionExpression,\n  ElementTypes,\n  createObjectExpression,\n  createObjectProperty,\n  ForCodegenNode,\n  ElementCodegenNode\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  getInnerRange,\n  findProp,\n  createBlockExpression,\n  isTemplateNode,\n  isSlotOutlet,\n  injectProp\n} from '../utils'\nimport {\n  RENDER_LIST,\n  OPEN_BLOCK,\n  CREATE_BLOCK,\n  FRAGMENT,\n  WITH_DIRECTIVES\n} from '../runtimeHelpers'\nimport { processExpression } from './transformExpression'\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\n\nexport const transformFor = createStructuralDirectiveTransform(\n  'for',\n  (node, dir, context) => {\n    if (!dir.exp) {\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc)\n      )\n      return\n    }\n\n    const parseResult = parseForExpression(\n      // can only be simple expression because vFor transform is applied\n      // before expression transform.\n      dir.exp as SimpleExpressionNode,\n      context\n    )\n\n    if (!parseResult) {\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc)\n      )\n      return\n    }\n\n    const { helper, addIdentifiers, removeIdentifiers, scopes } = context\n    const { source, value, key, index } = parseResult\n\n    // create the loop render function expression now, and add the\n    // iterator on exit after all children have been traversed\n    const renderExp = createCallExpression(helper(RENDER_LIST), [source])\n    const keyProp = findProp(node, `key`)\n    const fragmentFlag = keyProp\n      ? PatchFlags.KEYED_FRAGMENT\n      : PatchFlags.UNKEYED_FRAGMENT\n    const codegenNode = createSequenceExpression([\n      // fragment blocks disable tracking since they always diff their children\n      createCallExpression(helper(OPEN_BLOCK), [`false`]),\n      createCallExpression(helper(CREATE_BLOCK), [\n        helper(FRAGMENT),\n        `null`,\n        renderExp,\n        fragmentFlag + (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``)\n      ])\n    ]) as ForCodegenNode\n\n    context.replaceNode({\n      type: NodeTypes.FOR,\n      loc: dir.loc,\n      source,\n      valueAlias: value,\n      keyAlias: key,\n      objectIndexAlias: index,\n      children: node.tagType === ElementTypes.TEMPLATE ? node.children : [node],\n      codegenNode\n    })\n\n    // bookkeeping\n    scopes.vFor++\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      // scope management\n      // inject identifiers to context\n      value && addIdentifiers(value)\n      key && addIdentifiers(key)\n      index && addIdentifiers(index)\n    }\n\n    return () => {\n      scopes.vFor--\n      if (!__BROWSER__ && context.prefixIdentifiers) {\n        value && removeIdentifiers(value)\n        key && removeIdentifiers(key)\n        index && removeIdentifiers(index)\n      }\n\n      // finish the codegen now that all children have been traversed\n      let childBlock\n      const isTemplate = isTemplateNode(node)\n      const slotOutlet = isSlotOutlet(node)\n        ? node\n        : isTemplate &&\n          node.children.length === 1 &&\n          isSlotOutlet(node.children[0])\n          ? node.children[0]\n          : null\n      const keyProperty = keyProp\n        ? createObjectProperty(\n            `key`,\n            keyProp.type === NodeTypes.ATTRIBUTE\n              ? createSimpleExpression(keyProp.value!.content, true)\n              : keyProp.exp!\n          )\n        : null\n      if (slotOutlet) {\n        // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n        childBlock = slotOutlet.codegenNode!\n        if (isTemplate && keyProperty) {\n          // <template v-for=\"...\" :key=\"...\"><slot/></template>\n          // we need to inject the key to the renderSlot() call.\n          // the props for renderSlot is passed as the 3rd argument.\n          injectProp(childBlock, keyProperty, context)\n        }\n      } else if (isTemplate) {\n        // <template v-for=\"...\">\n        // should generate a fragment block for each loop\n        childBlock = createBlockExpression(\n          createCallExpression(helper(CREATE_BLOCK), [\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : `null`,\n            node.children\n          ]),\n          context\n        )\n      } else {\n        // Normal element v-for. Directly use the child's codegenNode\n        // arguments, but replace createVNode() with createBlock()\n        let codegenNode = node.codegenNode as ElementCodegenNode\n        if (codegenNode.callee === WITH_DIRECTIVES) {\n          codegenNode.arguments[0].callee = helper(CREATE_BLOCK)\n        } else {\n          codegenNode.callee = helper(CREATE_BLOCK)\n        }\n        childBlock = createBlockExpression(codegenNode, context)\n      }\n\n      renderExp.arguments.push(\n        createFunctionExpression(\n          createForLoopParams(parseResult),\n          childBlock,\n          true /* force newline */\n        )\n      )\n    }\n  }\n)\n\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\nconst stripParensRE = /^\\(|\\)$/g\n\nexport interface ForParseResult {\n  source: ExpressionNode\n  value: ExpressionNode | undefined\n  key: ExpressionNode | undefined\n  index: ExpressionNode | undefined\n}\n\nexport function parseForExpression(\n  input: SimpleExpressionNode,\n  context: TransformContext\n): ForParseResult | undefined {\n  const loc = input.loc\n  const exp = input.content\n  const inMatch = exp.match(forAliasRE)\n  if (!inMatch) return\n\n  const [, LHS, RHS] = inMatch\n\n  const result: ForParseResult = {\n    source: createAliasExpression(\n      loc,\n      RHS.trim(),\n      exp.indexOf(RHS, LHS.length)\n    ),\n    value: undefined,\n    key: undefined,\n    index: undefined\n  }\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source as SimpleExpressionNode,\n      context\n    )\n  }\n\n  let valueContent = LHS.trim()\n    .replace(stripParensRE, '')\n    .trim()\n  const trimmedOffset = LHS.indexOf(valueContent)\n\n  const iteratorMatch = valueContent.match(forIteratorRE)\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\n\n    const keyContent = iteratorMatch[1].trim()\n    let keyOffset: number | undefined\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\n      result.key = createAliasExpression(loc, keyContent, keyOffset)\n      if (!__BROWSER__ && context.prefixIdentifiers) {\n        result.key = processExpression(result.key, context, true)\n      }\n    }\n\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim()\n\n      if (indexContent) {\n        result.index = createAliasExpression(\n          loc,\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key\n              ? keyOffset! + keyContent.length\n              : trimmedOffset + valueContent.length\n          )\n        )\n        if (!__BROWSER__ && context.prefixIdentifiers) {\n          result.index = processExpression(result.index, context, true)\n        }\n      }\n    }\n  }\n\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset)\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      result.value = processExpression(result.value, context, true)\n    }\n  }\n\n  return result\n}\n\nfunction createAliasExpression(\n  range: SourceLocation,\n  content: string,\n  offset: number\n): SimpleExpressionNode {\n  return createSimpleExpression(\n    content,\n    false,\n    getInnerRange(range, offset, content.length)\n  )\n}\n\nexport function createForLoopParams({\n  value,\n  key,\n  index\n}: ForParseResult): ExpressionNode[] {\n  const params: ExpressionNode[] = []\n  if (value) {\n    params.push(value)\n  }\n  if (key) {\n    if (!value) {\n      params.push(createSimpleExpression(`_`, false))\n    }\n    params.push(key)\n  }\n  if (index) {\n    if (!key) {\n      if (!value) {\n        params.push(createSimpleExpression(`_`, false))\n      }\n      params.push(createSimpleExpression(`__`, false))\n    }\n    params.push(index)\n  }\n  return params\n}\n","import {\n  ElementNode,\n  ObjectExpression,\n  createObjectExpression,\n  NodeTypes,\n  createObjectProperty,\n  createSimpleExpression,\n  createFunctionExpression,\n  DirectiveNode,\n  ElementTypes,\n  ExpressionNode,\n  Property,\n  TemplateChildNode,\n  SourceLocation,\n  createConditionalExpression,\n  ConditionalExpression,\n  JSChildNode,\n  SimpleExpressionNode,\n  FunctionExpression,\n  CallExpression,\n  createCallExpression,\n  createArrayExpression\n} from '../ast'\nimport { TransformContext, NodeTransform } from '../transform'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { findDir, isTemplateNode, assert, isVSlot, hasScopeRef } from '../utils'\nimport { CREATE_SLOTS, RENDER_LIST } from '../runtimeHelpers'\nimport { parseForExpression, createForLoopParams } from './vFor'\n\nconst isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\n\nconst defaultFallback = createSimpleExpression(`undefined`, false)\n\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nexport const trackSlotScopes: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    (node.tagType === ElementTypes.COMPONENT ||\n      node.tagType === ElementTypes.TEMPLATE)\n  ) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    const vSlot = findDir(node, 'slot')\n    if (vSlot) {\n      const slotProps = vSlot.exp\n      if (!__BROWSER__ && context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps)\n      }\n      context.scopes.vSlot++\n      return () => {\n        if (!__BROWSER__ && context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps)\n        }\n        context.scopes.vSlot--\n      }\n    }\n  }\n}\n\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\n  let vFor\n  if (\n    isTemplateNode(node) &&\n    node.props.some(isVSlot) &&\n    (vFor = findDir(node, 'for'))\n  ) {\n    const result = (vFor.parseResult = parseForExpression(\n      vFor.exp as SimpleExpressionNode,\n      context\n    ))\n    if (result) {\n      const { value, key, index } = result\n      const { addIdentifiers, removeIdentifiers } = context\n      value && addIdentifiers(value)\n      key && addIdentifiers(key)\n      index && addIdentifiers(index)\n\n      return () => {\n        value && removeIdentifiers(value)\n        key && removeIdentifiers(key)\n        index && removeIdentifiers(index)\n      }\n    }\n  }\n}\n\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nexport function buildSlots(\n  node: ElementNode,\n  context: TransformContext\n): {\n  slots: ObjectExpression | CallExpression\n  hasDynamicSlots: boolean\n} {\n  const { children, loc } = node\n  const slotsProperties: Property[] = []\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\n\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\n  // with `prefixIdentifiers: true`, this can be further optimized to make\n  // it dynamic only when the slot actually uses the scope variables.\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\n  }\n\n  // 1. Check for default slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n  const explicitDefaultSlot = findDir(node, 'slot', true)\n  if (explicitDefaultSlot) {\n    const { arg, exp, loc } = explicitDefaultSlot\n    if (arg) {\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_SLOT_NAMED_SLOT_ON_COMPONENT, loc)\n      )\n    }\n    slotsProperties.push(buildDefaultSlot(exp, children, loc))\n  }\n\n  // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n  let hasTemplateSlots = false\n  let extraneousChild: TemplateChildNode | undefined = undefined\n  const seenSlotNames = new Set<string>()\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i]\n    let slotDir\n\n    if (\n      !isTemplateNode(slotElement) ||\n      !(slotDir = findDir(slotElement, 'slot', true))\n    ) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== NodeTypes.COMMENT && !extraneousChild) {\n        extraneousChild = slotElement\n      }\n      continue\n    }\n\n    if (explicitDefaultSlot) {\n      // already has on-component default slot - this is incorrect usage.\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc)\n      )\n      break\n    }\n\n    hasTemplateSlots = true\n    const { children: slotChildren, loc: slotLoc } = slotElement\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir\n\n    // check if name is dynamic.\n    let staticSlotName: string | undefined\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`\n    } else {\n      hasDynamicSlots = true\n    }\n\n    const slotFunction = createFunctionExpression(\n      slotProps,\n      slotChildren,\n      false,\n      slotChildren.length ? slotChildren[0].loc : slotLoc\n    )\n\n    // check if this slot is conditional (v-if/v-for)\n    let vIf: DirectiveNode | undefined\n    let vElse: DirectiveNode | undefined\n    let vFor: DirectiveNode | undefined\n    if ((vIf = findDir(slotElement, 'if'))) {\n      hasDynamicSlots = true\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp!,\n          buildDynamicSlot(slotName, slotFunction),\n          defaultFallback\n        )\n      )\n    } else if (\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\n    ) {\n      // find adjacent v-if\n      let j = i\n      let prev\n      while (j--) {\n        prev = children[j]\n        if (prev.type !== NodeTypes.COMMENT) {\n          break\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n        // remove node\n        children.splice(i, 1)\n        i--\n        __DEV__ && assert(dynamicSlots.length > 0)\n        // attach this slot to previous conditional\n        let conditional = dynamicSlots[\n          dynamicSlots.length - 1\n        ] as ConditionalExpression\n        while (\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\n        ) {\n          conditional = conditional.alternate\n        }\n        conditional.alternate = vElse.exp\n          ? createConditionalExpression(\n              vElse.exp,\n              buildDynamicSlot(slotName, slotFunction),\n              defaultFallback\n            )\n          : buildDynamicSlot(slotName, slotFunction)\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc)\n        )\n      }\n    } else if ((vFor = findDir(slotElement, 'for'))) {\n      hasDynamicSlots = true\n      const parseResult =\n        vFor.parseResult ||\n        parseForExpression(vFor.exp as SimpleExpressionNode, context)\n      if (parseResult) {\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        )\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, vFor.loc)\n        )\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\n              dirLoc\n            )\n          )\n          continue\n        }\n        seenSlotNames.add(staticSlotName)\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\n    }\n  }\n\n  if (hasTemplateSlots && extraneousChild) {\n    context.onError(\n      createCompilerError(\n        ErrorCodes.X_V_SLOT_EXTRANEOUS_NON_SLOT_CHILDREN,\n        extraneousChild.loc\n      )\n    )\n  }\n\n  if (!explicitDefaultSlot && !hasTemplateSlots) {\n    // implicit default slot.\n    slotsProperties.push(buildDefaultSlot(undefined, children, loc))\n  }\n\n  let slots: ObjectExpression | CallExpression = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(`_compiled`, createSimpleExpression(`true`, false))\n    ),\n    loc\n  )\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ])\n  }\n\n  return {\n    slots,\n    hasDynamicSlots\n  }\n}\n\nfunction buildDefaultSlot(\n  slotProps: ExpressionNode | undefined,\n  children: TemplateChildNode[],\n  loc: SourceLocation\n): Property {\n  return createObjectProperty(\n    `default`,\n    createFunctionExpression(\n      slotProps,\n      children,\n      false,\n      children.length ? children[0].loc : loc\n    )\n  )\n}\n\nfunction buildDynamicSlot(\n  name: ExpressionNode,\n  fn: FunctionExpression\n): ObjectExpression {\n  return createObjectExpression([\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ])\n}\n","import { NodeTransform, TransformContext } from '../transform'\nimport {\n  NodeTypes,\n  ElementTypes,\n  CallExpression,\n  ObjectExpression,\n  ElementNode,\n  DirectiveNode,\n  ExpressionNode,\n  ArrayExpression,\n  createCallExpression,\n  createArrayExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  createObjectExpression,\n  Property\n} from '../ast'\nimport { PatchFlags, PatchFlagNames, isSymbol } from '@vue/shared'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport {\n  CREATE_VNODE,\n  WITH_DIRECTIVES,\n  RESOLVE_DIRECTIVE,\n  RESOLVE_COMPONENT,\n  RESOLVE_DYNAMIC_COMPONENT,\n  MERGE_PROPS,\n  TO_HANDLERS,\n  PORTAL,\n  SUSPENSE\n} from '../runtimeHelpers'\nimport { getInnerRange, isVSlot, toValidAssetId, findProp } from '../utils'\nimport { buildSlots } from './vSlot'\nimport { isStaticNode } from './hoistStatic'\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\n\n// generate a JavaScript AST for this element's codegen\nexport const transformElement: NodeTransform = (node, context) => {\n  if (\n    node.type !== NodeTypes.ELEMENT ||\n    // handled by transformSlotOutlet\n    node.tagType === ElementTypes.SLOT ||\n    // <template v-if/v-for> should have already been replaced\n    // <templte v-slot> is handled by buildSlots\n    (node.tagType === ElementTypes.TEMPLATE && node.props.some(isVSlot))\n  ) {\n    return\n  }\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return () => {\n    const isComponent = node.tagType === ElementTypes.COMPONENT\n    let hasProps = node.props.length > 0\n    let patchFlag: number = 0\n    let runtimeDirectives: DirectiveNode[] | undefined\n    let dynamicPropNames: string[] | undefined\n    let dynamicComponent: string | CallExpression | undefined\n\n    // handle dynamic component\n    const isProp = findProp(node, 'is')\n    if (node.tag === 'component') {\n      if (isProp) {\n        // static <component is=\"foo\" />\n        if (isProp.type === NodeTypes.ATTRIBUTE) {\n          const tag = isProp.value && isProp.value.content\n          if (tag) {\n            context.helper(RESOLVE_COMPONENT)\n            context.components.add(tag)\n            dynamicComponent = toValidAssetId(tag, `component`)\n          }\n        }\n        // dynamic <component :is=\"asdf\" />\n        else if (isProp.exp) {\n          dynamicComponent = createCallExpression(\n            context.helper(RESOLVE_DYNAMIC_COMPONENT),\n            [isProp.exp]\n          )\n        }\n      }\n    }\n\n    if (isComponent && !dynamicComponent) {\n      context.helper(RESOLVE_COMPONENT)\n      context.components.add(node.tag)\n    }\n\n    const args: CallExpression['arguments'] = [\n      dynamicComponent\n        ? dynamicComponent\n        : isComponent\n          ? toValidAssetId(node.tag, `component`)\n          : node.tagType === ElementTypes.PORTAL\n            ? context.helper(PORTAL)\n            : node.tagType === ElementTypes.SUSPENSE\n              ? context.helper(SUSPENSE)\n              : `\"${node.tag}\"`\n    ]\n    // props\n    if (hasProps) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        // skip reserved \"is\" prop <component is>\n        node.props.filter(p => p !== isProp)\n      )\n      patchFlag = propsBuildResult.patchFlag\n      dynamicPropNames = propsBuildResult.dynamicPropNames\n      runtimeDirectives = propsBuildResult.directives\n      if (!propsBuildResult.props) {\n        hasProps = false\n      } else {\n        args.push(propsBuildResult.props)\n      }\n    }\n    // children\n    const hasChildren = node.children.length > 0\n    if (hasChildren) {\n      if (!hasProps) {\n        args.push(`null`)\n      }\n      if (isComponent) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\n        args.push(slots)\n        if (hasDynamicSlots) {\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        }\n      } else if (node.children.length === 1) {\n        const child = node.children[0]\n        const type = child.type\n        // check for dynamic text children\n        const hasDynamicTextChild =\n          type === NodeTypes.INTERPOLATION ||\n          type === NodeTypes.COMPOUND_EXPRESSION\n        if (hasDynamicTextChild && !isStaticNode(child)) {\n          patchFlag |= PatchFlags.TEXT\n        }\n        // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\n          args.push(child)\n        } else {\n          args.push(node.children)\n        }\n      } else {\n        args.push(node.children)\n      }\n    }\n    // patchFlag & dynamicPropNames\n    if (patchFlag !== 0) {\n      if (!hasChildren) {\n        if (!hasProps) {\n          args.push(`null`)\n        }\n        args.push(`null`)\n      }\n      if (__DEV__) {\n        const flagNames = Object.keys(PatchFlagNames)\n          .map(Number)\n          .filter(n => n > 0 && patchFlag & n)\n          .map(n => PatchFlagNames[n])\n          .join(`, `)\n        args.push(patchFlag + ` /* ${flagNames} */`)\n      } else {\n        args.push(patchFlag + '')\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        args.push(\n          `[${dynamicPropNames.map(n => JSON.stringify(n)).join(`, `)}]`\n        )\n      }\n    }\n\n    const { loc } = node\n    const vnode = createCallExpression(context.helper(CREATE_VNODE), args, loc)\n\n    if (runtimeDirectives && runtimeDirectives.length) {\n      node.codegenNode = createCallExpression(\n        context.helper(WITH_DIRECTIVES),\n        [\n          vnode,\n          createArrayExpression(\n            runtimeDirectives.map(dir => buildDirectiveArgs(dir, context)),\n            loc\n          )\n        ],\n        loc\n      )\n    } else {\n      node.codegenNode = vnode\n    }\n  }\n}\n\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\n\nexport function buildProps(\n  node: ElementNode,\n  context: TransformContext,\n  props: ElementNode['props'] = node.props\n): {\n  props: PropsExpression | undefined\n  directives: DirectiveNode[]\n  patchFlag: number\n  dynamicPropNames: string[]\n} {\n  const elementLoc = node.loc\n  const isComponent = node.tagType === ElementTypes.COMPONENT\n  let properties: ObjectExpression['properties'] = []\n  const mergeArgs: PropsExpression[] = []\n  const runtimeDirectives: DirectiveNode[] = []\n\n  // patchFlag analysis\n  let patchFlag = 0\n  let hasRef = false\n  let hasClassBinding = false\n  let hasStyleBinding = false\n  let hasDynamicKeys = false\n  const dynamicPropNames: string[] = []\n\n  const analyzePatchFlag = ({ key, value }: Property) => {\n    if (key.type === NodeTypes.SIMPLE_EXPRESSION && key.isStatic) {\n      if (\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\n          isStaticNode(value))\n      ) {\n        return\n      }\n      const name = key.content\n      if (name === 'ref') {\n        hasRef = true\n      } else if (name === 'class') {\n        hasClassBinding = true\n      } else if (name === 'style') {\n        hasStyleBinding = true\n      } else if (name !== 'key') {\n        dynamicPropNames.push(name)\n      }\n    } else {\n      hasDynamicKeys = true\n    }\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    // static attribute\n    const prop = props[i]\n    if (prop.type === NodeTypes.ATTRIBUTE) {\n      const { loc, name, value } = prop\n      if (name === 'ref') {\n        hasRef = true\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\n            name,\n            true,\n            getInnerRange(loc, 0, name.length)\n          ),\n          createSimpleExpression(\n            value ? value.content : '',\n            true,\n            value ? value.loc : loc\n          )\n        )\n      )\n    } else {\n      // directives\n      const { name, arg, exp, loc } = prop\n\n      // skip v-slot - it is handled by its dedicated transform.\n      if (name === 'slot') {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc)\n          )\n        }\n        continue\n      }\n\n      // special case for v-bind and v-on with no argument\n      const isBind = name === 'bind'\n      const isOn = name === 'on'\n      if (!arg && (isBind || isOn)) {\n        hasDynamicKeys = true\n        if (exp) {\n          if (properties.length) {\n            mergeArgs.push(\n              createObjectExpression(dedupeProperties(properties), elementLoc)\n            )\n            properties = []\n          }\n          if (isBind) {\n            mergeArgs.push(exp)\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            mergeArgs.push({\n              type: NodeTypes.JS_CALL_EXPRESSION,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: [exp]\n            })\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isBind\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\n              loc\n            )\n          )\n        }\n        continue\n      }\n\n      const directiveTransform = context.directiveTransforms[name]\n      if (directiveTransform) {\n        // has built-in directive transform.\n        const { props, needRuntime } = directiveTransform(prop, node, context)\n        props.forEach(analyzePatchFlag)\n        properties.push(...props)\n        if (needRuntime) {\n          runtimeDirectives.push(prop)\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime)\n          }\n        }\n      } else {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop)\n      }\n    }\n  }\n\n  let propsExpression: PropsExpression | undefined = undefined\n\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n  if (mergeArgs.length) {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      )\n    }\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      )\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0]\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    )\n  }\n\n  // patchFlag analysis\n  if (hasDynamicKeys) {\n    patchFlag |= PatchFlags.FULL_PROPS\n  } else {\n    if (hasClassBinding) {\n      patchFlag |= PatchFlags.CLASS\n    }\n    if (hasStyleBinding) {\n      patchFlag |= PatchFlags.STYLE\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= PatchFlags.PROPS\n    }\n  }\n  if (patchFlag === 0 && (hasRef || runtimeDirectives.length > 0)) {\n    patchFlag |= PatchFlags.NEED_PATCH\n  }\n\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames\n  }\n}\n\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties: Property[]): Property[] {\n  const knownProps: Record<string, Property> = {}\n  const deduped: Property[] = []\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i]\n    // dynamic keys are always allowed\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\n      deduped.push(prop)\n      continue\n    }\n    const name = prop.key.content\n    const existing = knownProps[name]\n    if (existing) {\n      if (\n        name === 'style' ||\n        name === 'class' ||\n        name.startsWith('on') ||\n        name.startsWith('vnode')\n      ) {\n        mergeAsArray(existing, prop)\n      }\n      // unexpected duplicate, should have emitted error during parse\n    } else {\n      knownProps[name] = prop\n      deduped.push(prop)\n    }\n  }\n  return deduped\n}\n\nfunction mergeAsArray(existing: Property, incoming: Property) {\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\n    existing.value.elements.push(incoming.value)\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    )\n  }\n}\n\nfunction buildDirectiveArgs(\n  dir: DirectiveNode,\n  context: TransformContext\n): ArrayExpression {\n  const dirArgs: ArrayExpression['elements'] = []\n  const runtime = directiveImportMap.get(dir)\n  if (runtime) {\n    context.helper(runtime)\n    dirArgs.push(context.helperString(runtime))\n  } else {\n    // inject statement for resolving directive\n    context.helper(RESOLVE_DIRECTIVE)\n    context.directives.add(dir.name)\n    dirArgs.push(toValidAssetId(dir.name, `directive`))\n  }\n  const { loc } = dir\n  if (dir.exp) dirArgs.push(dir.exp)\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`)\n    }\n    dirArgs.push(dir.arg)\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`)\n      }\n      dirArgs.push(`void 0`)\n    }\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(modifier =>\n          createObjectProperty(\n            modifier,\n            createSimpleExpression(`true`, false, loc)\n          )\n        ),\n        loc\n      )\n    )\n  }\n  return createArrayExpression(dirArgs, dir.loc)\n}\n","import { NodeTransform } from '../transform'\nimport {\n  NodeTypes,\n  CallExpression,\n  createCallExpression,\n  ExpressionNode\n} from '../ast'\nimport { isSlotOutlet } from '../utils'\nimport { buildProps } from './transformElement'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { RENDER_SLOT } from '../runtimeHelpers'\n\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { props, children, loc } = node\n    const $slots = context.prefixIdentifiers ? `_ctx.$slots` : `$slots`\n    let slotName: string | ExpressionNode = `\"default\"`\n\n    // check for <slot name=\"xxx\" OR :name=\"xxx\" />\n    let nameIndex: number = -1\n    for (let i = 0; i < props.length; i++) {\n      const prop = props[i]\n      if (prop.type === NodeTypes.ATTRIBUTE) {\n        if (prop.name === `name` && prop.value) {\n          // static name=\"xxx\"\n          slotName = JSON.stringify(prop.value.content)\n          nameIndex = i\n          break\n        }\n      } else if (prop.name === `bind`) {\n        const { arg, exp } = prop\n        if (\n          arg &&\n          exp &&\n          arg.type === NodeTypes.SIMPLE_EXPRESSION &&\n          arg.isStatic &&\n          arg.content === `name`\n        ) {\n          // dynamic :name=\"xxx\"\n          slotName = exp\n          nameIndex = i\n          break\n        }\n      }\n    }\n\n    const slotArgs: CallExpression['arguments'] = [$slots, slotName]\n    const propsWithoutName =\n      nameIndex > -1\n        ? props.slice(0, nameIndex).concat(props.slice(nameIndex + 1))\n        : props\n    let hasProps = propsWithoutName.length > 0\n    if (hasProps) {\n      const { props: propsExpression, directives } = buildProps(\n        node,\n        context,\n        propsWithoutName\n      )\n      if (directives.length) {\n        context.onError(\n          createCompilerError(\n            ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\n            directives[0].loc\n          )\n        )\n      }\n      if (propsExpression) {\n        slotArgs.push(propsExpression)\n      } else {\n        hasProps = false\n      }\n    }\n\n    if (children.length) {\n      if (!hasProps) {\n        slotArgs.push(`{}`)\n      }\n      slotArgs.push(children)\n    }\n\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    )\n  }\n}\n","import { DirectiveTransform, DirectiveTransformResult } from '../transform'\nimport {\n  DirectiveNode,\n  createObjectProperty,\n  createSimpleExpression,\n  ExpressionNode,\n  NodeTypes,\n  createCompoundExpression,\n  SimpleExpressionNode\n} from '../ast'\nimport { capitalize } from '@vue/shared'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { processExpression } from './transformExpression'\nimport { isMemberExpression, hasScopeRef } from '../utils'\n\nconst fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/\n\nexport interface VOnDirectiveNode extends DirectiveNode {\n  // v-on without arg is handled directly in ./element.ts due to it affecting\n  // codegen for the entire props object. This transform here is only for v-on\n  // *with* args.\n  arg: ExpressionNode\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\n  // skipped by transformExpression as a special case.\n  exp: SimpleExpressionNode | undefined\n}\n\nexport const transformOn: DirectiveTransform = (\n  dir: VOnDirectiveNode,\n  node,\n  context,\n  augmentor\n) => {\n  const { loc, modifiers, arg } = dir\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\n  }\n  let eventName: ExpressionNode\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n    if (arg.isStatic) {\n      eventName = createSimpleExpression(\n        `on${capitalize(arg.content)}`,\n        true,\n        arg.loc\n      )\n    } else {\n      eventName = createCompoundExpression([`\"on\" + (`, arg, `)`])\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg\n    eventName.children.unshift(`\"on\" + (`)\n    eventName.children.push(`)`)\n  }\n\n  // handler processing\n  let exp: ExpressionNode | undefined = dir.exp\n  let isCacheable: boolean = !exp\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content)\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\n\n    // process the expression since it's been skipped\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      context.addIdentifiers(`$event`)\n      exp = processExpression(exp, context)\n      context.removeIdentifiers(`$event`)\n      // with scope analysis, the function is hoistable if it has no reference\n      // to scope variables.\n      isCacheable =\n        context.cacheHandlers && !hasScopeRef(exp, context.identifiers)\n      // If the expression is optimizable and is a member expression pointing\n      // to a function, turn it into invocation (and wrap in an arrow function\n      // below) so that it always accesses the latest value when called - thus\n      // avoiding the need to be patched.\n      if (isCacheable && isMemberExp) {\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          exp.content += `($event)`\n        } else {\n          exp.children.push(`($event)`)\n        }\n      }\n    }\n\n    if (isInlineStatement || (isCacheable && isMemberExp)) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([\n        `$event => (`,\n        ...(exp.type === NodeTypes.SIMPLE_EXPRESSION ? [exp] : exp.children),\n        `)`\n      ])\n    }\n  }\n\n  let ret: DirectiveTransformResult = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ],\n    needRuntime: false\n  }\n\n  // apply extended compiler augmentor\n  if (augmentor) {\n    ret = augmentor(ret)\n  }\n\n  if (isCacheable) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline hanlders on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value)\n  }\n\n  return ret\n}\n","import { DirectiveTransform } from '../transform'\nimport { createObjectProperty, createSimpleExpression, NodeTypes } from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { camelize } from '@vue/shared'\nimport { CAMELIZE } from '../runtimeHelpers'\n\n// v-bind without arg is handled directly in ./element.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nexport const transformBind: DirectiveTransform = (dir, node, context) => {\n  const { exp, modifiers, loc } = dir\n  const arg = dir.arg!\n  if (!exp) {\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\n  }\n  // .prop is no longer necessary due to new patch behavior\n  // .sync is replaced by v-model:arg\n  if (modifiers.includes('camel')) {\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n      if (arg.isStatic) {\n        arg.content = camelize(arg.content)\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\n      arg.children.push(`)`)\n    }\n  }\n  return {\n    props: [\n      createObjectProperty(arg!, exp || createSimpleExpression('', true, loc))\n    ],\n    needRuntime: false\n  }\n}\n","import { NodeTransform } from '../transform'\nimport {\n  NodeTypes,\n  TemplateChildNode,\n  TextNode,\n  InterpolationNode,\n  CompoundExpressionNode,\n  createCallExpression\n} from '../ast'\nimport { TEXT, CREATE_VNODE } from '../runtimeHelpers'\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\n\nconst isText = (\n  node: TemplateChildNode\n): node is TextNode | InterpolationNode =>\n  node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nexport const transformText: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.ROOT || node.type === NodeTypes.ELEMENT) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return () => {\n      const children = node.children\n      let currentContainer: CompoundExpressionNode | undefined = undefined\n      let hasText = false\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child)) {\n          hasText = true\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j]\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = {\n                  type: NodeTypes.COMPOUND_EXPRESSION,\n                  loc: child.loc,\n                  children: [child]\n                }\n              }\n              // merge adjacent text node into current\n              currentContainer.children.push(` + `, next)\n              children.splice(j, 1)\n              j--\n            } else {\n              currentContainer = undefined\n              break\n            }\n          }\n        }\n      }\n\n      if (hasText && children.length > 1) {\n        // when an element has mixed text/element children, convert text nodes\n        // into createVNode(Text) calls.\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i]\n          if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\n            const callArgs = [context.helper(TEXT), `null`, child]\n            if (child.type !== NodeTypes.TEXT) {\n              callArgs.push(\n                `${PatchFlags.TEXT} /* ${PatchFlagNames[PatchFlags.TEXT]} */`\n              )\n            }\n            children[i] = {\n              type: NodeTypes.TEXT_CALL,\n              content: child,\n              loc: child.loc,\n              codegenNode: createCallExpression(\n                context.helper(CREATE_VNODE),\n                callArgs\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import {\n  DirectiveTransform,\n  createObjectProperty,\n  createSimpleExpression\n} from '@vue/compiler-core'\n\nexport const transformOnce: DirectiveTransform = dir => {\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`$once`, true, dir.loc),\n        createSimpleExpression('true', false)\n      )\n    ],\n    needRuntime: false\n  }\n}\n","import { DirectiveTransform } from '../transform'\nimport {\n  createSimpleExpression,\n  createObjectProperty,\n  createCompoundExpression,\n  NodeTypes,\n  Property,\n  ElementTypes\n} from '../ast'\nimport { createCompilerError, ErrorCodes } from '../errors'\nimport { isMemberExpression, isSimpleIdentifier, hasScopeRef } from '../utils'\n\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\n  const { exp, arg } = dir\n  if (!exp) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc)\n    )\n    return createTransformProps()\n  }\n\n  const expString =\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : exp.loc.source\n  if (!isMemberExpression(expString)) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc)\n    )\n    return createTransformProps()\n  }\n\n  if (\n    !__BROWSER__ &&\n    context.prefixIdentifiers &&\n    isSimpleIdentifier(expString) &&\n    context.identifiers[expString]\n  ) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc)\n    )\n    return createTransformProps()\n  }\n\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\n  const eventName = arg\n    ? arg.type === NodeTypes.SIMPLE_EXPRESSION && arg.isStatic\n      ? createSimpleExpression('onUpdate:' + arg.content, true)\n      : createCompoundExpression([\n          createSimpleExpression('onUpdate:', true),\n          '+',\n          ...(arg.type === NodeTypes.SIMPLE_EXPRESSION ? [arg] : arg.children)\n        ])\n    : createSimpleExpression('onUpdate:modelValue', true)\n\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp!),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(\n      eventName,\n      createCompoundExpression([\n        `$event => (`,\n        ...(exp.type === NodeTypes.SIMPLE_EXPRESSION ? [exp] : exp.children),\n        ` = $event)`\n      ])\n    )\n  ]\n\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\n  if (\n    !__BROWSER__ &&\n    context.prefixIdentifiers &&\n    !hasScopeRef(exp, context.identifiers)\n  ) {\n    props[1].value = context.cache(props[1].value)\n  }\n\n  // modelModifiers: { foo: true, \"bar-baz\": true }\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\n    const modifiers = dir.modifiers\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\n      .join(`, `)\n    props.push(\n      createObjectProperty(\n        `modelModifiers`,\n        createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, true)\n      )\n    )\n  }\n\n  return createTransformProps(props)\n}\n\nfunction createTransformProps(props: Property[] = []) {\n  return { props, needRuntime: false }\n}\n","const range: number = 2\n\nexport function generateCodeFrame(\n  source: string,\n  start: number = 0,\n  end: number = source.length\n): string {\n  const lines = source.split(/\\r?\\n/)\n  let count = 0\n  const res = []\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue\n        res.push(\n          `${j + 1}${' '.repeat(3 - String(j + 1).length)}|  ${lines[j]}`\n        )\n        const lineLength = lines[j].length\n        if (j === i) {\n          // push underline\n          const pad = start - (count - lineLength) + 1\n          const length = end > count ? lineLength - pad : end - start\n          res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length))\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.min(end - count, lineLength)\n            res.push(`   |  ` + '^'.repeat(length))\n          }\n          count += lineLength + 1\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n","import { parse, ParserOptions } from './parse'\nimport { transform, TransformOptions } from './transform'\nimport { generate, CodegenOptions, CodegenResult } from './codegen'\nimport { RootNode } from './ast'\nimport { isString } from '@vue/shared'\nimport { transformIf } from './transforms/vIf'\nimport { transformFor } from './transforms/vFor'\nimport { transformExpression } from './transforms/transformExpression'\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\nimport { transformElement } from './transforms/transformElement'\nimport { transformOn } from './transforms/vOn'\nimport { transformBind } from './transforms/vBind'\nimport { defaultOnError, createCompilerError, ErrorCodes } from './errors'\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\nimport { transformText } from './transforms/transformText'\nimport { transformOnce } from './transforms/vOnce'\nimport { transformModel } from './transforms/vModel'\n\nexport type CompilerOptions = ParserOptions & TransformOptions & CodegenOptions\n\n// we name it `baseCompile` so that higher order compilers like @vue/compiler-dom\n// can export `compile` while re-exporting everything else.\nexport function baseCompile(\n  template: string | RootNode,\n  options: CompilerOptions = {}\n): CodegenResult {\n  /* istanbul ignore if */\n  if (__BROWSER__) {\n    const onError = options.onError || defaultOnError\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\n    } else if (options.mode === 'module') {\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\n    }\n  }\n\n  const ast = isString(template) ? parse(template, options) : template\n\n  const prefixIdentifiers =\n    !__BROWSER__ &&\n    (options.prefixIdentifiers === true || options.mode === 'module')\n\n  transform(ast, {\n    ...options,\n    prefixIdentifiers,\n    nodeTransforms: [\n      transformIf,\n      transformFor,\n      ...(prefixIdentifiers\n        ? [\n            // order is important\n            trackVForSlotScopes,\n            transformExpression\n          ]\n        : []),\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText,\n      ...(options.nodeTransforms || []) // user transforms\n    ],\n    directiveTransforms: {\n      on: transformOn,\n      bind: transformBind,\n      once: transformOnce,\n      model: transformModel,\n      ...(options.directiveTransforms || {}) // user transforms\n    }\n  })\n\n  return generate(ast, {\n    ...options,\n    prefixIdentifiers\n  })\n}\n\n// Also expose lower level APIs & types\nexport { parse, ParserOptions, TextModes } from './parse'\nexport {\n  transform,\n  createStructuralDirectiveTransform,\n  TransformOptions,\n  TransformContext,\n  NodeTransform,\n  StructuralDirectiveTransform,\n  DirectiveTransform\n} from './transform'\nexport {\n  generate,\n  CodegenOptions,\n  CodegenContext,\n  CodegenResult\n} from './codegen'\nexport {\n  ErrorCodes,\n  CoreCompilerError,\n  CompilerError,\n  createCompilerError\n} from './errors'\nexport * from './ast'\nexport * from './utils'\nexport * from './codeframe'\nexport { registerRuntimeHelpers } from './runtimeHelpers'\n\n// expose transforms so higher-order compilers can import and extend them\nexport { transformModel } from './transforms/vModel'\nexport { transformOn } from './transforms/vOn'\n","import { makeMap } from '../../shared/src/makeMap'\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst HTML_TAGS =\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\n  'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\n  'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\n  'option,output,progress,select,textarea,details,dialog,menu,menuitem,' +\n  'summary,content,element,shadow,template,blockquote,iframe,tfoot'\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst SVG_TAGS =\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\n  'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\n  'foreignObject,g,hatch,hatchpath,image,line,lineGradient,marker,mask,' +\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\n  'text,textPath,title,tspan,unknown,use,view'\n\nconst VOID_TAGS =\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\n\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\n","import {\n  TextModes,\n  ParserOptions,\n  ElementNode,\n  Namespaces,\n  NodeTypes\n} from '@vue/compiler-core'\nimport { isVoidTag, isHTMLTag, isSVGTag } from './tagConfig'\n\nexport const enum DOMNamespaces {\n  HTML = Namespaces.HTML,\n  SVG,\n  MATH_ML\n}\n\nexport const parserOptionsMinimal: ParserOptions = {\n  isVoidTag,\n\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag: string, parent: ElementNode | undefined): DOMNamespaces {\n    let ns = parent ? parent.ns : DOMNamespaces.HTML\n\n    if (parent && ns === DOMNamespaces.MATH_ML) {\n      if (parent.tag === 'annotation-xml') {\n        if (tag === 'svg') {\n          return DOMNamespaces.SVG\n        }\n        if (\n          parent.props.some(\n            a =>\n              a.type === NodeTypes.ATTRIBUTE &&\n              a.name === 'encoding' &&\n              a.value != null &&\n              (a.value.content === 'text/html' ||\n                a.value.content === 'application/xhtml+xml')\n          )\n        ) {\n          ns = DOMNamespaces.HTML\n        }\n      } else if (\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\n        tag !== 'mglyph' &&\n        tag !== 'malignmark'\n      ) {\n        ns = DOMNamespaces.HTML\n      }\n    } else if (parent && ns === DOMNamespaces.SVG) {\n      if (\n        parent.tag === 'foreignObject' ||\n        parent.tag === 'desc' ||\n        parent.tag === 'title'\n      ) {\n        ns = DOMNamespaces.HTML\n      }\n    }\n\n    if (ns === DOMNamespaces.HTML) {\n      if (tag === 'svg') {\n        return DOMNamespaces.SVG\n      }\n      if (tag === 'math') {\n        return DOMNamespaces.MATH_ML\n      }\n    }\n    return ns\n  },\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\n  getTextMode(tag: string, ns: DOMNamespaces): TextModes {\n    if (ns === DOMNamespaces.HTML) {\n      if (tag === 'textarea' || tag === 'title') {\n        return TextModes.RCDATA\n      }\n      if (\n        /^(?:style|xmp|iframe|noembed|noframes|script|noscript)$/i.test(tag)\n      ) {\n        return TextModes.RAWTEXT\n      }\n    }\n    return TextModes.DATA\n  }\n}\n","import {\n  NodeTransform,\n  NodeTypes,\n  createSimpleExpression\n} from '@vue/compiler-core'\n\n// Parse inline CSS strings for static style attributes into an object.\n// This is a NodeTransform since it works on the static `style` attribute and\n// converts it into a dynamic equivalent:\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\n// It is then processed by `transformElement` and included in the generated\n// props.\nexport const transformStyle: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.ELEMENT) {\n    node.props.forEach((p, i) => {\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\n        // replace p with an expression node\n        const parsed = JSON.stringify(parseInlineCSS(p.value.content))\n        const exp = context.hoist(createSimpleExpression(parsed, false, p.loc))\n        node.props[i] = {\n          type: NodeTypes.DIRECTIVE,\n          name: `bind`,\n          arg: createSimpleExpression(`style`, true, p.loc),\n          exp,\n          modifiers: [],\n          loc: p.loc\n        }\n      }\n    })\n  }\n}\n\nconst listDelimiterRE = /;(?![^(]*\\))/g\nconst propertyDelimiterRE = /:(.+)/\n\nfunction parseInlineCSS(cssText: string): Record<string, string> {\n  const res: Record<string, string> = {}\n  cssText.split(listDelimiterRE).forEach(function(item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE)\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim())\n    }\n  })\n  return res\n}\n","import { DirectiveTransform } from 'packages/compiler-core/src/transform'\n\nexport const transformCloak: DirectiveTransform = (node, context) => {\n  return { props: [], needRuntime: false }\n}\n","import {\n  SourceLocation,\n  CompilerError,\n  createCompilerError,\n  ErrorCodes\n} from '@vue/compiler-core'\n\nexport interface DOMCompilerError extends CompilerError {\n  code: DOMErrorCodes\n}\n\nexport function createDOMCompilerError(\n  code: DOMErrorCodes,\n  loc?: SourceLocation\n): DOMCompilerError {\n  return createCompilerError(\n    code,\n    loc,\n    __DEV__ || !__BROWSER__ ? DOMErrorMessages : undefined\n  )\n}\n\nexport const enum DOMErrorCodes {\n  X_V_HTML_NO_EXPRESSION = ErrorCodes.__EXTEND_POINT__,\n  X_V_HTML_WITH_CHILDREN,\n  X_V_TEXT_NO_EXPRESSION,\n  X_V_TEXT_WITH_CHILDREN,\n  X_V_MODEL_ON_INVALID_ELEMENT,\n  X_V_MODEL_ARG_ON_ELEMENT,\n  X_V_MODEL_ON_FILE_INPUT_ELEMENT\n}\n\nexport const DOMErrorMessages: { [code: number]: string } = {\n  [DOMErrorCodes.X_V_HTML_NO_EXPRESSION]: `v-html is missing expression.`,\n  [DOMErrorCodes.X_V_HTML_WITH_CHILDREN]: `v-html will override element children.`,\n  [DOMErrorCodes.X_V_TEXT_NO_EXPRESSION]: `v-text is missing expression.`,\n  [DOMErrorCodes.X_V_TEXT_WITH_CHILDREN]: `v-text will override element children.`,\n  [DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT]: `v-model argument is not supported on plain elements.`,\n  [DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT]: `v-model cannot used on file inputs since they are read-only. Use a v-on:change listener instead.`\n}\n","import {\n  DirectiveTransform,\n  createObjectProperty,\n  createSimpleExpression\n} from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\n\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc)\n    )\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc)\n    )\n    node.children.length = 0\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`innerHTML`, true, loc),\n        exp || createSimpleExpression('', true)\n      )\n    ],\n    needRuntime: false\n  }\n}\n","import {\n  DirectiveTransform,\n  createObjectProperty,\n  createSimpleExpression\n} from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\n\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc)\n    )\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc)\n    )\n    node.children.length = 0\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`textContent`, true, loc),\n        exp || createSimpleExpression('', true)\n      )\n    ],\n    needRuntime: false\n  }\n}\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\n\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\n\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\n\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`\n})\n","import {\n  transformModel as baseTransform,\n  DirectiveTransform,\n  ElementTypes,\n  findProp,\n  NodeTypes\n} from '@vue/compiler-core'\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\nimport {\n  V_MODEL_CHECKBOX,\n  V_MODEL_RADIO,\n  V_MODEL_SELECT,\n  V_MODEL_TEXT,\n  V_MODEL_DYNAMIC\n} from '../runtimeHelpers'\n\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\n  const baseResult = baseTransform(dir, node, context)\n  // base transform has errors\n  if (!baseResult.props.length) {\n    return baseResult\n  }\n\n  const { tag, tagType } = node\n  if (tagType === ElementTypes.ELEMENT) {\n    if (dir.arg) {\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\n          dir.arg.loc\n        )\n      )\n    }\n\n    if (tag === 'input' || tag === 'textarea' || tag === 'select') {\n      let directiveToUse = V_MODEL_TEXT\n      let isInvalidType = false\n      if (tag === 'input') {\n        const type = findProp(node, `type`)\n        if (type) {\n          if (type.type === NodeTypes.DIRECTIVE) {\n            // :type=\"foo\"\n            directiveToUse = V_MODEL_DYNAMIC\n          } else if (type.value) {\n            switch (type.value.content) {\n              case 'radio':\n                directiveToUse = V_MODEL_RADIO\n                break\n              case 'checkbox':\n                directiveToUse = V_MODEL_CHECKBOX\n                break\n              case 'file':\n                isInvalidType = true\n                context.onError(\n                  createDOMCompilerError(\n                    DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\n                    dir.loc\n                  )\n                )\n                break\n            }\n          }\n        }\n      } else if (tag === 'select') {\n        directiveToUse = V_MODEL_SELECT\n      }\n      // inject runtime directive\n      // by returning the helper symbol via needRuntime\n      // the import will replaced a resolveDirective call.\n      if (!isInvalidType) {\n        baseResult.needRuntime = context.helper(directiveToUse)\n      }\n    } else {\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\n          dir.loc\n        )\n      )\n    }\n  }\n  return baseResult\n}\n","import {\n  transformOn as baseTransform,\n  DirectiveTransform,\n  createObjectProperty,\n  createCallExpression,\n  createObjectExpression,\n  createSimpleExpression,\n  NodeTypes\n} from '@vue/compiler-core'\nimport { V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS } from '../runtimeHelpers'\nimport { makeMap } from '@vue/shared'\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\n  // event propagation management\n  `stop,prevent,self,` +\n    // system modifiers + exact\n    `ctrl,shift,alt,meta,exact,` +\n    // mouse\n    `left,middle,right`\n)\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\n  `onkeyup,onkeydown,onkeypress`,\n  true\n)\n\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\n  return baseTransform(dir, node, context, baseResult => {\n    const { modifiers } = dir\n    if (!modifiers.length) return baseResult\n\n    let { key, value: handlerExp } = baseResult.props[0]\n\n    // modifiers for addEventListener() options, e.g. .passive & .capture\n    const eventOptionModifiers = modifiers.filter(isEventOptionModifier)\n    // modifiers that needs runtime guards\n    const runtimeModifiers = modifiers.filter(m => !isEventOptionModifier(m))\n\n    // built-in modifiers that are not keys\n    const nonKeyModifiers = runtimeModifiers.filter(isNonKeyModifier)\n    if (nonKeyModifiers.length) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ])\n    }\n\n    const keyModifiers = runtimeModifiers.filter(m => !isNonKeyModifier(m))\n    if (\n      keyModifiers.length &&\n      // if event name is dynamic, always wrap with keys guard\n      (key.type === NodeTypes.COMPOUND_EXPRESSION ||\n        !key.isStatic ||\n        isKeyboardEvent(key.content))\n    ) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ])\n    }\n\n    if (eventOptionModifiers.length) {\n      handlerExp = createObjectExpression([\n        createObjectProperty('handler', handlerExp),\n        createObjectProperty(\n          'options',\n          createObjectExpression(\n            eventOptionModifiers.map(modifier =>\n              createObjectProperty(\n                modifier,\n                createSimpleExpression('true', false)\n              )\n            )\n          )\n        )\n      ])\n    }\n\n    return {\n      props: [createObjectProperty(key, handlerExp)],\n      needRuntime: false\n    }\n  })\n}\n","import { baseCompile, CompilerOptions, CodegenResult } from '@vue/compiler-core'\nimport { parserOptionsMinimal } from './parserOptionsMinimal'\nimport { parserOptionsStandard } from './parserOptionsStandard'\nimport { transformStyle } from './transforms/transformStyle'\nimport { transformCloak } from './transforms/vCloak'\nimport { transformVHtml } from './transforms/vHtml'\nimport { transformVText } from './transforms/vText'\nimport { transformModel } from './transforms/vModel'\nimport { transformOn } from './transforms/vOn'\n\nexport function compile(\n  template: string,\n  options: CompilerOptions = {}\n): CodegenResult {\n  return baseCompile(template, {\n    ...options,\n    ...(__BROWSER__ ? parserOptionsMinimal : parserOptionsStandard),\n    nodeTransforms: [transformStyle, ...(options.nodeTransforms || [])],\n    directiveTransforms: {\n      cloak: transformCloak,\n      html: transformVHtml,\n      text: transformVText,\n      model: transformModel, // override compiler-core\n      on: transformOn,\n      ...(options.directiveTransforms || {})\n    }\n  })\n}\n\nexport * from '@vue/compiler-core'\nexport * from './tagConfig'\n"],"names":["isText","transformModel","baseTransform","transformOn"],"mappings":"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"}