{"version":3,"file":"runtime-dom.global.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/index.ts","../../reactivity/src/lock.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/effect.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/apiApp.ts","../../runtime-core/src/suspense.ts","../../runtime-core/src/createRenderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/componentProxy.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/apiOptions.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-dom/src/runtimeHelpers.ts","../../runtime-core/src/apiReactivity.ts","../../runtime-core/src/shapeFlags.ts","../../runtime-core/src/helpers/resolveAssets.ts","../src/nodeOps.ts","../src/modules/events.ts","../src/directives/vModel.ts","../src/directives/vOn.ts","../src/index.ts","../src/patchProp.ts","../src/modules/class.ts","../src/modules/style.ts","../src/modules/props.ts","../src/modules/attrs.ts","../../shared/src/patchFlags.ts","../../runtime-core/src/apiCreateComponent.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-core/src/helpers/toString.ts","../../runtime-core/src/index.ts"],"sourcesContent":["// Make a map and return a function for checking if a key\n// is in that map.\n//\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\n// So that rollup can tree-shake them if necessary.\nexport function makeMap(\n  str: string,\n  expectsLowerCase?: boolean\n): (key: string) => boolean {\n  const map: Record<string, boolean> = Object.create(null)\n  const list: Array<string> = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\n}\n","export * from './patchFlags'\nexport { isGloballyWhitelisted } from './globalsWhitelist'\nexport { makeMap } from './makeMap'\n\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\n  ? Object.freeze({})\n  : {}\nexport const EMPTY_ARR: [] = []\n\nexport const NOOP = () => {}\n\n/**\n * Always return false.\n */\nexport const NO = () => false\n\nexport const isOn = (key: string) => key[0] === 'o' && key[1] === 'n'\n\nexport const extend = <T extends object, U extends object>(\n  a: T,\n  b: U\n): T & U => {\n  for (const key in b) {\n    ;(a as any)[key] = b[key]\n  }\n  return a as any\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (\n  val: object,\n  key: string | symbol\n): key is keyof typeof val => hasOwnProperty.call(val, key)\n\nexport const isArray = Array.isArray\nexport const isFunction = (val: unknown): val is Function =>\n  typeof val === 'function'\nexport const isString = (val: unknown): val is string => typeof val === 'string'\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\nexport const isObject = (val: unknown): val is Record<any, any> =>\n  val !== null && typeof val === 'object'\n\nexport function isPromise<T = any>(val: unknown): val is Promise<T> {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\n}\n\nexport const objectToString = Object.prototype.toString\nexport const toTypeString = (value: unknown): string =>\n  objectToString.call(value)\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\n\nexport const isReservedProp = (key: string): boolean =>\n  key === 'key' || key === 'ref' || key === '$once' || key.startsWith(`onVnode`)\n\nconst camelizeRE = /-(\\w)/g\nexport const camelize = (str: string): string => {\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\n}\n\nconst hyphenateRE = /\\B([A-Z])/g\nexport const hyphenate = (str: string): string => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n}\n\nexport const capitalize = (str: string): string => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n","// global immutability lock\nexport let LOCKED = true\n\nexport function lock() {\n  LOCKED = true\n}\n\nexport function unlock() {\n  LOCKED = false\n}\n","import { reactive, readonly, toRaw } from './reactive'\nimport { OperationTypes } from './operations'\nimport { track, trigger } from './effect'\nimport { LOCKED } from './lock'\nimport { isObject, hasOwn, isSymbol } from '@vue/shared'\nimport { isRef } from './ref'\n\nconst builtInSymbols = new Set(\n  Object.getOwnPropertyNames(Symbol)\n    .map(key => (Symbol as any)[key])\n    .filter(isSymbol)\n)\n\n/**\n * 创建proxy里面的get处理函数\n * @param isReadonly 否是是处理只读\n */\nfunction createGetter(isReadonly: boolean) {\n  /**\n   * get函数\n   */\n  return function get(target: any, key: string | symbol, receiver: any) {\n    //获取到Reflect执行的结果\n    const res = Reflect.get(target, key, receiver)\n    //防止key为Symbol的内置对象，比如 Symbol.iterator\n    if (isSymbol(key) && builtInSymbols.has(key)) {\n      return res\n    }\n    //如果是ref包装过的数据，直接调用Value触发get，获取值之后，再返回\n    if (isRef(res)) {\n      return res.value\n    }\n    //TODO:看着像跟踪，依赖收集，后面再看\n    track(target, OperationTypes.GET, key)\n\n    /**\n     * 对深层对象再次包装，\n     * 判断内层是否是对象，不是就直接返回\n     * 如果是对象，判断是否是要做只读处理，\n     * 如果是只读，就调用只读\n     * 不是的话，就调用\n     */\n    return isObject(res)\n      ? isReadonly\n        ? // need to lazy access readonly and reactive here to avoid\n          // circular dependency\n          readonly(res)\n        : reactive(res)\n      : res\n  }\n}\n\n/**\n * proxy中set方法的优化,包含只读数据的处理和响应式数据的处理\n * @param target\n * @param key\n * @param value\n * @param receiver\n */\nfunction set(\n  target: any,\n  key: string | symbol,\n  value: any,\n  receiver: any\n): boolean {\n  //获取原始的数据\n  value = toRaw(value)\n  //拿到之前的老值\n  const oldValue = target[key]\n  //判断老数据是否是已经被ref处理过的，并且新数据没有没ref处理过\n  if (isRef(oldValue) && !isRef(value)) {\n    //更新老数据，并且返回\n    // 如果 value 不是响应式数据，则需要将其赋值给 oldValue，调用set value，\n    //如果 isObject(value) ，则会经过 reactive 再包装一次，将其变成响应式数据\n    oldValue.value = value\n    return true\n  }\n  /**\n   *   key是target自己的属性\n   *\n   *   这个方法是解决 数组push时，会调用两次 set 的情况，比如 arr.push(1)\n   *   第一次set，在数组尾部添加1\n   *   第二次set，给数组添加length属性\n   *   hasOwnProperty 方法用来判断目标对象是否含有指定属性。数组本身就有length的属性，所以这里是 true\n   */\n  const hadKey = hasOwn(target, key)\n  //执行返回结果\n  const result = Reflect.set(target, key, value, receiver)\n  // don't trigger if target is something up in the prototype chain of original\n  //target 如果只读 或者 存在于 reactiveToRaw 则不进入条件，reactiveToRaw 储存着代理后的对象\n  //已经是代理之后的值了\n  if (target === toRaw(receiver)) {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      const extraInfo = { oldValue, newValue: value }\n      if (!hadKey) {\n        trigger(target, OperationTypes.ADD, key, extraInfo)\n      } else if (value !== oldValue) {\n        trigger(target, OperationTypes.SET, key, extraInfo)\n      }\n    } else {\n      //属性新增，触发 ADD 枚举\n      if (!hadKey) {\n        trigger(target, OperationTypes.ADD, key)\n      } else if (value !== oldValue) {\n        // 属性修改，触发 SET 枚举\n        trigger(target, OperationTypes.SET, key)\n      }\n    }\n  }\n  return result\n}\n\n//删除属性处理\nfunction deleteProperty(target: any, key: string | symbol): boolean {\n  const hadKey = hasOwn(target, key)\n  const oldValue = target[key]\n  const result = Reflect.deleteProperty(target, key)\n  if (result && hadKey) {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      trigger(target, OperationTypes.DELETE, key, { oldValue })\n    } else {\n      trigger(target, OperationTypes.DELETE, key)\n    }\n  }\n  return result\n}\n//查询属性处理\nfunction has(target: any, key: string | symbol): boolean {\n  const result = Reflect.has(target, key)\n  track(target, OperationTypes.HAS, key)\n  return result\n}\n//获取key的属性处理\nfunction ownKeys(target: any): (string | number | symbol)[] {\n  track(target, OperationTypes.ITERATE)\n  return Reflect.ownKeys(target)\n}\n\n//可变数据处理handler\nexport const mutableHandlers: ProxyHandler<any> = {\n  get: createGetter(false),\n  set,\n  deleteProperty,\n  has,\n  ownKeys\n}\n\n//只读数据handler\nexport const readonlyHandlers: ProxyHandler<any> = {\n  //创建get\n  get: createGetter(true),\n  //创建set\n  set(target: any, key: string | symbol, value: any, receiver: any): boolean {\n    //判断是否已经锁住\n    if (LOCKED) {\n      if (__DEV__) {\n        console.warn(\n          `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n          target\n        )\n      }\n      return true\n    } else {\n      return set(target, key, value, receiver)\n    }\n  },\n\n  deleteProperty(target: any, key: string | symbol): boolean {\n    if (LOCKED) {\n      if (__DEV__) {\n        console.warn(\n          `Delete operation on key \"${String(\n            key\n          )}\" failed: target is readonly.`,\n          target\n        )\n      }\n      return true\n    } else {\n      return deleteProperty(target, key)\n    }\n  },\n\n  has,\n  ownKeys\n}\n","import { toRaw, reactive, readonly } from './reactive'\nimport { track, trigger } from './effect'\nimport { OperationTypes } from './operations'\nimport { LOCKED } from './lock'\nimport { isObject, capitalize, hasOwn } from '@vue/shared'\n\nconst toReactive = (value: any) => (isObject(value) ? reactive(value) : value)\nconst toReadonly = (value: any) => (isObject(value) ? readonly(value) : value)\n\nfunction get(target: any, key: any, wrap: (t: any) => any): any {\n  target = toRaw(target)\n  key = toRaw(key)\n  const proto: any = Reflect.getPrototypeOf(target)\n  track(target, OperationTypes.GET, key)\n  const res = proto.get.call(target, key)\n  return wrap(res)\n}\n\nfunction has(this: any, key: any): boolean {\n  const target = toRaw(this)\n  key = toRaw(key)\n  const proto: any = Reflect.getPrototypeOf(target)\n  track(target, OperationTypes.HAS, key)\n  return proto.has.call(target, key)\n}\n\nfunction size(target: any) {\n  target = toRaw(target)\n  const proto = Reflect.getPrototypeOf(target)\n  track(target, OperationTypes.ITERATE)\n  return Reflect.get(proto, 'size', target)\n}\n\nfunction add(this: any, value: any) {\n  value = toRaw(value)\n  const target = toRaw(this)\n  const proto: any = Reflect.getPrototypeOf(this)\n  const hadKey = proto.has.call(target, value)\n  const result = proto.add.call(target, value)\n  if (!hadKey) {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      trigger(target, OperationTypes.ADD, value, { value })\n    } else {\n      trigger(target, OperationTypes.ADD, value)\n    }\n  }\n  return result\n}\n\nfunction set(this: any, key: any, value: any) {\n  value = toRaw(value)\n  const target = toRaw(this)\n  const proto: any = Reflect.getPrototypeOf(this)\n  const hadKey = proto.has.call(target, key)\n  const oldValue = proto.get.call(target, key)\n  const result = proto.set.call(target, key, value)\n  if (value !== oldValue) {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      const extraInfo = { oldValue, newValue: value }\n      if (!hadKey) {\n        trigger(target, OperationTypes.ADD, key, extraInfo)\n      } else {\n        trigger(target, OperationTypes.SET, key, extraInfo)\n      }\n    } else {\n      if (!hadKey) {\n        trigger(target, OperationTypes.ADD, key)\n      } else {\n        trigger(target, OperationTypes.SET, key)\n      }\n    }\n  }\n  return result\n}\n\nfunction deleteEntry(this: any, key: any) {\n  const target = toRaw(this)\n  const proto: any = Reflect.getPrototypeOf(this)\n  const hadKey = proto.has.call(target, key)\n  const oldValue = proto.get ? proto.get.call(target, key) : undefined\n  // forward the operation before queueing reactions\n  const result = proto.delete.call(target, key)\n  if (hadKey) {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      trigger(target, OperationTypes.DELETE, key, { oldValue })\n    } else {\n      trigger(target, OperationTypes.DELETE, key)\n    }\n  }\n  return result\n}\n\nfunction clear(this: any) {\n  const target = toRaw(this)\n  const proto: any = Reflect.getPrototypeOf(this)\n  const hadItems = target.size !== 0\n  const oldTarget = target instanceof Map ? new Map(target) : new Set(target)\n  // forward the operation before queueing reactions\n  const result = proto.clear.call(target)\n  if (hadItems) {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      trigger(target, OperationTypes.CLEAR, void 0, { oldTarget })\n    } else {\n      trigger(target, OperationTypes.CLEAR)\n    }\n  }\n  return result\n}\n\nfunction createForEach(isReadonly: boolean) {\n  return function forEach(this: any, callback: Function, thisArg?: any) {\n    const observed = this\n    const target = toRaw(observed)\n    const proto: any = Reflect.getPrototypeOf(target)\n    const wrap = isReadonly ? toReadonly : toReactive\n    track(target, OperationTypes.ITERATE)\n    // important: create sure the callback is\n    // 1. invoked with the reactive map as `this` and 3rd arg\n    // 2. the value received should be a corresponding reactive/readonly.\n    function wrappedCallback(value: any, key: any) {\n      return callback.call(observed, wrap(value), wrap(key), observed)\n    }\n    return proto.forEach.call(target, wrappedCallback, thisArg)\n  }\n}\n\nfunction createIterableMethod(method: string | symbol, isReadonly: boolean) {\n  return function(this: any, ...args: any[]) {\n    const target = toRaw(this)\n    const proto: any = Reflect.getPrototypeOf(target)\n    const isPair =\n      method === 'entries' ||\n      (method === Symbol.iterator && target instanceof Map)\n    const innerIterator = proto[method].apply(target, args)\n    const wrap = isReadonly ? toReadonly : toReactive\n    track(target, OperationTypes.ITERATE)\n    // return a wrapped iterator which returns observed versions of the\n    // values emitted from the real iterator\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next()\n        return done\n          ? { value, done }\n          : {\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n              done\n            }\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this\n      }\n    }\n  }\n}\n\nfunction createReadonlyMethod(\n  method: Function,\n  type: OperationTypes\n): Function {\n  return function(this: any, ...args: any[]) {\n    if (LOCKED) {\n      if (__DEV__) {\n        const key = args[0] ? `on key \"${args[0]}\" ` : ``\n        console.warn(\n          `${capitalize(type)} operation ${key}failed: target is readonly.`,\n          toRaw(this)\n        )\n      }\n      return type === OperationTypes.DELETE ? false : this\n    } else {\n      return method.apply(this, args)\n    }\n  }\n}\n\nconst mutableInstrumentations: any = {\n  get(key: any) {\n    return get(this, key, toReactive)\n  },\n  get size() {\n    return size(this)\n  },\n  has,\n  add,\n  set,\n  delete: deleteEntry,\n  clear,\n  forEach: createForEach(false)\n}\n\nconst readonlyInstrumentations: any = {\n  get(key: any) {\n    return get(this, key, toReadonly)\n  },\n  get size() {\n    return size(this)\n  },\n  has,\n  add: createReadonlyMethod(add, OperationTypes.ADD),\n  set: createReadonlyMethod(set, OperationTypes.SET),\n  delete: createReadonlyMethod(deleteEntry, OperationTypes.DELETE),\n  clear: createReadonlyMethod(clear, OperationTypes.CLEAR),\n  forEach: createForEach(true)\n}\n\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\niteratorMethods.forEach(method => {\n  mutableInstrumentations[method] = createIterableMethod(method, false)\n  readonlyInstrumentations[method] = createIterableMethod(method, true)\n})\n\nfunction createInstrumentationGetter(instrumentations: any) {\n  return function getInstrumented(\n    target: any,\n    key: string | symbol,\n    receiver: any\n  ) {\n    target =\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target\n    return Reflect.get(target, key, receiver)\n  }\n}\n\nexport const mutableCollectionHandlers: ProxyHandler<any> = {\n  get: createInstrumentationGetter(mutableInstrumentations)\n}\n\nexport const readonlyCollectionHandlers: ProxyHandler<any> = {\n  get: createInstrumentationGetter(readonlyInstrumentations)\n}\n","import { isObject, toTypeString } from '@vue/shared'\nimport { mutableHandlers, readonlyHandlers } from './baseHandlers'\nimport {\n  mutableCollectionHandlers,\n  readonlyCollectionHandlers\n} from './collectionHandlers'\nimport { ReactiveEffect } from './effect'\nimport { UnwrapRef, Ref } from './ref'\nimport { makeMap } from '@vue/shared'\n\n// The main WeakMap that stores {target -> key -> dep} connections.\n// Conceptually, it's easier to think of a dependency as a Dep class\n// which maintains a Set of subscribers, but we simply store them as\n// raw Sets to reduce memory overhead.\n//这个WeakMap储存着（target-> key->dep）,在概念上，把依赖看着Dep 类维护了一组订阅，更好理解，\n//我们只是把它储存为原始set 可以减少内存开销\n\nexport type Dep = Set<ReactiveEffect>\nexport type KeyToDepMap = Map<string | symbol, Dep>\nexport const targetMap = new WeakMap<any, KeyToDepMap>()\n\n// WeakMaps that store {raw <-> observed} pairs.\n//原始数据到响应数据之间的映射\nconst rawToReactive = new WeakMap<any, any>()\nconst reactiveToRaw = new WeakMap<any, any>()\nconst rawToReadonly = new WeakMap<any, any>()\nconst readonlyToRaw = new WeakMap<any, any>()\n\n// WeakSets for values that are marked readonly or non-reactive during\n// observable creation.\n\nconst readonlyValues = new WeakSet<any>()\nconst nonReactiveValues = new WeakSet<any>()\n\nconst collectionTypes = new Set<Function>([Set, Map, WeakMap, WeakSet])\nconst isObservableType = /*#__PURE__*/ makeMap(\n  ['Object', 'Array', 'Map', 'Set', 'WeakMap', 'WeakSet']\n    .map(t => `[object ${t}]`)\n    .join(',')\n)\n\n/**\n * 判断是否可以observable\n * @param value\n */\nconst canObserve = (value: any): boolean => {\n  return (\n    //不是Vue对象\n    !value._isVue &&\n    //不是VNode\n    !value._isVNode &&\n    //是Object、Array、Map、Set、WeakMap、WeakSet\n    isObservableType(toTypeString(value)) &&\n    //没有被代理过\n    !nonReactiveValues.has(value)\n  )\n}\n\n// only unwrap nested ref\ntype UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRef<T>\n\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\nexport function reactive(target: object) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  //如果target是只读，返回这个target\n  if (readonlyToRaw.has(target)) {\n    return target\n  }\n  // target is explicitly marked as readonly by user\n  //target被用户标记成了只读，那么就让他变成只读，并返回\n  if (readonlyValues.has(target)) {\n    return readonly(target)\n  }\n  //创建响应式数据\n  return createReactiveObject(\n    target, //原始值\n    rawToReactive, //原始值到响应数据的映射\n    reactiveToRaw, //响应数据到原始值的映射\n    mutableHandlers,\n    mutableCollectionHandlers\n  )\n}\n\nexport function readonly<T extends object>(\n  target: T\n): Readonly<UnwrapNestedRefs<T>> {\n  // value is a mutable observable, retrieve its original and return\n  // a readonly version.\n  //如果值已经是响应类型的值了，那么就取出他的原始值\n  if (reactiveToRaw.has(target)) {\n    target = reactiveToRaw.get(target)\n  }\n  //创建响应对象\n  return createReactiveObject(\n    target, //原始值\n    rawToReadonly, //原始值到只读数据的映射\n    readonlyToRaw, //只读数据到原始值的映射\n    readonlyHandlers,\n    readonlyCollectionHandlers\n  )\n}\n/**\n * 创建响应类型\n * @param target\n * @param toProxy\n * @param toRaw\n * @param baseHandlers\n * @param collectionHandlers\n */\nfunction createReactiveObject(\n  target: any,\n  toProxy: WeakMap<any, any>,\n  toRaw: WeakMap<any, any>,\n  baseHandlers: ProxyHandler<any>,\n  collectionHandlers: ProxyHandler<any>\n) {\n  //判断是否是基本元素（数字、字符串、布尔），如果是基本元素，就直接返回\n  if (!isObject(target)) {\n    if (__DEV__) {\n      console.warn(`value cannot be made reactive: ${String(target)}`)\n    }\n    return target\n  }\n  // target already has corresponding Proxy\n  //获取已经处理过的对象（可相应的、只读的）\n  let observed = toProxy.get(target)\n  //如果已经有了处理过的对象（可相应的、只读的），直接返回此对象\n  if (observed !== void 0) {\n    return observed\n  }\n  // target is already a Proxy\n  //数据已经是一个处理过的对象（可相应的、只读的），返回\n  if (toRaw.has(target)) {\n    return target\n  }\n  // only a whitelist of value types can be observed.\n  //只有白名单的对象才可以被代理\n  if (!canObserve(target)) {\n    return target\n  }\n  //collectionTypes表示Set, Map, WeakMap, WeakSet的集合，判断对象是否是这几种类型，来使用不同的处理函数\n  const handlers = collectionTypes.has(target.constructor)\n    ? collectionHandlers\n    : baseHandlers\n  //数据处理\n  observed = new Proxy(target, handlers)\n  toProxy.set(target, observed) //设置原始数据到处理后的数据的弱引用\n  toRaw.set(observed, target) //设置处理后的数据到原始数据的弱引用\n  //如果之前数据没有处理过，那么就设置target到key到Dep的引用关系\n  if (!targetMap.has(target)) {\n    targetMap.set(target, new Map())\n  }\n  return observed\n}\n\nexport function isReactive(value: any): boolean {\n  return reactiveToRaw.has(value) || readonlyToRaw.has(value)\n}\n\nexport function isReadonly(value: any): boolean {\n  return readonlyToRaw.has(value)\n}\n\n/**\n * 获取原始数据\n * @param observed\n */\nexport function toRaw<T>(observed: T): T {\n  return reactiveToRaw.get(observed) || readonlyToRaw.get(observed) || observed\n}\n\n/**\n * 标记数据为只读数据\n * @param value\n */\nexport function markReadonly<T>(value: T): T {\n  readonlyValues.add(value)\n  return value\n}\n\n//标记没有被处理过的数据\nexport function markNonReactive<T>(value: T): T {\n  nonReactiveValues.add(value)\n  return value\n}\n","import { OperationTypes } from './operations'\nimport { Dep, targetMap } from './reactive'\nimport { EMPTY_OBJ, extend } from '@vue/shared'\n\nexport const effectSymbol = Symbol(__DEV__ ? 'effect' : void 0)\n\nexport interface ReactiveEffect<T = any> {\n  (): T\n  [effectSymbol]: true\n  active: boolean\n  raw: () => T\n  deps: Array<Dep>\n  computed?: boolean\n  scheduler?: (run: Function) => void\n  onTrack?: (event: DebuggerEvent) => void\n  onTrigger?: (event: DebuggerEvent) => void\n  onStop?: () => void\n}\n\nexport interface ReactiveEffectOptions {\n  lazy?: boolean\n  computed?: boolean\n  scheduler?: (run: Function) => void\n  onTrack?: (event: DebuggerEvent) => void\n  onTrigger?: (event: DebuggerEvent) => void\n  onStop?: () => void\n}\n\nexport interface DebuggerEvent {\n  effect: ReactiveEffect\n  target: any\n  type: OperationTypes\n  key: string | symbol | undefined\n}\n\nexport const effectStack: ReactiveEffect[] = []\n\nexport const ITERATE_KEY = Symbol('iterate')\n\nexport function isEffect(fn: any): fn is ReactiveEffect {\n  return fn != null && fn[effectSymbol] === true\n}\n\nexport function effect<T = any>(\n  fn: () => T,\n  options: ReactiveEffectOptions = EMPTY_OBJ\n): ReactiveEffect<T> {\n  if (isEffect(fn)) {\n    fn = fn.raw\n  }\n  const effect = createReactiveEffect(fn, options)\n  if (!options.lazy) {\n    effect()\n  }\n  return effect\n}\n\nexport function stop(effect: ReactiveEffect) {\n  if (effect.active) {\n    cleanup(effect)\n    if (effect.onStop) {\n      effect.onStop()\n    }\n    effect.active = false\n  }\n}\n\nfunction createReactiveEffect<T = any>(\n  fn: () => T,\n  options: ReactiveEffectOptions\n): ReactiveEffect<T> {\n  const effect = function reactiveEffect(...args: any[]): any {\n    return run(effect, fn, args)\n  } as ReactiveEffect\n  effect[effectSymbol] = true\n  effect.active = true\n  effect.raw = fn\n  effect.scheduler = options.scheduler\n  effect.onTrack = options.onTrack\n  effect.onTrigger = options.onTrigger\n  effect.onStop = options.onStop\n  effect.computed = options.computed\n  effect.deps = []\n  return effect\n}\n\nfunction run(effect: ReactiveEffect, fn: Function, args: any[]): any {\n  if (!effect.active) {\n    return fn(...args)\n  }\n  if (!effectStack.includes(effect)) {\n    cleanup(effect)\n    try {\n      effectStack.push(effect)\n      return fn(...args)\n    } finally {\n      effectStack.pop()\n    }\n  }\n}\n\nfunction cleanup(effect: ReactiveEffect) {\n  const { deps } = effect\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect)\n    }\n    deps.length = 0\n  }\n}\n\nlet shouldTrack = true\n\nexport function pauseTracking() {\n  shouldTrack = false\n}\n\nexport function resumeTracking() {\n  shouldTrack = true\n}\n\nexport function track(\n  target: any,\n  type: OperationTypes,\n  key?: string | symbol\n) {\n  if (!shouldTrack || effectStack.length === 0) {\n    return\n  }\n  const effect = effectStack[effectStack.length - 1]\n  if (type === OperationTypes.ITERATE) {\n    key = ITERATE_KEY\n  }\n  let depsMap = targetMap.get(target)\n  if (depsMap === void 0) {\n    targetMap.set(target, (depsMap = new Map()))\n  }\n  let dep = depsMap.get(key!)\n  if (dep === void 0) {\n    depsMap.set(key!, (dep = new Set()))\n  }\n  if (!dep.has(effect)) {\n    dep.add(effect)\n    effect.deps.push(dep)\n    if (__DEV__ && effect.onTrack) {\n      effect.onTrack({\n        effect,\n        target,\n        type,\n        key\n      })\n    }\n  }\n}\n\nexport function trigger(\n  target: any,\n  type: OperationTypes,\n  key?: string | symbol,\n  extraInfo?: any\n) {\n  const depsMap = targetMap.get(target)\n  if (depsMap === void 0) {\n    // never been tracked\n    return\n  }\n  const effects = new Set<ReactiveEffect>()\n  const computedRunners = new Set<ReactiveEffect>()\n  if (type === OperationTypes.CLEAR) {\n    // collection being cleared, trigger all effects for target\n    depsMap.forEach(dep => {\n      addRunners(effects, computedRunners, dep)\n    })\n  } else {\n    // schedule runs for SET | ADD | DELETE\n    if (key !== void 0) {\n      addRunners(effects, computedRunners, depsMap.get(key))\n    }\n    // also run for iteration key on ADD | DELETE\n    if (type === OperationTypes.ADD || type === OperationTypes.DELETE) {\n      const iterationKey = Array.isArray(target) ? 'length' : ITERATE_KEY\n      addRunners(effects, computedRunners, depsMap.get(iterationKey))\n    }\n  }\n  const run = (effect: ReactiveEffect) => {\n    scheduleRun(effect, target, type, key, extraInfo)\n  }\n  // Important: computed effects must be run first so that computed getters\n  // can be invalidated before any normal effects that depend on them are run.\n  computedRunners.forEach(run)\n  effects.forEach(run)\n}\n\nfunction addRunners(\n  effects: Set<ReactiveEffect>,\n  computedRunners: Set<ReactiveEffect>,\n  effectsToAdd: Set<ReactiveEffect> | undefined\n) {\n  if (effectsToAdd !== void 0) {\n    effectsToAdd.forEach(effect => {\n      if (effect.computed) {\n        computedRunners.add(effect)\n      } else {\n        effects.add(effect)\n      }\n    })\n  }\n}\n\nfunction scheduleRun(\n  effect: ReactiveEffect,\n  target: any,\n  type: OperationTypes,\n  key: string | symbol | undefined,\n  extraInfo: any\n) {\n  if (__DEV__ && effect.onTrigger) {\n    effect.onTrigger(\n      extend(\n        {\n          effect,\n          target,\n          key,\n          type\n        },\n        extraInfo\n      )\n    )\n  }\n  if (effect.scheduler !== void 0) {\n    effect.scheduler(effect)\n  } else {\n    effect()\n  }\n}\n","import { track, trigger } from './effect'\nimport { OperationTypes } from './operations'\nimport { isObject } from '@vue/shared'\nimport { reactive } from './reactive'\nimport { ComputedRef } from './computed'\n\nexport interface Ref<T = any> {\n  _isRef: true\n  value: UnwrapRef<T>\n}\n\nconst convert = (val: any): any => (isObject(val) ? reactive(val) : val)\n\nexport function ref<T extends Ref>(raw: T): T\nexport function ref<T>(raw: T): Ref<T>\nexport function ref(raw: any) {\n  if (isRef(raw)) {\n    return raw\n  }\n  /**\n   * 如果是对象，则用 reactive 方法 包装 raw\n   * const convert = (val: any): any => (isObject(val) ? reactive(val) : val)\n   */\n  raw = convert(raw)\n\n  /**\n   * 返回v，Ref类型，获取value值的时候，调用track方法，存value值时，调用 trigger方法\n   * v.value触发get，v.value=2触发set\n   */\n  const v = {\n    _isRef: true,\n    get value() {\n      //TODO:why track\n      track(v, OperationTypes.GET, '')\n      return raw\n    },\n    set value(newVal) {\n      //对数据包装\n      raw = convert(newVal)\n      //TODO:why trigger\n      trigger(v, OperationTypes.SET, '')\n    }\n  }\n  return v as Ref\n}\n\n//判断是否是ref\nexport function isRef(v: any): v is Ref {\n  return v ? v._isRef === true : false\n}\n/**\n * 转换为ref\n * @param object\n */\nexport function toRefs<T extends object>(\n  object: T\n): { [K in keyof T]: Ref<T[K]> } {\n  const ret: any = {}\n  for (const key in object) {\n    ret[key] = toProxyRef(object, key)\n  }\n  return ret\n}\n/**\n * 转换ref数据\n * @param object\n * @param key\n */\nfunction toProxyRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K\n): Ref<T[K]> {\n  return {\n    _isRef: true,\n    get value(): any {\n      return object[key]\n    },\n    set value(newVal) {\n      object[key] = newVal\n    }\n  }\n}\n\ntype BailTypes =\n  | Function\n  | Map<any, any>\n  | Set<any>\n  | WeakMap<any, any>\n  | WeakSet<any>\n\n// Recursively unwraps nested value bindings.\nexport type UnwrapRef<T> = {\n  cRef: T extends ComputedRef<infer V> ? UnwrapRef<V> : T\n  ref: T extends Ref<infer V> ? UnwrapRef<V> : T\n  array: T extends Array<infer V> ? Array<UnwrapRef<V>> : T\n  object: { [K in keyof T]: UnwrapRef<T[K]> }\n}[T extends ComputedRef<any>\n  ? 'cRef'\n  : T extends Ref\n    ? 'ref'\n    : T extends Array<any>\n      ? 'array'\n      : T extends BailTypes\n        ? 'ref' // bail out on types that shouldn't be unwrapped\n        : T extends object ? 'object' : 'ref']\n","import { effect, ReactiveEffect, effectStack } from './effect'\nimport { Ref, UnwrapRef } from './ref'\nimport { isFunction, NOOP } from '@vue/shared'\n\nexport interface ComputedRef<T> extends WritableComputedRef<T> {\n  readonly value: UnwrapRef<T>\n}\n\nexport interface WritableComputedRef<T> extends Ref<T> {\n  readonly effect: ReactiveEffect<T>\n}\n\nexport type ComputedGetter<T> = () => T\nexport type ComputedSetter<T> = (v: T) => void\n\nexport interface WritableComputedOptions<T> {\n  get: ComputedGetter<T>\n  set: ComputedSetter<T>\n}\n\nexport function computed<T>(getter: ComputedGetter<T>): ComputedRef<T>\nexport function computed<T>(\n  options: WritableComputedOptions<T>\n): WritableComputedRef<T>\nexport function computed<T>(\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>\n): any {\n  const isReadonly = isFunction(getterOrOptions)\n  const getter = isReadonly\n    ? (getterOrOptions as ComputedGetter<T>)\n    : (getterOrOptions as WritableComputedOptions<T>).get\n  const setter = isReadonly\n    ? __DEV__\n      ? () => {\n          console.warn('Write operation failed: computed value is readonly')\n        }\n      : NOOP\n    : (getterOrOptions as WritableComputedOptions<T>).set\n\n  let dirty = true\n  let value: T\n\n  const runner = effect(getter, {\n    lazy: true,\n    // mark effect as computed so that it gets priority during trigger\n    computed: true,\n    scheduler: () => {\n      dirty = true\n    }\n  })\n  return {\n    _isRef: true,\n    // expose effect so computed can be stopped\n    effect: runner,\n    get value() {\n      if (dirty) {\n        value = runner()\n        dirty = false\n      }\n      // When computed effects are accessed in a parent effect, the parent\n      // should track all the dependencies the computed property has tracked.\n      // This should also apply for chained computed properties.\n      trackChildRun(runner)\n      return value\n    },\n    set value(newValue: T) {\n      setter(newValue)\n    }\n  }\n}\n\nfunction trackChildRun(childRunner: ReactiveEffect) {\n  if (effectStack.length === 0) {\n    return\n  }\n  const parentRunner = effectStack[effectStack.length - 1]\n  for (let i = 0; i < childRunner.deps.length; i++) {\n    const dep = childRunner.deps[i]\n    if (!dep.has(parentRunner)) {\n      dep.add(parentRunner)\n      parentRunner.deps.push(dep)\n    }\n  }\n}\n","import { VNode } from './vnode'\nimport { Data, ComponentInternalInstance, Component } from './component'\nimport { isString, isFunction } from '@vue/shared'\nimport { toRaw } from '@vue/reactivity'\n\ntype ComponentVNode = VNode & {\n  type: Component\n}\n\nconst stack: VNode[] = []\n\ntype TraceEntry = {\n  vnode: ComponentVNode\n  recurseCount: number\n}\n\ntype ComponentTraceStack = TraceEntry[]\n\nexport function pushWarningContext(vnode: ComponentVNode) {\n  stack.push(vnode)\n}\n\nexport function popWarningContext() {\n  stack.pop()\n}\n\nexport function warn(msg: string, ...args: any[]) {\n  const instance = stack.length ? stack[stack.length - 1].component : null\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\n  const trace = getComponentTrace()\n\n  if (appWarnHandler) {\n    appWarnHandler(\n      msg + args.join(''),\n      instance && instance.renderProxy,\n      formatTrace(trace).join('')\n    )\n    return\n  }\n\n  console.warn(`[Vue warn]: ${msg}`, ...args)\n  // avoid spamming console during tests\n  if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') {\n    return\n  }\n  if (!trace.length) {\n    return\n  }\n  if (trace.length > 1 && console.groupCollapsed) {\n    console.groupCollapsed('at', ...formatTraceEntry(trace[0]))\n    const logs: string[] = []\n    trace.slice(1).forEach((entry, i) => {\n      if (i !== 0) logs.push('\\n')\n      logs.push(...formatTraceEntry(entry, i + 1))\n    })\n    console.log(...logs)\n    console.groupEnd()\n  } else {\n    console.log(...formatTrace(trace))\n  }\n}\n\nfunction getComponentTrace(): ComponentTraceStack {\n  let currentVNode: VNode | null = stack[stack.length - 1]\n  if (!currentVNode) {\n    return []\n  }\n\n  // we can't just use the stack because it will be incomplete during updates\n  // that did not start from the root. Re-construct the parent chain using\n  // instance parent pointers.\n  const normalizedStack: ComponentTraceStack = []\n\n  while (currentVNode) {\n    const last = normalizedStack[0]\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      })\n    }\n    const parentInstance: ComponentInternalInstance | null = currentVNode.component!\n      .parent\n    currentVNode = parentInstance && parentInstance.vnode\n  }\n\n  return normalizedStack\n}\n\nfunction formatTrace(trace: ComponentTraceStack): string[] {\n  const logs: string[] = []\n  trace.forEach((entry, i) => {\n    const formatted = formatTraceEntry(entry, i)\n    if (i === 0) {\n      logs.push('at', ...formatted)\n    } else {\n      logs.push('\\n', ...formatted)\n    }\n  })\n  return logs\n}\n\nfunction formatTraceEntry(\n  { vnode, recurseCount }: TraceEntry,\n  depth: number = 0\n): string[] {\n  const padding = depth === 0 ? '' : ' '.repeat(depth * 2 + 1)\n  const postfix =\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\n  const open = padding + `<${formatComponentName(vnode)}`\n  const close = `>` + postfix\n  const rootLabel = vnode.component!.parent == null ? `(Root)` : ``\n  return vnode.props\n    ? [open, ...formatProps(vnode.props), close, rootLabel]\n    : [open + close, rootLabel]\n}\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string): string =>\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\n\nfunction formatComponentName(vnode: ComponentVNode, file?: string): string {\n  const Component = vnode.type\n  let name = isFunction(Component) ? Component.displayName : Component.name\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/)\n    if (match) {\n      name = match[1]\n    }\n  }\n  return name ? classify(name) : 'AnonymousComponent'\n}\n\nfunction formatProps(props: Data): string[] {\n  const res: string[] = []\n  for (const key in props) {\n    const value = props[key]\n    if (isString(value)) {\n      res.push(`${key}=${JSON.stringify(value)}`)\n    } else {\n      res.push(`${key}=`, String(toRaw(value)))\n    }\n  }\n  return res\n}\n","import { VNode } from './vnode'\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\nimport { warn, pushWarningContext, popWarningContext } from './warning'\nimport { isPromise, isFunction } from '@vue/shared'\n\n// contexts where user provided function may be executed, in addition to\n// lifecycle hooks.\nexport const enum ErrorCodes {\n  SETUP_FUNCTION,\n  RENDER_FUNCTION,\n  WATCH_GETTER,\n  WATCH_CALLBACK,\n  WATCH_CLEANUP,\n  NATIVE_EVENT_HANDLER,\n  COMPONENT_EVENT_HANDLER,\n  DIRECTIVE_HOOK,\n  APP_ERROR_HANDLER,\n  APP_WARN_HANDLER,\n  SCHEDULER\n}\n\nexport const ErrorTypeStrings: Record<number | string, string> = {\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\n  [LifecycleHooks.CREATED]: 'created hook',\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\n  [LifecycleHooks.UPDATED]: 'updated',\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\n  [ErrorCodes.SCHEDULER]:\n    'scheduler flush. This is likely a Vue internals bug. ' +\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue'\n}\n\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\n\nexport function callWithErrorHandling(\n  fn: Function,\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes,\n  args?: any[]\n) {\n  let res: any\n  try {\n    res = args ? fn(...args) : fn()\n  } catch (err) {\n    handleError(err, instance, type)\n  }\n  return res\n}\n\nexport function callWithAsyncErrorHandling(\n  fn: Function | Function[],\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes,\n  args?: any[]\n) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args)\n    if (res != null && !res._isVue && isPromise(res)) {\n      res.catch((err: Error) => {\n        handleError(err, instance, type)\n      })\n    }\n    return res\n  }\n\n  for (let i = 0; i < fn.length; i++) {\n    callWithAsyncErrorHandling(fn[i], instance, type, args)\n  }\n}\n\nexport function handleError(\n  err: Error,\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes\n) {\n  const contextVNode = instance ? instance.vnode : null\n  if (instance) {\n    let cur = instance.parent\n    // the exposed instance is the render proxy to keep it consistent with 2.x\n    const exposedInstance = instance.renderProxy\n    // in production the hook receives only the error code\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\n    while (cur) {\n      const errorCapturedHooks = cur.ec\n      if (errorCapturedHooks !== null) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\n            return\n          }\n        }\n      }\n      cur = cur.parent\n    }\n    // app-level handling\n    const appErrorHandler = instance.appContext.config.errorHandler\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        ErrorCodes.APP_ERROR_HANDLER,\n        [err, exposedInstance, errorInfo]\n      )\n      return\n    }\n  }\n  logError(err, type, contextVNode)\n}\n\nfunction logError(err: Error, type: ErrorTypes, contextVNode: VNode | null) {\n  // default behavior is crash in prod & test, recover in dev.\n  if (\n    __DEV__ &&\n    !(typeof process !== 'undefined' && process.env.NODE_ENV === 'test')\n  ) {\n    const info = ErrorTypeStrings[type]\n    if (contextVNode) {\n      pushWarningContext(contextVNode)\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\n    console.error(err)\n    if (contextVNode) {\n      popWarningContext()\n    }\n  } else {\n    throw err\n  }\n}\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\nimport { isArray } from '@vue/shared'\n\nconst queue: Function[] = []\nconst postFlushCbs: Function[] = []\nconst p = Promise.resolve()\n\nlet isFlushing = false\n\nexport function nextTick(fn?: () => void): Promise<void> {\n  return fn ? p.then(fn) : p\n}\n\nexport function queueJob(job: () => void) {\n  if (!queue.includes(job)) {\n    queue.push(job)\n    if (!isFlushing) {\n      nextTick(flushJobs)\n    }\n  }\n}\n\nexport function queuePostFlushCb(cb: Function | Function[]) {\n  if (!isArray(cb)) {\n    postFlushCbs.push(cb)\n  } else {\n    postFlushCbs.push(...cb)\n  }\n\n  if (!isFlushing) {\n    nextTick(flushJobs)\n  }\n}\n\nconst dedupe = (cbs: Function[]): Function[] => [...new Set(cbs)]\n\nexport function flushPostFlushCbs() {\n  if (postFlushCbs.length) {\n    const cbs = dedupe(postFlushCbs)\n    postFlushCbs.length = 0\n    for (let i = 0; i < cbs.length; i++) {\n      cbs[i]()\n    }\n  }\n}\n\nconst RECURSION_LIMIT = 100\ntype JobCountMap = Map<Function, number>\n\nfunction flushJobs(seenJobs?: JobCountMap) {\n  isFlushing = true\n  let job\n  if (__DEV__) {\n    seenJobs = seenJobs || new Map()\n  }\n  while ((job = queue.shift())) {\n    if (__DEV__) {\n      const seen = seenJobs!\n      if (!seen.has(job)) {\n        seen.set(job, 1)\n      } else {\n        const count = seen.get(job)!\n        if (count > RECURSION_LIMIT) {\n          throw new Error(\n            'Maximum recursive updates exceeded. ' +\n              \"You may have code that is mutating state in your component's \" +\n              'render function or updated hook.'\n          )\n        } else {\n          seen.set(job, count + 1)\n        }\n      }\n    }\n    callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\n  }\n  flushPostFlushCbs()\n  isFlushing = false\n  // some postFlushCb queued jobs!\n  // keep flushing until it drains.\n  if (queue.length) {\n    flushJobs(seenJobs)\n  }\n}\n","import {\n  isArray,\n  isFunction,\n  isString,\n  isObject,\n  EMPTY_ARR,\n  extend\n} from '@vue/shared'\nimport {\n  ComponentInternalInstance,\n  Data,\n  SetupProxySymbol,\n  Component\n} from './component'\nimport { RawSlots } from './componentSlots'\nimport { ShapeFlags } from './shapeFlags'\nimport { isReactive } from '@vue/reactivity'\nimport { AppContext } from './apiApp'\nimport { SuspenseBoundary } from './suspense'\n\nexport const Fragment = __DEV__ ? Symbol('Fragment') : Symbol()\nexport const Text = __DEV__ ? Symbol('Text') : Symbol()\nexport const Comment = __DEV__ ? Symbol('Comment') : Symbol()\nexport const Portal = __DEV__ ? Symbol('Portal') : Symbol()\nexport const Suspense = __DEV__ ? Symbol('Suspense') : Symbol()\n\nexport type VNodeTypes =\n  | string\n  | Component\n  | typeof Fragment\n  | typeof Portal\n  | typeof Text\n  | typeof Comment\n  | typeof Suspense\n\ntype VNodeChildAtom<HostNode, HostElement> =\n  | VNode<HostNode, HostElement>\n  | string\n  | number\n  | boolean\n  | null\n  | void\n\nexport interface VNodeChildren<HostNode = any, HostElement = any>\n  extends Array<\n      | VNodeChildren<HostNode, HostElement>\n      | VNodeChildAtom<HostNode, HostElement>\n    > {}\n\nexport type VNodeChild<HostNode = any, HostElement = any> =\n  | VNodeChildAtom<HostNode, HostElement>\n  | VNodeChildren<HostNode, HostElement>\n\nexport type NormalizedChildren<HostNode = any, HostElement = any> =\n  | string\n  | VNodeChildren<HostNode, HostElement>\n  | RawSlots\n  | null\n\nexport interface VNode<HostNode = any, HostElement = any> {\n  _isVNode: true\n  type: VNodeTypes\n  props: Record<any, any> | null\n  key: string | number | null\n  ref: string | Function | null\n  children: NormalizedChildren<HostNode, HostElement>\n  component: ComponentInternalInstance | null\n  suspense: SuspenseBoundary<HostNode, HostElement> | null\n\n  // DOM\n  el: HostNode | null\n  anchor: HostNode | null // fragment anchor\n  target: HostElement | null // portal target\n\n  // optimization only\n  shapeFlag: number\n  patchFlag: number\n  dynamicProps: string[] | null\n  dynamicChildren: VNode[] | null\n\n  // application root node only\n  appContext: AppContext | null\n}\n\n// Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\nconst blockStack: (VNode[] | null)[] = []\nlet currentBlock: VNode[] | null = null\n\n// Open a block.\n// This must be called before `createBlock`. It cannot be part of `createBlock`\n// because the children of the block are evaluated before `createBlock` itself\n// is called. The generated code typically looks like this:\n//\n//   function render() {\n//     return (openBlock(),createBlock('div', null, [...]))\n//   }\n//\n// disableTracking is true when creating a fragment block, since a fragment\n// always diffs its children.\nexport function openBlock(disableTracking?: boolean) {\n  blockStack.push((currentBlock = disableTracking ? null : []))\n}\n\nlet shouldTrack = true\n\n// Create a block root vnode. Takes the same exact arguments as `createVNode`.\n// A block root keeps track of dynamic nodes within the block in the\n// `dynamicChildren` array.\nexport function createBlock(\n  type: VNodeTypes,\n  props?: { [key: string]: any } | null,\n  children?: any,\n  patchFlag?: number,\n  dynamicProps?: string[]\n): VNode {\n  // avoid a block with patchFlag tracking itself\n  shouldTrack = false\n  const vnode = createVNode(type, props, children, patchFlag, dynamicProps)\n  shouldTrack = true\n  // save current block children on the block vnode\n  vnode.dynamicChildren = currentBlock || EMPTY_ARR\n  // close block\n  blockStack.pop()\n  currentBlock = blockStack[blockStack.length - 1] || null\n  // a block is always going to be patched, so track it as a child of its\n  // parent block\n  if (currentBlock !== null) {\n    currentBlock.push(vnode)\n  }\n  return vnode\n}\n\nexport function isVNode(value: any): value is VNode {\n  return value ? value._isVNode === true : false\n}\n\nexport function createVNode(\n  type: VNodeTypes,\n  props: { [key: string]: any } | null = null,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null\n): VNode {\n  // class & style normalization.\n  if (props !== null) {\n    // for reactive or proxy objects, we need to clone it to enable mutation.\n    if (isReactive(props) || SetupProxySymbol in props) {\n      props = extend({}, props)\n    }\n    let { class: klass, style } = props\n    if (klass != null && !isString(klass)) {\n      props.class = normalizeClass(klass)\n    }\n    if (style != null) {\n      // reactive state objects need to be cloned since they are likely to be\n      // mutated\n      if (isReactive(style) && !isArray(style)) {\n        style = extend({}, style)\n      }\n      props.style = normalizeStyle(style)\n    }\n  }\n\n  // encode the vnode type information into a bitmap\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : isObject(type)\n      ? ShapeFlags.STATEFUL_COMPONENT\n      : isFunction(type)\n        ? ShapeFlags.FUNCTIONAL_COMPONENT\n        : 0\n\n  const vnode: VNode = {\n    _isVNode: true,\n    type,\n    props,\n    key: (props !== null && props.key) || null,\n    ref: (props !== null && props.ref) || null,\n    children: null,\n    component: null,\n    suspense: null,\n    el: null,\n    anchor: null,\n    target: null,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null\n  }\n\n  normalizeChildren(vnode, children)\n\n  // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  if (\n    shouldTrack &&\n    currentBlock !== null &&\n    (patchFlag > 0 ||\n      shapeFlag & ShapeFlags.STATEFUL_COMPONENT ||\n      shapeFlag & ShapeFlags.FUNCTIONAL_COMPONENT)\n  ) {\n    currentBlock.push(vnode)\n  }\n\n  return vnode\n}\n\nexport function cloneVNode(vnode: VNode): VNode {\n  return {\n    _isVNode: true,\n    type: vnode.type,\n    props: vnode.props,\n    key: vnode.key,\n    ref: vnode.ref,\n    children: vnode.children,\n    target: vnode.target,\n    shapeFlag: vnode.shapeFlag,\n    patchFlag: vnode.patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n\n    // these should be set to null since they should only be present on\n    // mounted VNodes. If they are somehow not null, this means we have\n    // encountered an already-mounted vnode being used again.\n    component: null,\n    suspense: null,\n    el: null,\n    anchor: null\n  }\n}\n\nexport function normalizeVNode(child: VNodeChild): VNode {\n  if (child == null) {\n    // empty placeholder\n    return createVNode(Comment)\n  } else if (isArray(child)) {\n    // fragment\n    return createVNode(Fragment, null, child)\n  } else if (typeof child === 'object') {\n    // already vnode, this should be the most common since compiled templates\n    // always produce all-vnode children arrays\n    return child.el === null ? child : cloneVNode(child)\n  } else {\n    // primitive types\n    return createVNode(Text, null, child + '')\n  }\n}\n\nexport function normalizeChildren(vnode: VNode, children: unknown) {\n  let type = 0\n  if (children == null) {\n    children = null\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN\n  } else if (typeof children === 'object') {\n    type = ShapeFlags.SLOTS_CHILDREN\n  } else if (isFunction(children)) {\n    children = { default: children }\n    type = ShapeFlags.SLOTS_CHILDREN\n  } else {\n    children = isString(children) ? children : children + ''\n    type = ShapeFlags.TEXT_CHILDREN\n  }\n  vnode.children = children as NormalizedChildren\n  vnode.shapeFlag |= type\n}\n\nfunction normalizeStyle(\n  value: unknown\n): Record<string, string | number> | void {\n  if (isArray(value)) {\n    const res: Record<string, string | number> = {}\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeStyle(value[i])\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key]\n        }\n      }\n    }\n    return res\n  } else if (isObject(value)) {\n    return value\n  }\n}\n\nexport function normalizeClass(value: unknown): string {\n  let res = ''\n  if (isString(value)) {\n    res = value\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      res += normalizeClass(value[i]) + ' '\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + ' '\n      }\n    }\n  }\n  return res.trim()\n}\n\nconst handlersRE = /^on|^vnode/\n\nexport function mergeProps(...args: Data[]) {\n  const ret: Data = {}\n  extend(ret, args[0])\n  for (let i = 1; i < args.length; i++) {\n    const toMerge = args[i]\n    for (const key in toMerge) {\n      if (key === 'class') {\n        ret.class = normalizeClass([ret.class, toMerge.class])\n      } else if (key === 'style') {\n        ret.style = normalizeStyle([ret.style, toMerge.style])\n      } else if (handlersRE.test(key)) {\n        // on*, vnode*\n        const existing = ret[key]\n        ret[key] = existing\n          ? [].concat(existing as any, toMerge[key] as any)\n          : toMerge[key]\n      } else {\n        ret[key] = toMerge[key]\n      }\n    }\n  }\n  return ret\n}\n","import {\n  ComponentInternalInstance,\n  LifecycleHooks,\n  currentInstance,\n  setCurrentInstance\n} from './component'\nimport { ComponentPublicInstance } from './componentProxy'\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\nimport { warn } from './warning'\nimport { capitalize } from '@vue/shared'\nimport { pauseTracking, resumeTracking, DebuggerEvent } from '@vue/reactivity'\n\nfunction injectHook(\n  type: LifecycleHooks,\n  hook: Function,\n  target: ComponentInternalInstance | null\n) {\n  if (target) {\n    ;(target[type] || (target[type] = [])).push((...args: any[]) => {\n      if (target.isUnmounted) {\n        return\n      }\n      // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n      pauseTracking()\n      // Set currentInstance during hook invocation.\n      // This assumes the hook does not synchronously trigger other hooks, which\n      // can only be false when the user does something really funky.\n      setCurrentInstance(target)\n      const res = callWithAsyncErrorHandling(hook, target, type, args)\n      setCurrentInstance(null)\n      resumeTracking()\n      return res\n    })\n  } else if (__DEV__) {\n    const apiName = `on${capitalize(\n      ErrorTypeStrings[type].replace(/ hook$/, '')\n    )}`\n    warn(\n      `${apiName} is called when there is no active component instance to be ` +\n        `associated with. ` +\n        `Lifecycle injection APIs can only be used during execution of setup().` +\n        (__FEATURE_SUSPENSE__\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\n            `hooks before the first await statement.`\n          : ``)\n    )\n  }\n}\n\nconst createHook = <T extends Function = () => any>(\n  lifecycle: LifecycleHooks\n) => (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\n  injectHook(lifecycle, hook, target)\n\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\n\nexport type DebuggerHook = (e: DebuggerEvent) => void\nexport const onRenderTriggered = createHook<DebuggerHook>(\n  LifecycleHooks.RENDER_TRIGGERED\n)\nexport const onRenderTracked = createHook<DebuggerHook>(\n  LifecycleHooks.RENDER_TRACKED\n)\n\nexport type ErrorCapturedHook = (\n  err: Error,\n  instance: ComponentPublicInstance | null,\n  info: string\n) => boolean | void\nexport const onErrorCaptured = createHook<ErrorCapturedHook>(\n  LifecycleHooks.ERROR_CAPTURED\n)\n","import {\n  ComponentInternalInstance,\n  FunctionalComponent,\n  Data\n} from './component'\nimport { VNode, normalizeVNode, createVNode, Comment } from './vnode'\nimport { ShapeFlags } from './shapeFlags'\nimport { handleError, ErrorCodes } from './errorHandling'\nimport { PatchFlags } from '@vue/shared'\n\n// mark the current rendering instance for asset resolution (e.g.\n// resolveComponent, resolveDirective) during render\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\n\nexport function renderComponentRoot(\n  instance: ComponentInternalInstance\n): VNode {\n  const {\n    type: Component,\n    vnode,\n    renderProxy,\n    props,\n    slots,\n    attrs,\n    emit\n  } = instance\n\n  let result\n  currentRenderingInstance = instance\n  try {\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n      result = normalizeVNode(instance.render!.call(renderProxy))\n    } else {\n      // functional\n      const render = Component as FunctionalComponent\n      result = normalizeVNode(\n        render.length > 1\n          ? render(props, {\n              attrs,\n              slots,\n              emit\n            })\n          : render(props, null as any /* we know it doesn't it */)\n      )\n    }\n  } catch (err) {\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\n    result = createVNode(Comment)\n  }\n  currentRenderingInstance = null\n  return result\n}\n\nexport function shouldUpdateComponent(\n  prevVNode: VNode,\n  nextVNode: VNode,\n  optimized?: boolean\n): boolean {\n  const { props: prevProps, children: prevChildren } = prevVNode\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\n  if (patchFlag > 0) {\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\n      // slot content that references values that might have changed,\n      // e.g. in a v-for\n      return true\n    }\n    if (patchFlag & PatchFlags.FULL_PROPS) {\n      // presence of this flag indicates props are always non-null\n      return hasPropsChanged(prevProps!, nextProps!)\n    } else if (patchFlag & PatchFlags.PROPS) {\n      const dynamicProps = nextVNode.dynamicProps!\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i]\n        if (nextProps![key] !== prevProps![key]) {\n          return true\n        }\n      }\n    }\n  } else if (!optimized) {\n    // this path is only taken by manually written render functions\n    // so presence of any children leads to a forced update\n    if (prevChildren != null || nextChildren != null) {\n      return true\n    }\n    if (prevProps === nextProps) {\n      return false\n    }\n    if (prevProps === null) {\n      return nextProps !== null\n    }\n    if (nextProps === null) {\n      return true\n    }\n    return hasPropsChanged(prevProps, nextProps)\n  }\n  return false\n}\n\nfunction hasPropsChanged(prevProps: Data, nextProps: Data): boolean {\n  const nextKeys = Object.keys(nextProps)\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i]\n    if (nextProps[key] !== prevProps[key]) {\n      return true\n    }\n  }\n  return false\n}\n","import { readonly, toRaw, lock, unlock } from '@vue/reactivity'\nimport {\n  EMPTY_OBJ,\n  camelize,\n  hyphenate,\n  capitalize,\n  isString,\n  isFunction,\n  isArray,\n  isObject,\n  isReservedProp,\n  hasOwn,\n  toTypeString,\n  PatchFlags\n} from '@vue/shared'\nimport { warn } from './warning'\nimport { Data, ComponentInternalInstance } from './component'\n\nexport type ComponentPropsOptions<P = Data> =\n  | ComponentObjectPropsOptions<P>\n  | string[]\n\nexport type ComponentObjectPropsOptions<P = Data> = {\n  [K in keyof P]: Prop<P[K]> | null\n}\n\nexport type Prop<T> = PropOptions<T> | PropType<T>\n\ninterface PropOptions<T = any> {\n  type?: PropType<T> | true | null\n  required?: boolean\n  default?: T | null | undefined | (() => T | null | undefined)\n  validator?(value: any): boolean\n}\n\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\n\ntype PropConstructor<T> = { new (...args: any[]): T & object } | { (): T }\n\ntype RequiredKeys<T, MakeDefaultRequired> = {\n  [K in keyof T]: T[K] extends\n    | { required: true }\n    | (MakeDefaultRequired extends true ? { default: any } : never)\n    ? K\n    : never\n}[keyof T]\n\ntype OptionalKeys<T, MakeDefaultRequired> = Exclude<\n  keyof T,\n  RequiredKeys<T, MakeDefaultRequired>\n>\n\ntype InferPropType<T> = T extends null\n  ? any // null & true would fail to infer\n  : T extends { type: null | true }\n    ? any // somehow `ObjectConstructor` when inferred from { (): T } becomes `any`\n    : T extends ObjectConstructor | { type: ObjectConstructor }\n      ? { [key: string]: any }\n      : T extends Prop<infer V> ? V : T\n\nexport type ExtractPropTypes<\n  O,\n  MakeDefaultRequired extends boolean = true\n> = O extends object\n  ? {\n      readonly [K in RequiredKeys<O, MakeDefaultRequired>]: InferPropType<O[K]>\n    } &\n      {\n        readonly [K in OptionalKeys<O, MakeDefaultRequired>]?: InferPropType<\n          O[K]\n        >\n      }\n  : { [K in string]: any }\n\nconst enum BooleanFlags {\n  shouldCast = '1',\n  shouldCastTrue = '2'\n}\n\ntype NormalizedProp =\n  | null\n  | (PropOptions & {\n      [BooleanFlags.shouldCast]?: boolean\n      [BooleanFlags.shouldCastTrue]?: boolean\n    })\n\ntype NormalizedPropsOptions = Record<string, NormalizedProp>\n\n// resolve raw VNode data.\n// - filter out reserved keys (key, ref, slots)\n// - extract class and style into $attrs (to be merged onto child\n//   component root)\n// - for the rest:\n//   - if has declared props: put declared ones in `props`, the rest in `attrs`\n//   - else: everything goes in `props`.\n\nexport function resolveProps(\n  instance: ComponentInternalInstance,\n  rawProps: any,\n  _options: ComponentPropsOptions | void\n) {\n  const hasDeclaredProps = _options != null\n  const options = normalizePropsOptions(_options)!\n  if (!rawProps && !hasDeclaredProps) {\n    return\n  }\n\n  const props: any = {}\n  let attrs: any = void 0\n\n  // update the instance propsProxy (passed to setup()) to trigger potential\n  // changes\n  const propsProxy = instance.propsProxy\n  const setProp = propsProxy\n    ? (key: string, val: any) => {\n        props[key] = val\n        propsProxy[key] = val\n      }\n    : (key: string, val: any) => {\n        props[key] = val\n      }\n\n  // allow mutation of propsProxy (which is readonly by default)\n  unlock()\n\n  if (rawProps != null) {\n    for (const key in rawProps) {\n      // key, ref are reserved\n      if (isReservedProp(key)) continue\n      // any non-declared data are put into a separate `attrs` object\n      // for spreading\n      if (hasDeclaredProps && !hasOwn(options, key)) {\n        ;(attrs || (attrs = {}))[key] = rawProps[key]\n      } else {\n        setProp(key, rawProps[key])\n      }\n    }\n  }\n  // set default values, cast booleans & run validators\n  if (hasDeclaredProps) {\n    for (const key in options) {\n      let opt = options[key]\n      if (opt == null) continue\n      const isAbsent = !hasOwn(props, key)\n      const hasDefault = hasOwn(opt, 'default')\n      const currentValue = props[key]\n      // default values\n      if (hasDefault && currentValue === undefined) {\n        const defaultValue = opt.default\n        setProp(key, isFunction(defaultValue) ? defaultValue() : defaultValue)\n      }\n      // boolean casting\n      if (opt[BooleanFlags.shouldCast]) {\n        if (isAbsent && !hasDefault) {\n          setProp(key, false)\n        } else if (\n          opt[BooleanFlags.shouldCastTrue] &&\n          (currentValue === '' || currentValue === hyphenate(key))\n        ) {\n          setProp(key, true)\n        }\n      }\n      // runtime validation\n      if (__DEV__ && rawProps) {\n        validateProp(key, toRaw(rawProps[key]), opt, isAbsent)\n      }\n    }\n  } else {\n    // if component has no declared props, $attrs === $props\n    attrs = props\n  }\n\n  // in case of dynamic props, check if we need to delete keys from\n  // the props proxy\n  const { patchFlag } = instance.vnode\n  if (\n    propsProxy !== null &&\n    (patchFlag === 0 || patchFlag & PatchFlags.FULL_PROPS)\n  ) {\n    const rawInitialProps = toRaw(propsProxy)\n    for (const key in rawInitialProps) {\n      if (!hasOwn(props, key)) {\n        delete propsProxy[key]\n      }\n    }\n  }\n\n  // lock readonly\n  lock()\n\n  instance.props = __DEV__ ? readonly(props) : props\n  instance.attrs = options\n    ? __DEV__ && attrs != null\n      ? readonly(attrs)\n      : attrs\n    : instance.props\n}\n\nconst normalizationMap = new WeakMap()\n\nfunction normalizePropsOptions(\n  raw: ComponentPropsOptions | void\n): NormalizedPropsOptions | null {\n  if (!raw) {\n    return null\n  }\n  if (normalizationMap.has(raw)) {\n    return normalizationMap.get(raw)\n  }\n  const normalized: NormalizedPropsOptions = {}\n  normalizationMap.set(raw, normalized)\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (__DEV__ && !isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i])\n      }\n      const normalizedKey = camelize(raw[i])\n      if (normalizedKey[0] !== '$') {\n        normalized[normalizedKey] = EMPTY_OBJ\n      } else if (__DEV__) {\n        warn(`Invalid prop name: \"${normalizedKey}\" is a reserved property.`)\n      }\n    }\n  } else {\n    if (__DEV__ && !isObject(raw)) {\n      warn(`invalid props options`, raw)\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key)\n      if (normalizedKey[0] !== '$') {\n        const opt = raw[key]\n        const prop: NormalizedProp = (normalized[normalizedKey] =\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\n        if (prop != null) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\n          const stringIndex = getTypeIndex(String, prop.type)\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\n          prop[BooleanFlags.shouldCastTrue] = booleanIndex < stringIndex\n        }\n      } else if (__DEV__) {\n        warn(`Invalid prop name: \"${normalizedKey}\" is a reserved property.`)\n      }\n    }\n  }\n  return normalized\n}\n\n// use function string name to check type constructors\n// so that it works across vms / iframes.\nfunction getType(ctor: Prop<any>): string {\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\n  return match ? match[1] : ''\n}\n\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex(\n  type: Prop<any>,\n  expectedTypes: PropType<any> | void | null | true\n): number {\n  if (isArray(expectedTypes)) {\n    for (let i = 0, len = expectedTypes.length; i < len; i++) {\n      if (isSameType(expectedTypes[i], type)) {\n        return i\n      }\n    }\n  } else if (isObject(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  return -1\n}\n\ntype AssertionResult = {\n  valid: boolean\n  expectedType: string\n}\n\nfunction validateProp(\n  name: string,\n  value: any,\n  prop: PropOptions<any>,\n  isAbsent: boolean\n) {\n  const { type, required, validator } = prop\n  // required!\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"')\n    return\n  }\n  // missing but optional\n  if (value == null && !prop.required) {\n    return\n  }\n  // type check\n  if (type != null && type !== true) {\n    let isValid = false\n    const types = isArray(type) ? type : [type]\n    const expectedTypes = []\n    // value is valid as long as one of the specified types match\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i])\n      expectedTypes.push(expectedType || '')\n      isValid = valid\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\n      return\n    }\n  }\n  // custom validator\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\n  }\n}\n\nconst simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/\n\nfunction assertType(value: any, type: PropConstructor<any>): AssertionResult {\n  let valid\n  const expectedType = getType(type)\n  if (simpleCheckRE.test(expectedType)) {\n    const t = typeof value\n    valid = t === expectedType.toLowerCase()\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type\n    }\n  } else if (expectedType === 'Object') {\n    valid = toRawType(value) === 'Object'\n  } else if (expectedType === 'Array') {\n    valid = isArray(value)\n  } else {\n    valid = value instanceof type\n  }\n  return {\n    valid,\n    expectedType\n  }\n}\n\nfunction getInvalidTypeMessage(\n  name: string,\n  value: any,\n  expectedTypes: string[]\n): string {\n  let message =\n    `Invalid prop: type check failed for prop \"${name}\".` +\n    ` Expected ${expectedTypes.map(capitalize).join(', ')}`\n  const expectedType = expectedTypes[0]\n  const receivedType = toRawType(value)\n  const expectedValue = styleValue(value, expectedType)\n  const receivedValue = styleValue(value, receivedType)\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += ` with value ${expectedValue}`\n  }\n  message += `, got ${receivedType} `\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`\n  }\n  return message\n}\n\nfunction styleValue(value: any, type: string): string {\n  if (type === 'String') {\n    return `\"${value}\"`\n  } else if (type === 'Number') {\n    return `${Number(value)}`\n  } else {\n    return `${value}`\n  }\n}\n\nfunction toRawType(value: any): string {\n  return toTypeString(value).slice(8, -1)\n}\n\nfunction isExplicable(type: string): boolean {\n  const explicitTypes = ['string', 'number', 'boolean']\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\n}\n\nfunction isBoolean(...args: string[]): boolean {\n  return args.some(elem => elem.toLowerCase() === 'boolean')\n}\n","import { ComponentInternalInstance, currentInstance } from './component'\nimport {\n  VNode,\n  NormalizedChildren,\n  normalizeVNode,\n  VNodeChild,\n  VNodeChildren\n} from './vnode'\nimport { isArray, isFunction } from '@vue/shared'\nimport { ShapeFlags } from './shapeFlags'\nimport { warn } from './warning'\n\nexport type Slot = (...args: any[]) => VNodeChildren\n\nexport type InternalSlots = {\n  [name: string]: Slot\n}\n\nexport type Slots = Readonly<InternalSlots>\n\nexport type RawSlots = {\n  [name: string]: unknown\n  _compiled?: boolean\n}\n\nconst normalizeSlotValue = (value: unknown): VNode[] =>\n  isArray(value)\n    ? value.map(normalizeVNode)\n    : [normalizeVNode(value as VNodeChild)]\n\nconst normalizeSlot = (key: string, rawSlot: Function): Slot => (\n  props: any\n) => {\n  if (__DEV__ && currentInstance != null) {\n    warn(\n      `Slot \"${key}\" invoked outside of the render function: ` +\n        `this will not track dependencies used in the slot. ` +\n        `Invoke the slot function inside the render function instead.`\n    )\n  }\n  return normalizeSlotValue(rawSlot(props))\n}\n\nexport function resolveSlots(\n  instance: ComponentInternalInstance,\n  children: NormalizedChildren\n) {\n  let slots: InternalSlots | void\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n    const rawSlots = children as RawSlots\n    if (rawSlots._compiled) {\n      // pre-normalized slots object generated by compiler\n      slots = children as Slots\n    } else {\n      slots = {}\n      for (const key in rawSlots) {\n        const value = rawSlots[key]\n        if (isFunction(value)) {\n          slots[key] = normalizeSlot(key, value)\n        } else if (value != null) {\n          if (__DEV__) {\n            warn(\n              `Non-function value encountered for slot \"${key}\". ` +\n                `Prefer function slots for better performance.`\n            )\n          }\n          const normalized = normalizeSlotValue(value)\n          slots[key] = () => normalized\n        }\n      }\n    }\n  } else if (children !== null) {\n    // non slot object children (direct value) passed to a component\n    if (__DEV__) {\n      warn(\n        `Non-function value encountered for default slot. ` +\n          `Prefer function slots for better performance.`\n      )\n    }\n    const normalized = normalizeSlotValue(children)\n    slots = { default: () => normalized }\n  }\n  if (slots !== void 0) {\n    instance.slots = slots\n  }\n}\n","/**\nRuntime helper for applying directives to a vnode. Example usage:\n\nconst comp = resolveComponent('comp')\nconst foo = resolveDirective('foo')\nconst bar = resolveDirective('bar')\n\nreturn withDirectives(h(comp), [\n  [foo, this.x],\n  [bar, this.y]\n])\n*/\n\nimport { VNode } from './vnode'\nimport { isFunction, EMPTY_OBJ, makeMap } from '@vue/shared'\nimport { warn } from './warning'\nimport { ComponentInternalInstance } from './component'\nimport { currentRenderingInstance } from './componentRenderUtils'\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\nimport { ComponentPublicInstance } from './componentProxy'\n\nexport interface DirectiveBinding {\n  instance: ComponentPublicInstance | null\n  value: any\n  oldValue: any\n  arg?: string\n  modifiers: DirectiveModifiers\n}\n\nexport type DirectiveHook<T = any> = (\n  el: T,\n  binding: DirectiveBinding,\n  vnode: VNode<any, T>,\n  prevVNode: VNode<any, T> | null\n) => void\n\nexport interface ObjectDirective<T = any> {\n  beforeMount?: DirectiveHook<T>\n  mounted?: DirectiveHook<T>\n  beforeUpdate?: DirectiveHook<T>\n  updated?: DirectiveHook<T>\n  beforeUnmount?: DirectiveHook<T>\n  unmounted?: DirectiveHook<T>\n}\n\nexport type FunctionDirective<T = any> = DirectiveHook<T>\n\nexport type Directive<T = any> = ObjectDirective<T> | FunctionDirective<T>\n\ntype DirectiveModifiers = Record<string, boolean>\n\nconst valueCache = new WeakMap<Directive, WeakMap<any, any>>()\n\nconst isBuiltInDirective = /*#__PURE__*/ makeMap(\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text'\n)\n\nexport function validateDirectiveName(name: string) {\n  if (isBuiltInDirective(name)) {\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\n  }\n}\n\nfunction applyDirective(\n  props: Record<any, any>,\n  instance: ComponentInternalInstance,\n  directive: Directive,\n  value?: any,\n  arg?: string,\n  modifiers: DirectiveModifiers = EMPTY_OBJ\n) {\n  let valueCacheForDir = valueCache.get(directive)!\n  if (!valueCacheForDir) {\n    valueCacheForDir = new WeakMap<VNode, any>()\n    valueCache.set(directive, valueCacheForDir)\n  }\n\n  if (isFunction(directive)) {\n    directive = {\n      mounted: directive,\n      updated: directive\n    } as ObjectDirective\n  }\n\n  for (const key in directive) {\n    const hook = directive[key as keyof ObjectDirective]!\n    const hookKey = `onVnode` + key[0].toUpperCase() + key.slice(1)\n    const vnodeHook = (vnode: VNode, prevVNode: VNode | null) => {\n      let oldValue\n      if (prevVNode != null) {\n        oldValue = valueCacheForDir.get(prevVNode)\n        valueCacheForDir.delete(prevVNode)\n      }\n      valueCacheForDir.set(vnode, value)\n      hook(\n        vnode.el,\n        {\n          instance: instance.renderProxy,\n          value,\n          oldValue,\n          arg,\n          modifiers\n        },\n        vnode,\n        prevVNode\n      )\n    }\n    const existing = props[hookKey]\n    props[hookKey] = existing\n      ? [].concat(existing, vnodeHook as any)\n      : vnodeHook\n  }\n}\n\n// Directive, value, argument, modifiers\nexport type DirectiveArguments = Array<\n  | [Directive]\n  | [Directive, any]\n  | [Directive, any, string]\n  | [Directive, any, string, DirectiveModifiers]\n>\n\nexport function withDirectives(vnode: VNode, directives: DirectiveArguments) {\n  const instance = currentRenderingInstance\n  if (instance !== null) {\n    vnode.props = vnode.props || {}\n    for (let i = 0; i < directives.length; i++) {\n      const [dir, value, arg, modifiers] = directives[i]\n      applyDirective(vnode.props, instance, dir, value, arg, modifiers)\n    }\n  } else if (__DEV__) {\n    warn(`withDirectives can only be used inside render functions.`)\n  }\n  return vnode\n}\n\nexport function invokeDirectiveHook(\n  hook: Function | Function[],\n  instance: ComponentInternalInstance | null,\n  vnode: VNode,\n  prevVNode: VNode | null = null\n) {\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\n    vnode,\n    prevVNode\n  ])\n}\n","import { Component, Data, validateComponentName } from './component'\nimport { ComponentOptions } from './apiOptions'\nimport { ComponentPublicInstance } from './componentProxy'\nimport { Directive, validateDirectiveName } from './directives'\nimport { RootRenderFunction } from './createRenderer'\nimport { InjectionKey } from './apiInject'\nimport { isFunction, NO } from '@vue/shared'\nimport { warn } from './warning'\nimport { createVNode } from './vnode'\n\nexport interface App<HostElement = any> {\n  config: AppConfig\n  use(plugin: Plugin, options?: any): this\n  mixin(mixin: ComponentOptions): this\n  component(name: string): Component | undefined\n  component(name: string, component: Component): this\n  directive(name: string): Directive | undefined\n  directive(name: string, directive: Directive): this\n  mount(\n    rootComponent: Component,\n    rootContainer: HostElement,\n    rootProps?: Data\n  ): ComponentPublicInstance\n  provide<T>(key: InjectionKey<T> | string, value: T): void\n}\n\nexport interface AppConfig {\n  devtools: boolean\n  performance: boolean\n  readonly isNativeTag?: (tag: string) => boolean\n  isCustomElement?: (tag: string) => boolean\n  errorHandler?: (\n    err: Error,\n    instance: ComponentPublicInstance | null,\n    info: string\n  ) => void\n  warnHandler?: (\n    msg: string,\n    instance: ComponentPublicInstance | null,\n    trace: string\n  ) => void\n}\n\nexport interface AppContext {\n  config: AppConfig\n  mixins: ComponentOptions[]\n  components: Record<string, Component>\n  directives: Record<string, Directive>\n  provides: Record<string | symbol, any>\n}\n\ntype PluginInstallFunction = (app: App) => any\n\nexport type Plugin =\n  | PluginInstallFunction\n  | {\n      install: PluginInstallFunction\n    }\n\nexport function createAppContext(): AppContext {\n  return {\n    config: {\n      devtools: true,\n      performance: false,\n      isNativeTag: NO,\n      isCustomElement: NO,\n      errorHandler: undefined,\n      warnHandler: undefined\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: {}\n  }\n}\n\nexport function createAppAPI<HostNode, HostElement>(\n  render: RootRenderFunction<HostNode, HostElement>\n): () => App<HostElement> {\n  return function createApp(): App {\n    const context = createAppContext()\n\n    let isMounted = false\n\n    const app: App = {\n      get config() {\n        return context.config\n      },\n\n      set config(v) {\n        if (__DEV__) {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`\n          )\n        }\n      },\n\n      use(plugin: Plugin) {\n        if (isFunction(plugin)) {\n          plugin(app)\n        } else if (isFunction(plugin.install)) {\n          plugin.install(app)\n        } else if (__DEV__) {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" ` +\n              `function.`\n          )\n        }\n        return app\n      },\n\n      mixin(mixin: ComponentOptions) {\n        context.mixins.push(mixin)\n        return app\n      },\n\n      component(name: string, component?: Component): any {\n        if (__DEV__) {\n          validateComponentName(name, context.config)\n        }\n        if (!component) {\n          return context.components[name]\n        } else {\n          context.components[name] = component\n          return app\n        }\n      },\n\n      directive(name: string, directive?: Directive) {\n        if (__DEV__) {\n          validateDirectiveName(name)\n        }\n\n        if (!directive) {\n          return context.directives[name] as any\n        } else {\n          context.directives[name] = directive\n          return app\n        }\n      },\n\n      mount(\n        rootComponent: Component,\n        rootContainer: string | HostElement,\n        rootProps?: Data\n      ): any {\n        if (!isMounted) {\n          const vnode = createVNode(rootComponent, rootProps)\n          // store app context on the root VNode.\n          // this will be set on the root instance on initial mount.\n          vnode.appContext = context\n          render(vnode, rootContainer)\n          isMounted = true\n          return vnode.component!.renderProxy\n        } else if (__DEV__) {\n          warn(\n            `App has already been mounted. Create a new app instance instead.`\n          )\n        }\n      },\n\n      provide(key, value) {\n        if (__DEV__ && key in context.provides) {\n          warn(\n            `App already provides property with key \"${key}\". ` +\n              `It will be overwritten with the new value.`\n          )\n        }\n        // TypeScript doesn't allow symbols as index type\n        // https://github.com/Microsoft/TypeScript/issues/24587\n        context.provides[key as string] = value\n      }\n    }\n\n    return app\n  }\n}\n","import { VNode, normalizeVNode, VNodeChild } from './vnode'\nimport { ShapeFlags } from '.'\nimport { isFunction } from '@vue/shared'\nimport { ComponentInternalInstance } from './component'\nimport { Slots } from './componentSlots'\n\nexport const SuspenseSymbol = __DEV__ ? Symbol('Suspense key') : Symbol()\n\nexport interface SuspenseBoundary<\n  HostNode = any,\n  HostElement = any,\n  HostVNode = VNode<HostNode, HostElement>\n> {\n  vnode: HostVNode\n  parent: SuspenseBoundary<HostNode, HostElement> | null\n  parentComponent: ComponentInternalInstance | null\n  isSVG: boolean\n  optimized: boolean\n  container: HostElement\n  hiddenContainer: HostElement\n  anchor: HostNode | null\n  subTree: HostVNode\n  fallbackTree: HostVNode\n  deps: number\n  isResolved: boolean\n  isUnmounted: boolean\n  effects: Function[]\n}\n\nexport function createSuspenseBoundary<HostNode, HostElement>(\n  vnode: VNode<HostNode, HostElement>,\n  parent: SuspenseBoundary<HostNode, HostElement> | null,\n  parentComponent: ComponentInternalInstance | null,\n  container: HostElement,\n  hiddenContainer: HostElement,\n  anchor: HostNode | null,\n  isSVG: boolean,\n  optimized: boolean\n): SuspenseBoundary<HostNode, HostElement> {\n  return {\n    vnode,\n    parent,\n    parentComponent,\n    isSVG,\n    optimized,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    subTree: null as any, // will be set immediately after creation\n    fallbackTree: null as any, // will be set immediately after creation\n    isResolved: false,\n    isUnmounted: false,\n    effects: []\n  }\n}\n\nexport function normalizeSuspenseChildren(\n  vnode: VNode\n): {\n  content: VNode\n  fallback: VNode\n} {\n  const { shapeFlag, children } = vnode\n  if (shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n    const { default: d, fallback } = children as Slots\n    return {\n      content: normalizeVNode(isFunction(d) ? d() : d),\n      fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\n    }\n  } else {\n    return {\n      content: normalizeVNode(children as VNodeChild),\n      fallback: normalizeVNode(null)\n    }\n  }\n}\n","import {\n  Text,\n  Fragment,\n  Comment,\n  Portal,\n  normalizeVNode,\n  VNode,\n  VNodeChildren,\n  Suspense,\n  createVNode\n} from './vnode'\nimport {\n  ComponentInternalInstance,\n  createComponentInstance,\n  setupStatefulComponent,\n  handleSetupResult,\n  Component\n} from './component'\nimport {\n  renderComponentRoot,\n  shouldUpdateComponent\n} from './componentRenderUtils'\nimport {\n  isString,\n  EMPTY_OBJ,\n  EMPTY_ARR,\n  isReservedProp,\n  isFunction,\n  isArray,\n  PatchFlags\n} from '@vue/shared'\nimport { queueJob, queuePostFlushCb, flushPostFlushCbs } from './scheduler'\nimport {\n  effect,\n  stop,\n  ReactiveEffectOptions,\n  isRef,\n  Ref,\n  toRaw\n} from '@vue/reactivity'\nimport { resolveProps } from './componentProps'\nimport { resolveSlots } from './componentSlots'\nimport { ShapeFlags } from './shapeFlags'\nimport { pushWarningContext, popWarningContext, warn } from './warning'\nimport { invokeDirectiveHook } from './directives'\nimport { ComponentPublicInstance } from './componentProxy'\nimport { App, createAppAPI } from './apiApp'\nimport {\n  SuspenseBoundary,\n  createSuspenseBoundary,\n  normalizeSuspenseChildren\n} from './suspense'\nimport { handleError, ErrorCodes } from './errorHandling'\n\nconst prodEffectOptions = {\n  scheduler: queueJob\n}\n\nfunction createDevEffectOptions(\n  instance: ComponentInternalInstance\n): ReactiveEffectOptions {\n  return {\n    scheduler: queueJob,\n    onTrack: instance.rtc ? e => invokeHooks(instance.rtc!, e) : void 0,\n    onTrigger: instance.rtg ? e => invokeHooks(instance.rtg!, e) : void 0\n  }\n}\n\nfunction isSameType(n1: VNode, n2: VNode): boolean {\n  return n1.type === n2.type && n1.key === n2.key\n}\n\nfunction invokeHooks(hooks: Function[], arg?: any) {\n  for (let i = 0; i < hooks.length; i++) {\n    hooks[i](arg)\n  }\n}\n\nexport function queuePostRenderEffect(\n  fn: Function | Function[],\n  suspense: SuspenseBoundary<any, any> | null\n) {\n  if (suspense !== null && !suspense.isResolved) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn)\n    } else {\n      suspense.effects.push(fn)\n    }\n  } else {\n    queuePostFlushCb(fn)\n  }\n}\n\nexport interface RendererOptions<HostNode = any, HostElement = any> {\n  patchProp(\n    el: HostElement,\n    key: string,\n    value: any,\n    oldValue: any,\n    isSVG: boolean,\n    prevChildren?: VNode<HostNode, HostElement>[],\n    parentComponent?: ComponentInternalInstance | null,\n    parentSuspense?: SuspenseBoundary<HostNode, HostElement> | null,\n    unmountChildren?: (\n      children: VNode<HostNode, HostElement>[],\n      parentComponent: ComponentInternalInstance | null,\n      parentSuspense: SuspenseBoundary<HostNode, HostElement> | null\n    ) => void\n  ): void\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\n  remove(el: HostNode): void\n  createElement(type: string, isSVG?: boolean): HostElement\n  createText(text: string): HostNode\n  createComment(text: string): HostNode\n  setText(node: HostNode, text: string): void\n  setElementText(node: HostElement, text: string): void\n  parentNode(node: HostNode): HostElement | null\n  nextSibling(node: HostNode): HostNode | null\n  querySelector(selector: string): HostElement | null\n}\n\nexport type RootRenderFunction<HostNode, HostElement> = (\n  vnode: VNode<HostNode, HostElement> | null,\n  dom: HostElement | string\n) => void\n\n/**\n * The createRenderer function accepts two generic arguments:\n * HostNode and HostElement, corresponding to Node and Element types in the\n * host environment. For example, for runtime-dom, HostNode would be the DOM\n * `Node` interface and HostElement would be the DOM `Element` interface.\n *\n * Custom renderers can pass in the platform specific types like this:\n *\n * ``` js\n * const { render, createApp } = createRenderer<Node, Element>({\n *   patchProp,\n *   ...nodeOps\n * })\n * ```\n */\nexport function createRenderer<\n  HostNode extends object = any,\n  HostElement extends HostNode = any\n>(\n  options: RendererOptions<HostNode, HostElement>\n): {\n  render: RootRenderFunction<HostNode, HostElement>\n  createApp: () => App<HostElement>\n} {\n  type HostVNode = VNode<HostNode, HostElement>\n  type HostVNodeChildren = VNodeChildren<HostNode, HostElement>\n  type HostSuspenseBoundary = SuspenseBoundary<HostNode, HostElement>\n\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    querySelector: hostQuerySelector\n  } = options\n\n  function patch(\n    n1: HostVNode | null, // null means this is a mount\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null = null,\n    parentComponent: ComponentInternalInstance | null = null,\n    parentSuspense: HostSuspenseBoundary | null = null,\n    isSVG: boolean = false,\n    optimized: boolean = false\n  ) {\n    // patching & not same type, unmount old tree\n    if (n1 != null) {\n      if (!isSameType(n1, n2)) {\n        anchor = getNextHostNode(n1)\n        unmount(n1, parentComponent, parentSuspense, true)\n        n1 = null\n      } else if (n1.props && n1.props.$once) {\n        return\n      }\n    }\n\n    const { type, shapeFlag } = n2\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor)\n        break\n      case Comment:\n        processCommentNode(n1, n2, container, anchor)\n        break\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n        break\n      case Portal:\n        processPortal(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n        break\n      case Suspense:\n        if (__FEATURE_SUSPENSE__) {\n          processSuspense(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n        } else if (__DEV__) {\n          warn(`Suspense is not enabled in the version of Vue you are using.`)\n        }\n        break\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n        } else if (__DEV__) {\n          warn('Invalid HostVNode type:', n2.type, `(${typeof n2.type})`)\n        }\n    }\n  }\n\n  function processText(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null\n  ) {\n    if (n1 == null) {\n      hostInsert(\n        (n2.el = hostCreateText(n2.children as string)),\n        container,\n        anchor\n      )\n    } else {\n      const el = (n2.el = n1.el) as HostNode\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children as string)\n      }\n    }\n  }\n\n  function processCommentNode(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null\n  ) {\n    if (n1 == null) {\n      hostInsert(\n        (n2.el = hostCreateComment((n2.children as string) || '')),\n        container,\n        anchor\n      )\n    } else {\n      // there's no support for dynamic comments\n      n2.el = n1.el\n    }\n  }\n\n  function processElement(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized\n      )\n    } else {\n      patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized)\n    }\n    if (n2.ref !== null && parentComponent !== null) {\n      setRef(n2.ref, n1 && n1.ref, parentComponent, n2.el)\n    }\n  }\n\n  function mountElement(\n    vnode: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    const tag = vnode.type as string\n    isSVG = isSVG || tag === 'svg'\n    const el = (vnode.el = hostCreateElement(tag, isSVG))\n    const { props, shapeFlag } = vnode\n    if (props != null) {\n      for (const key in props) {\n        if (isReservedProp(key)) continue\n        hostPatchProp(el, key, props[key], null, isSVG)\n      }\n      if (props.onVnodeBeforeMount != null) {\n        invokeDirectiveHook(props.onVnodeBeforeMount, parentComponent, vnode)\n      }\n    }\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      hostSetElementText(el, vnode.children as string)\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      mountChildren(\n        vnode.children as HostVNodeChildren,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized || vnode.dynamicChildren !== null\n      )\n    }\n    hostInsert(el, container, anchor)\n    if (props != null && props.onVnodeMounted != null) {\n      queuePostRenderEffect(() => {\n        invokeDirectiveHook(props.onVnodeMounted, parentComponent, vnode)\n      }, parentSuspense)\n    }\n  }\n\n  function mountChildren(\n    children: HostVNodeChildren,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean,\n    start: number = 0\n  ) {\n    for (let i = start; i < children.length; i++) {\n      const child = optimized\n        ? (children[i] as HostVNode)\n        : (children[i] = normalizeVNode(children[i]))\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized\n      )\n    }\n  }\n\n  function patchElement(\n    n1: HostVNode,\n    n2: HostVNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    const el = (n2.el = n1.el) as HostElement\n    const { patchFlag, dynamicChildren } = n2\n    const oldProps = (n1 && n1.props) || EMPTY_OBJ\n    const newProps = n2.props || EMPTY_OBJ\n\n    if (newProps.onVnodeBeforeUpdate != null) {\n      invokeDirectiveHook(newProps.onVnodeBeforeUpdate, parentComponent, n2, n1)\n    }\n\n    if (patchFlag > 0) {\n      // the presence of a patchFlag means this element's render code was\n      // generated by the compiler and can take the fast path.\n      // in this path old node and new node are guaranteed to have the same shape\n      // (i.e. at the exact same position in the source template)\n\n      if (patchFlag & PatchFlags.FULL_PROPS) {\n        // element props contain dynamic keys, full diff needed\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        )\n      } else {\n        // class\n        // this flag is matched when the element has dynamic class bindings.\n        if (patchFlag & PatchFlags.CLASS) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, 'class', newProps.class, null, isSVG)\n          }\n        }\n\n        // style\n        // this flag is matched when the element has dynamic style bindings\n        if (patchFlag & PatchFlags.STYLE) {\n          hostPatchProp(el, 'style', newProps.style, oldProps.style, isSVG)\n        }\n\n        // props\n        // This flag is matched when the element has dynamic prop/attr bindings\n        // other than class and style. The keys of dynamic prop/attrs are saved for\n        // faster iteration.\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n        // bail out and go through a full diff because we need to unset the old key\n        if (patchFlag & PatchFlags.PROPS) {\n          // if the flag is present then dynamicProps must be non-null\n          const propsToUpdate = n2.dynamicProps!\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i]\n            const prev = oldProps[key]\n            const next = newProps[key]\n            if (prev !== next) {\n              hostPatchProp(\n                el,\n                key,\n                next,\n                prev,\n                isSVG,\n                n1.children as HostVNode[],\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              )\n            }\n          }\n        }\n      }\n\n      // text\n      // This flag is matched when the element has only dynamic text children.\n      // this flag is terminal (i.e. skips children diffing).\n      if (patchFlag & PatchFlags.TEXT) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children as string)\n        }\n        return // terminal\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      // unoptimized, full diff\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      )\n    }\n\n    if (dynamicChildren != null) {\n      patchBlockChildren(\n        n1.dynamicChildren!,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      )\n    } else if (!optimized) {\n      // full diff\n      patchChildren(n1, n2, el, null, parentComponent, parentSuspense, isSVG)\n    }\n\n    if (newProps.onVnodeUpdated != null) {\n      queuePostRenderEffect(() => {\n        invokeDirectiveHook(newProps.onVnodeUpdated, parentComponent, n2, n1)\n      }, parentSuspense)\n    }\n  }\n\n  // The fast path for blocks.\n  function patchBlockChildren(\n    oldChildren: HostVNode[],\n    newChildren: HostVNode[],\n    fallbackContainer: HostElement,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean\n  ) {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i]\n      patch(\n        oldVNode,\n        newChildren[i],\n        // in the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children. In other cases,\n        // the parent container is not actually used so we just pass the\n        // block element here to avoid a DOM parentNode call.\n        oldVNode.type === Fragment\n          ? hostParentNode(oldVNode.el!)!\n          : fallbackContainer,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        true\n      )\n    }\n  }\n\n  function patchProps(\n    el: HostElement,\n    vnode: HostVNode,\n    oldProps: any,\n    newProps: any,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean\n  ) {\n    if (oldProps !== newProps) {\n      for (const key in newProps) {\n        if (isReservedProp(key)) continue\n        const next = newProps[key]\n        const prev = oldProps[key]\n        if (next !== prev) {\n          hostPatchProp(\n            el,\n            key,\n            next,\n            prev,\n            isSVG,\n            vnode.children as HostVNode[],\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          )\n        }\n      }\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (isReservedProp(key)) continue\n          if (!(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              null,\n              null,\n              isSVG,\n              vnode.children as HostVNode[],\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            )\n          }\n        }\n      }\n    }\n  }\n\n  function processFragment(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateComment(''))!\n    const fragmentEndAnchor = (n2.anchor = n1\n      ? n1.anchor\n      : hostCreateComment(''))!\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor)\n      hostInsert(fragmentEndAnchor, container, anchor)\n      // a fragment can only have array children\n      // since they are either generated by the compiler, or implicitly created\n      // from arrays.\n      mountChildren(\n        n2.children as HostVNodeChildren,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized\n      )\n    } else {\n      patchChildren(\n        n1,\n        n2,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized\n      )\n    }\n  }\n\n  function processPortal(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    const targetSelector = n2.props && n2.props.target\n    const { patchFlag, shapeFlag, children } = n2\n    if (n1 == null) {\n      const target = (n2.target = isString(targetSelector)\n        ? hostQuerySelector(targetSelector)\n        : null)\n      if (target != null) {\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n          hostSetElementText(target, children as string)\n        } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          mountChildren(\n            children as HostVNodeChildren,\n            target,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n        }\n      } else if (__DEV__) {\n        warn('Invalid Portal target on mount:', target, `(${typeof target})`)\n      }\n    } else {\n      // update content\n      const target = (n2.target = n1.target)!\n      if (patchFlag === PatchFlags.TEXT) {\n        hostSetElementText(target, children as string)\n      } else if (n2.dynamicChildren) {\n        // fast path when the portal happens to be a block root\n        patchBlockChildren(\n          n1.dynamicChildren!,\n          n2.dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        )\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          target,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        )\n      }\n      // target changed\n      if (targetSelector !== (n1.props && n1.props.target)) {\n        const nextTarget = (n2.target = isString(targetSelector)\n          ? hostQuerySelector(targetSelector)\n          : null)\n        if (nextTarget != null) {\n          // move content\n          if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            hostSetElementText(target, '')\n            hostSetElementText(nextTarget, children as string)\n          } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n            for (let i = 0; i < (children as HostVNode[]).length; i++) {\n              move((children as HostVNode[])[i], nextTarget, null)\n            }\n          }\n        } else if (__DEV__) {\n          warn('Invalid Portal target on update:', target, `(${typeof target})`)\n        }\n      }\n    }\n    // insert an empty node as the placeholder for the portal\n    processCommentNode(n1, n2, container, anchor)\n  }\n\n  function processSuspense(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized\n      )\n    } else {\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        isSVG,\n        optimized\n      )\n    }\n  }\n\n  function mountSuspense(\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    const hiddenContainer = hostCreateElement('div')\n    const suspense = (n2.suspense = createSuspenseBoundary(\n      n2,\n      parentSuspense,\n      parentComponent,\n      container,\n      hiddenContainer,\n      anchor,\n      isSVG,\n      optimized\n    ))\n\n    const { content, fallback } = normalizeSuspenseChildren(n2)\n    suspense.subTree = content\n    suspense.fallbackTree = fallback\n\n    // start mounting the content subtree in an off-dom container\n    patch(\n      null,\n      content,\n      hiddenContainer,\n      null,\n      parentComponent,\n      suspense,\n      isSVG,\n      optimized\n    )\n    // now check if we have encountered any async deps\n    if (suspense.deps > 0) {\n      // mount the fallback tree\n      patch(\n        null,\n        fallback,\n        container,\n        anchor,\n        parentComponent,\n        null, // fallback tree will not have suspense context\n        isSVG,\n        optimized\n      )\n      n2.el = fallback.el\n    } else {\n      // Suspense has no async deps. Just resolve.\n      resolveSuspense(suspense)\n    }\n  }\n\n  function patchSuspense(\n    n1: HostVNode,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    const suspense = (n2.suspense = n1.suspense)!\n    suspense.vnode = n2\n    const { content, fallback } = normalizeSuspenseChildren(n2)\n    const oldSubTree = suspense.subTree\n    const oldFallbackTree = suspense.fallbackTree\n    if (!suspense.isResolved) {\n      patch(\n        oldSubTree,\n        content,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        optimized\n      )\n      if (suspense.deps > 0) {\n        // still pending. patch the fallback tree.\n        patch(\n          oldFallbackTree,\n          fallback,\n          container,\n          anchor,\n          parentComponent,\n          null, // fallback tree will not have suspense context\n          isSVG,\n          optimized\n        )\n        n2.el = fallback.el\n      }\n      // If deps somehow becomes 0 after the patch it means the patch caused an\n      // async dep component to unmount and removed its dep. It will cause the\n      // suspense to resolve and we don't need to do anything here.\n    } else {\n      // just normal patch inner content as a fragment\n      patch(\n        oldSubTree,\n        content,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        isSVG,\n        optimized\n      )\n      n2.el = content.el\n    }\n    suspense.subTree = content\n    suspense.fallbackTree = fallback\n  }\n\n  function resolveSuspense(suspense: HostSuspenseBoundary) {\n    if (__DEV__) {\n      if (suspense.isResolved) {\n        throw new Error(\n          `resolveSuspense() is called on an already resolved suspense boundary.`\n        )\n      }\n      if (suspense.isUnmounted) {\n        throw new Error(\n          `resolveSuspense() is called on an already unmounted suspense boundary.`\n        )\n      }\n    }\n    const {\n      vnode,\n      subTree,\n      fallbackTree,\n      effects,\n      parentComponent,\n      container\n    } = suspense\n\n    // this is initial anchor on mount\n    let { anchor } = suspense\n    // unmount fallback tree\n    if (fallbackTree.el) {\n      // if the fallback tree was mounted, it may have been moved\n      // as part of a parent suspense. get the latest anchor for insertion\n      anchor = getNextHostNode(fallbackTree)\n      unmount(fallbackTree as HostVNode, parentComponent, suspense, true)\n    }\n    // move content from off-dom container to actual container\n    move(subTree as HostVNode, container, anchor)\n    const el = (vnode.el = (subTree as HostVNode).el!)\n    // suspense as the root node of a component...\n    if (parentComponent && parentComponent.subTree === vnode) {\n      parentComponent.vnode.el = el\n      updateHOCHostEl(parentComponent, el)\n    }\n    // check if there is a pending parent suspense\n    let parent = suspense.parent\n    let hasUnresolvedAncestor = false\n    while (parent) {\n      if (!parent.isResolved) {\n        // found a pending parent suspense, merge buffered post jobs\n        // into that parent\n        parent.effects.push(...effects)\n        hasUnresolvedAncestor = true\n        break\n      }\n      parent = parent.parent\n    }\n    // no pending parent suspense, flush all jobs\n    if (!hasUnresolvedAncestor) {\n      queuePostFlushCb(effects)\n    }\n    suspense.isResolved = true\n    // invoke @resolve event\n    const onResolve = vnode.props && vnode.props.onResolve\n    if (isFunction(onResolve)) {\n      onResolve()\n    }\n  }\n\n  function restartSuspense(suspense: HostSuspenseBoundary) {\n    suspense.isResolved = false\n    const {\n      vnode,\n      subTree,\n      fallbackTree,\n      parentComponent,\n      container,\n      hiddenContainer,\n      isSVG,\n      optimized\n    } = suspense\n\n    // move content tree back to the off-dom container\n    const anchor = getNextHostNode(subTree)\n    move(subTree as HostVNode, hiddenContainer, null)\n    // remount the fallback tree\n    patch(\n      null,\n      fallbackTree,\n      container,\n      anchor,\n      parentComponent,\n      null, // fallback tree will not have suspense context\n      isSVG,\n      optimized\n    )\n    const el = (vnode.el = (fallbackTree as HostVNode).el!)\n    // suspense as the root node of a component...\n    if (parentComponent && parentComponent.subTree === vnode) {\n      parentComponent.vnode.el = el\n      updateHOCHostEl(parentComponent, el)\n    }\n\n    // invoke @suspense event\n    const onSuspense = vnode.props && vnode.props.onSuspense\n    if (isFunction(onSuspense)) {\n      onSuspense()\n    }\n  }\n\n  function processComponent(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    if (n1 == null) {\n      mountComponent(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      )\n    } else {\n      const instance = (n2.component = n1.component)!\n\n      if (shouldUpdateComponent(n1, n2, optimized)) {\n        if (\n          __FEATURE_SUSPENSE__ &&\n          instance.asyncDep &&\n          !instance.asyncResolved\n        ) {\n          // async & still pending - just update props and slots\n          // since the component's reactive effect for render isn't set-up yet\n          if (__DEV__) {\n            pushWarningContext(n2)\n          }\n          updateComponentPreRender(instance, n2)\n          if (__DEV__) {\n            popWarningContext()\n          }\n          return\n        } else {\n          // normal update\n          instance.next = n2\n          // instance.update is the reactive effect runner.\n          instance.update()\n        }\n      } else {\n        // no update needed. just copy over properties\n        n2.component = n1.component\n        n2.el = n1.el\n      }\n    }\n    if (n2.ref !== null && parentComponent !== null) {\n      setRef(n2.ref, n1 && n1.ref, parentComponent, n2.component!.renderProxy)\n    }\n  }\n\n  function mountComponent(\n    initialVNode: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean\n  ) {\n    const instance: ComponentInternalInstance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent\n    ))\n\n    if (__DEV__) {\n      pushWarningContext(initialVNode)\n    }\n\n    // resolve props and slots for setup context\n    const propsOptions = (initialVNode.type as Component).props\n    resolveProps(instance, initialVNode.props, propsOptions)\n    resolveSlots(instance, initialVNode.children)\n\n    // setup stateful logic\n    if (initialVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n      setupStatefulComponent(instance, parentSuspense)\n    }\n\n    // setup() is async. This component relies on async logic to be resolved\n    // before proceeding\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\n      if (!parentSuspense) {\n        // TODO handle this properly\n        throw new Error('Async component without a suspense boundary!')\n      }\n\n      // parent suspense already resolved, need to re-suspense\n      // use queueJob so it's handled synchronously after patching the current\n      // suspense tree\n      if (parentSuspense.isResolved) {\n        queueJob(() => {\n          restartSuspense(parentSuspense)\n        })\n      }\n\n      parentSuspense.deps++\n      instance.asyncDep\n        .catch(err => {\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\n        })\n        .then(asyncSetupResult => {\n          // component may be unmounted before resolve\n          if (!instance.isUnmounted && !parentSuspense.isUnmounted) {\n            retryAsyncComponent(\n              instance,\n              asyncSetupResult,\n              parentSuspense,\n              isSVG\n            )\n          }\n        })\n\n      // give it a placeholder\n      const placeholder = (instance.subTree = createVNode(Comment))\n      processCommentNode(null, placeholder, container, anchor)\n      initialVNode.el = placeholder.el\n      return\n    }\n\n    setupRenderEffect(\n      instance,\n      parentSuspense,\n      initialVNode,\n      container,\n      anchor,\n      isSVG\n    )\n\n    if (__DEV__) {\n      popWarningContext()\n    }\n  }\n\n  function retryAsyncComponent(\n    instance: ComponentInternalInstance,\n    asyncSetupResult: unknown,\n    parentSuspense: HostSuspenseBoundary,\n    isSVG: boolean\n  ) {\n    parentSuspense.deps--\n    // retry from this component\n    instance.asyncResolved = true\n    const { vnode } = instance\n    if (__DEV__) {\n      pushWarningContext(vnode)\n    }\n    handleSetupResult(instance, asyncSetupResult, parentSuspense)\n    setupRenderEffect(\n      instance,\n      parentSuspense,\n      vnode,\n      // component may have been moved before resolve\n      hostParentNode(instance.subTree.el) as HostElement,\n      getNextHostNode(instance.subTree),\n      isSVG\n    )\n    updateHOCHostEl(instance, vnode.el as HostNode)\n    if (__DEV__) {\n      popWarningContext()\n    }\n    if (parentSuspense.deps === 0) {\n      resolveSuspense(parentSuspense)\n    }\n  }\n\n  function setupRenderEffect(\n    instance: ComponentInternalInstance,\n    parentSuspense: HostSuspenseBoundary | null,\n    initialVNode: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    isSVG: boolean\n  ) {\n    // create reactive effect for rendering\n    let mounted = false\n    instance.update = effect(function componentEffect() {\n      if (!mounted) {\n        const subTree = (instance.subTree = renderComponentRoot(instance))\n        // beforeMount hook\n        if (instance.bm !== null) {\n          invokeHooks(instance.bm)\n        }\n        patch(null, subTree, container, anchor, instance, parentSuspense, isSVG)\n        initialVNode.el = subTree.el\n        // mounted hook\n        if (instance.m !== null) {\n          queuePostRenderEffect(instance.m, parentSuspense)\n        }\n        mounted = true\n      } else {\n        // updateComponent\n        // This is triggered by mutation of component's own state (next: null)\n        // OR parent calling processComponent (next: HostVNode)\n        const { next } = instance\n\n        if (__DEV__) {\n          pushWarningContext(next || instance.vnode)\n        }\n\n        if (next !== null) {\n          updateComponentPreRender(instance, next)\n        }\n        const prevTree = instance.subTree\n        const nextTree = (instance.subTree = renderComponentRoot(instance))\n        // beforeUpdate hook\n        if (instance.bu !== null) {\n          invokeHooks(instance.bu)\n        }\n        // reset refs\n        // only needed if previous patch had refs\n        if (instance.refs !== EMPTY_OBJ) {\n          instance.refs = {}\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a portal\n          hostParentNode(prevTree.el as HostNode) as HostElement,\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          isSVG\n        )\n        instance.vnode.el = nextTree.el\n        if (next === null) {\n          // self-triggered update. In case of HOC, update parent component\n          // vnode el. HOC is indicated by parent instance's subTree pointing\n          // to child component's vnode\n          updateHOCHostEl(instance, nextTree.el)\n        }\n        // updated hook\n        if (instance.u !== null) {\n          queuePostRenderEffect(instance.u, parentSuspense)\n        }\n\n        if (__DEV__) {\n          popWarningContext()\n        }\n      }\n    }, __DEV__ ? createDevEffectOptions(instance) : prodEffectOptions)\n  }\n\n  function updateComponentPreRender(\n    instance: ComponentInternalInstance,\n    nextVNode: HostVNode\n  ) {\n    nextVNode.component = instance\n    instance.vnode = nextVNode\n    instance.next = null\n    resolveProps(instance, nextVNode.props, (nextVNode.type as Component).props)\n    resolveSlots(instance, nextVNode.children)\n  }\n\n  function updateHOCHostEl(\n    { vnode, parent }: ComponentInternalInstance,\n    el: HostNode\n  ) {\n    while (parent && parent.subTree === vnode) {\n      ;(vnode = parent.vnode).el = el\n      parent = parent.parent\n    }\n  }\n\n  function patchChildren(\n    n1: HostVNode | null,\n    n2: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean = false\n  ) {\n    const c1 = n1 && n1.children\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\n    const c2 = n2.children\n\n    const { patchFlag, shapeFlag } = n2\n    if (patchFlag === PatchFlags.BAIL) {\n      optimized = false\n    }\n    // fast path\n    if (patchFlag > 0) {\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\n        // this could be either fully-keyed or mixed (some keyed some not)\n        // presence of patchFlag means children are guaranteed to be arrays\n        patchKeyedChildren(\n          c1 as HostVNode[],\n          c2 as HostVNodeChildren,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n        return\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\n        // unkeyed\n        patchUnkeyedChildren(\n          c1 as HostVNode[],\n          c2 as HostVNodeChildren,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n        return\n      }\n    }\n\n    // children has 3 possibilities: text, array or no children.\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      // text children fast path\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        unmountChildren(c1 as HostVNode[], parentComponent, parentSuspense)\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2 as string)\n      }\n    } else {\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        // prev children was array\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          // two arrays, cannot assume anything, do full diff\n          patchKeyedChildren(\n            c1 as HostVNode[],\n            c2 as HostVNodeChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n        } else {\n          // no new children, just unmount old\n          unmountChildren(\n            c1 as HostVNode[],\n            parentComponent,\n            parentSuspense,\n            true\n          )\n        }\n      } else {\n        // prev children was text OR null\n        // new children is array OR null\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\n          hostSetElementText(container, '')\n        }\n        // mount new if array\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          mountChildren(\n            c2 as HostVNodeChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n        }\n      }\n    }\n  }\n\n  function patchUnkeyedChildren(\n    c1: HostVNode[],\n    c2: HostVNodeChildren,\n    container: HostElement,\n    anchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    c1 = c1 || EMPTY_ARR\n    c2 = c2 || EMPTY_ARR\n    const oldLength = c1.length\n    const newLength = c2.length\n    const commonLength = Math.min(oldLength, newLength)\n    let i\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = optimized\n        ? (c2[i] as HostVNode)\n        : (c2[i] = normalizeVNode(c2[i]))\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized\n      )\n    }\n    if (oldLength > newLength) {\n      // remove old\n      unmountChildren(c1, parentComponent, parentSuspense, true, commonLength)\n    } else {\n      // mount new\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        optimized,\n        commonLength\n      )\n    }\n  }\n\n  // can be all-keyed or mixed\n  function patchKeyedChildren(\n    c1: HostVNode[],\n    c2: HostVNodeChildren,\n    container: HostElement,\n    parentAnchor: HostNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    isSVG: boolean,\n    optimized: boolean\n  ) {\n    let i = 0\n    const l2 = c2.length\n    let e1 = c1.length - 1 // prev ending index\n    let e2 = l2 - 1 // next ending index\n\n    // 1. sync from start\n    // (a b) c\n    // (a b) d e\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i]\n      const n2 = optimized\n        ? (c2[i] as HostVNode)\n        : (c2[i] = normalizeVNode(c2[i]))\n      if (isSameType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          parentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n      } else {\n        break\n      }\n      i++\n    }\n\n    // 2. sync from end\n    // a (b c)\n    // d e (b c)\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1]\n      const n2 = optimized\n        ? (c2[i] as HostVNode)\n        : (c2[e2] = normalizeVNode(c2[e2]))\n      if (isSameType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          parentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        )\n      } else {\n        break\n      }\n      e1--\n      e2--\n    }\n\n    // 3. common sequence + mount\n    // (a b)\n    // (a b) c\n    // i = 2, e1 = 1, e2 = 2\n    // (a b)\n    // c (a b)\n    // i = 0, e1 = -1, e2 = 0\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1\n        const anchor =\n          nextPos < l2 ? (c2[nextPos] as HostVNode).el : parentAnchor\n        while (i <= e2) {\n          patch(\n            null,\n            optimized ? (c2[i] as HostVNode) : (c2[i] = normalizeVNode(c2[i])),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG\n          )\n          i++\n        }\n      }\n    }\n\n    // 4. common sequence + unmount\n    // (a b) c\n    // (a b)\n    // i = 2, e1 = 2, e2 = 1\n    // a (b c)\n    // (b c)\n    // i = 0, e1 = 0, e2 = -1\n    else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true)\n        i++\n      }\n    }\n\n    // 5. unknown sequence\n    // [i ... e1 + 1]: a b [c d e] f g\n    // [i ... e2 + 1]: a b [e d c h] f g\n    // i = 2, e1 = 4, e2 = 5\n    else {\n      const s1 = i // prev starting index\n      const s2 = i // next starting index\n\n      // 5.1 build key:index map for newChildren\n      const keyToNewIndexMap: Map<string | number, number> = new Map()\n      for (i = s2; i <= e2; i++) {\n        const nextChild = optimized\n          ? (c2[i] as HostVNode)\n          : (c2[i] = normalizeVNode(c2[i]))\n        if (nextChild.key != null) {\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            )\n          }\n          keyToNewIndexMap.set(nextChild.key, i)\n        }\n      }\n\n      // 5.2 loop through old children left to be patched and try to patch\n      // matching nodes & remove nodes that are no longer present\n      let j\n      let patched = 0\n      const toBePatched = e2 - s2 + 1\n      let moved = false\n      // used to track whether any node has moved\n      let maxNewIndexSoFar = 0\n      // works as Map<newIndex, oldIndex>\n      // Note that oldIndex is offset by +1\n      // and oldIndex = 0 is a special value indicating the new node has\n      // no corresponding old node.\n      // used for determining longest stable subsequence\n      const newIndexToOldIndexMap = new Array(toBePatched)\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\n\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i]\n        if (patched >= toBePatched) {\n          // all new children have been patched so this can only be a removal\n          unmount(prevChild, parentComponent, parentSuspense, true)\n          continue\n        }\n        let newIndex\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key)\n        } else {\n          // key-less node, try to locate a key-less node of the same type\n          for (j = s2; j <= e2; j++) {\n            if (\n              newIndexToOldIndexMap[j - s2] === 0 &&\n              isSameType(prevChild, c2[j] as HostVNode)\n            ) {\n              newIndex = j\n              break\n            }\n          }\n        }\n        if (newIndex === undefined) {\n          unmount(prevChild, parentComponent, parentSuspense, true)\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex\n          } else {\n            moved = true\n          }\n          patch(\n            prevChild,\n            c2[newIndex] as HostVNode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            optimized\n          )\n          patched++\n        }\n      }\n\n      // 5.3 move and mount\n      // generate longest stable subsequence only when nodes have moved\n      const increasingNewIndexSequence = moved\n        ? getSequence(newIndexToOldIndexMap)\n        : EMPTY_ARR\n      j = increasingNewIndexSequence.length - 1\n      // looping backwards so that we can use last patched node as anchor\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i\n        const nextChild = c2[nextIndex] as HostVNode\n        const anchor =\n          nextIndex + 1 < l2\n            ? (c2[nextIndex + 1] as HostVNode).el\n            : parentAnchor\n        if (newIndexToOldIndexMap[i] === 0) {\n          // mount new\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG\n          )\n        } else if (moved) {\n          // move if:\n          // There is no stable subsequence (e.g. a reverse)\n          // OR current node is not among the stable sequence\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor)\n          } else {\n            j--\n          }\n        }\n      }\n    }\n  }\n\n  function move(\n    vnode: HostVNode,\n    container: HostElement,\n    anchor: HostNode | null\n  ) {\n    if (vnode.component !== null) {\n      move(vnode.component.subTree, container, anchor)\n      return\n    }\n    if (__FEATURE_SUSPENSE__ && vnode.type === Suspense) {\n      const suspense = vnode.suspense!\n      move(\n        suspense.isResolved ? suspense.subTree : suspense.fallbackTree,\n        container,\n        anchor\n      )\n      suspense.container = container\n      return\n    }\n    if (vnode.type === Fragment) {\n      hostInsert(vnode.el!, container, anchor)\n      const children = vnode.children as HostVNode[]\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor)\n      }\n      hostInsert(vnode.anchor!, container, anchor)\n    } else {\n      hostInsert(vnode.el!, container, anchor)\n    }\n  }\n\n  function unmount(\n    vnode: HostVNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    doRemove?: boolean\n  ) {\n    const {\n      props,\n      ref,\n      type,\n      component,\n      suspense,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      anchor\n    } = vnode\n\n    // unset ref\n    if (ref !== null && parentComponent !== null) {\n      setRef(ref, null, parentComponent, null)\n    }\n\n    if (component != null) {\n      unmountComponent(component, parentSuspense, doRemove)\n      return\n    }\n\n    if (__FEATURE_SUSPENSE__ && suspense != null) {\n      unmountSuspense(suspense, parentComponent, parentSuspense, doRemove)\n      return\n    }\n\n    if (props != null && props.onVnodeBeforeUnmount != null) {\n      invokeDirectiveHook(props.onVnodeBeforeUnmount, parentComponent, vnode)\n    }\n\n    const shouldRemoveChildren = type === Fragment && doRemove\n    if (dynamicChildren != null) {\n      unmountChildren(\n        dynamicChildren,\n        parentComponent,\n        parentSuspense,\n        shouldRemoveChildren\n      )\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      unmountChildren(\n        children as HostVNode[],\n        parentComponent,\n        parentSuspense,\n        shouldRemoveChildren\n      )\n    }\n\n    if (doRemove) {\n      hostRemove(vnode.el!)\n      if (anchor != null) hostRemove(anchor)\n    }\n\n    if (props != null && props.onVnodeUnmounted != null) {\n      queuePostRenderEffect(() => {\n        invokeDirectiveHook(props.onVnodeUnmounted, parentComponent, vnode)\n      }, parentSuspense)\n    }\n  }\n\n  function unmountComponent(\n    instance: ComponentInternalInstance,\n    parentSuspense: HostSuspenseBoundary | null,\n    doRemove?: boolean\n  ) {\n    const { bum, effects, update, subTree, um } = instance\n    // beforeUnmount hook\n    if (bum !== null) {\n      invokeHooks(bum)\n    }\n    if (effects !== null) {\n      for (let i = 0; i < effects.length; i++) {\n        stop(effects[i])\n      }\n    }\n    // update may be null if a component is unmounted before its async\n    // setup has resolved.\n    if (update !== null) {\n      stop(update)\n      unmount(subTree, instance, parentSuspense, doRemove)\n    }\n    // unmounted hook\n    if (um !== null) {\n      queuePostRenderEffect(um, parentSuspense)\n    }\n    queuePostFlushCb(() => {\n      instance.isUnmounted = true\n    })\n\n    // A component with async dep inside a pending suspense is unmounted before\n    // its async dep resolves. This should remove the dep from the suspense, and\n    // cause the suspense to resolve immediately if that was the last dep.\n    if (\n      __FEATURE_SUSPENSE__ &&\n      parentSuspense !== null &&\n      !parentSuspense.isResolved &&\n      !parentSuspense.isUnmounted &&\n      instance.asyncDep !== null &&\n      !instance.asyncResolved\n    ) {\n      parentSuspense.deps--\n      if (parentSuspense.deps === 0) {\n        resolveSuspense(parentSuspense)\n      }\n    }\n  }\n\n  function unmountSuspense(\n    suspense: HostSuspenseBoundary,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    doRemove?: boolean\n  ) {\n    suspense.isUnmounted = true\n    unmount(suspense.subTree, parentComponent, parentSuspense, doRemove)\n    if (!suspense.isResolved) {\n      unmount(suspense.fallbackTree, parentComponent, parentSuspense, doRemove)\n    }\n  }\n\n  function unmountChildren(\n    children: HostVNode[],\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: HostSuspenseBoundary | null,\n    doRemove?: boolean,\n    start: number = 0\n  ) {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove)\n    }\n  }\n\n  function getNextHostNode({\n    component,\n    suspense,\n    anchor,\n    el\n  }: HostVNode): HostNode | null {\n    if (component !== null) {\n      return getNextHostNode(component.subTree)\n    }\n    if (__FEATURE_SUSPENSE__ && suspense !== null) {\n      return getNextHostNode(\n        suspense.isResolved ? suspense.subTree : suspense.fallbackTree\n      )\n    }\n    return hostNextSibling((anchor || el)!)\n  }\n\n  function setRef(\n    ref: string | Function | Ref,\n    oldRef: string | Function | Ref | null,\n    parent: ComponentInternalInstance,\n    value: HostNode | ComponentPublicInstance | null\n  ) {\n    const refs = parent.refs === EMPTY_OBJ ? (parent.refs = {}) : parent.refs\n    const renderContext = toRaw(parent.renderContext)\n\n    // unset old ref\n    if (oldRef !== null && oldRef !== ref) {\n      if (isString(oldRef)) {\n        refs[oldRef] = null\n        const oldSetupRef = renderContext[oldRef]\n        if (isRef(oldSetupRef)) {\n          oldSetupRef.value = null\n        }\n      } else if (isRef(oldRef)) {\n        oldRef.value = null\n      }\n    }\n\n    if (isString(ref)) {\n      const setupRef = renderContext[ref]\n      if (isRef(setupRef)) {\n        setupRef.value = value\n      }\n      refs[ref] = value\n    } else if (isRef(ref)) {\n      ref.value = value\n    } else if (isFunction(ref)) {\n      ref(value, refs)\n    } else if (__DEV__) {\n      warn('Invalid template ref type:', value, `(${typeof value})`)\n    }\n  }\n\n  function render(vnode: HostVNode | null, rawContainer: HostElement | string) {\n    let container: any = rawContainer\n    if (isString(container)) {\n      container = hostQuerySelector(container)\n      if (!container) {\n        if (__DEV__) {\n          warn(\n            `Failed to locate root container: ` + `querySelector returned null.`\n          )\n        }\n        return\n      }\n    }\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true)\n      }\n    } else {\n      patch(container._vnode || null, vnode, container)\n    }\n    flushPostFlushCbs()\n    container._vnode = vnode\n  }\n\n  return {\n    render,\n    createApp: createAppAPI(render)\n  }\n}\n\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\nfunction getSequence(arr: number[]): number[] {\n  const p = arr.slice()\n  const result = [0]\n  let i, j, u, v, c\n  const len = arr.length\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i]\n    if (arrI !== 0) {\n      j = result[result.length - 1]\n      if (arr[j] < arrI) {\n        p[i] = j\n        result.push(i)\n        continue\n      }\n      u = 0\n      v = result.length - 1\n      while (u < v) {\n        c = ((u + v) / 2) | 0\n        if (arr[result[c]] < arrI) {\n          u = c + 1\n        } else {\n          v = c\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1]\n        }\n        result[u] = i\n      }\n    }\n  }\n  u = result.length\n  v = result[u - 1]\n  while (u-- > 0) {\n    result[u] = v\n    v = p[v]\n  }\n  return result\n}\n","import { VNode, VNodeChild, isVNode } from './vnode'\nimport { ReactiveEffect, reactive, readonly } from '@vue/reactivity'\nimport {\n  PublicInstanceProxyHandlers,\n  ComponentPublicInstance\n} from './componentProxy'\nimport { ComponentPropsOptions } from './componentProps'\nimport { Slots } from './componentSlots'\nimport { warn } from './warning'\nimport {\n  ErrorCodes,\n  callWithErrorHandling,\n  callWithAsyncErrorHandling\n} from './errorHandling'\nimport { AppContext, createAppContext, AppConfig } from './apiApp'\nimport { Directive, validateDirectiveName } from './directives'\nimport { applyOptions, ComponentOptions } from './apiOptions'\nimport {\n  EMPTY_OBJ,\n  isFunction,\n  capitalize,\n  NOOP,\n  isObject,\n  NO,\n  makeMap,\n  isPromise\n} from '@vue/shared'\nimport { SuspenseBoundary } from './suspense'\nimport {\n  CompilerError,\n  CompilerOptions,\n  generateCodeFrame\n} from '@vue/compiler-dom'\n\nexport type Data = { [key: string]: unknown }\n\nexport interface FunctionalComponent<P = {}> {\n  (props: P, ctx: SetupContext): VNodeChild\n  props?: ComponentPropsOptions<P>\n  displayName?: string\n}\n\nexport type Component = ComponentOptions | FunctionalComponent\n\ntype LifecycleHook = Function[] | null\n\nexport const enum LifecycleHooks {\n  BEFORE_CREATE = 'bc',\n  CREATED = 'c',\n  BEFORE_MOUNT = 'bm',\n  MOUNTED = 'm',\n  BEFORE_UPDATE = 'bu',\n  UPDATED = 'u',\n  BEFORE_UNMOUNT = 'bum',\n  UNMOUNTED = 'um',\n  DEACTIVATED = 'da',\n  ACTIVATED = 'a',\n  RENDER_TRIGGERED = 'rtg',\n  RENDER_TRACKED = 'rtc',\n  ERROR_CAPTURED = 'ec'\n}\n\nexport type Emit = ((event: string, ...args: unknown[]) => void)\n\nexport interface SetupContext {\n  attrs: Data\n  slots: Slots\n  emit: Emit\n}\n\nexport type RenderFunction = () => VNodeChild\n\nexport interface ComponentInternalInstance {\n  type: FunctionalComponent | ComponentOptions\n  parent: ComponentInternalInstance | null\n  appContext: AppContext\n  root: ComponentInternalInstance\n  vnode: VNode\n  next: VNode | null\n  subTree: VNode\n  update: ReactiveEffect\n  render: RenderFunction | null\n  effects: ReactiveEffect[] | null\n  provides: Data\n  // cache for renderProxy access type to avoid hasOwnProperty calls\n  accessCache: Data | null\n  // cache for render function values that rely on _ctx but won't need updates\n  // after initialized (e.g. inline handlers)\n  renderCache: any[] | null\n\n  components: Record<string, Component>\n  directives: Record<string, Directive>\n\n  asyncDep: Promise<any> | null\n  asyncResult: any\n  asyncResolved: boolean\n\n  // the rest are only for stateful components\n  renderContext: Data\n  data: Data\n  props: Data\n  attrs: Data\n  slots: Slots\n  renderProxy: ComponentPublicInstance | null\n  propsProxy: Data | null\n  setupContext: SetupContext | null\n  refs: Data\n  emit: Emit\n\n  // user namespace\n  user: { [key: string]: any }\n\n  // lifecycle\n  isUnmounted: boolean\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\n  [LifecycleHooks.CREATED]: LifecycleHook\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\n  [LifecycleHooks.MOUNTED]: LifecycleHook\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\n  [LifecycleHooks.UPDATED]: LifecycleHook\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\n}\n\nconst emptyAppContext = createAppContext()\n\nexport function createComponentInstance(\n  vnode: VNode,\n  parent: ComponentInternalInstance | null\n) {\n  // inherit parent app context - or - if root, adopt from root vnode\n  const appContext =\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\n  const instance: ComponentInternalInstance = {\n    vnode,\n    parent,\n    appContext,\n    type: vnode.type,\n    root: null!, // set later so it can point to itself\n    next: null,\n    subTree: null!, // will be set synchronously right after creation\n    update: null!, // will be set synchronously right after creation\n    render: null,\n    renderProxy: null,\n    propsProxy: null,\n    setupContext: null,\n    effects: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null!,\n    renderCache: null,\n\n    // setup context properties\n    renderContext: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n\n    // per-instance asset storage (mutable during options resolution)\n    components: Object.create(appContext.components),\n    directives: Object.create(appContext.directives),\n\n    // async dependency management\n    asyncDep: null,\n    asyncResult: null,\n    asyncResolved: false,\n\n    // user namespace for storing whatever the user assigns to `this`\n    user: {},\n\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isUnmounted: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n\n    emit: (event, ...args) => {\n      const props = instance.vnode.props || EMPTY_OBJ\n      const handler = props[`on${event}`] || props[`on${capitalize(event)}`]\n      if (handler) {\n        callWithAsyncErrorHandling(\n          handler,\n          instance,\n          ErrorCodes.COMPONENT_EVENT_HANDLER,\n          args\n        )\n      }\n    }\n  }\n\n  instance.root = parent ? parent.root : instance\n  return instance\n}\n\nexport let currentInstance: ComponentInternalInstance | null = null\nexport let currentSuspense: SuspenseBoundary | null = null\n\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\n  currentInstance\n\nexport const setCurrentInstance = (\n  instance: ComponentInternalInstance | null\n) => {\n  currentInstance = instance\n}\n\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\n\nexport function validateComponentName(name: string, config: AppConfig) {\n  const appIsNativeTag = config.isNativeTag || NO\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component id: ' + name\n    )\n  }\n}\n\nexport function setupStatefulComponent(\n  instance: ComponentInternalInstance,\n  parentSuspense: SuspenseBoundary | null\n) {\n  const Component = instance.type as ComponentOptions\n\n  if (__DEV__) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config)\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components)\n      for (let i = 0; i < names.length; i++) {\n        const name = names[i]\n        validateComponentName(name, instance.appContext.config)\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives)\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i])\n      }\n    }\n  }\n  // 0. create render proxy property access cache\n  instance.accessCache = {}\n  // 1. create render proxy\n  instance.renderProxy = new Proxy(instance, PublicInstanceProxyHandlers)\n  // 2. create props proxy\n  // the propsProxy is a reactive AND readonly proxy to the actual props.\n  // it will be updated in resolveProps() on updates before render\n  const propsProxy = (instance.propsProxy = readonly(instance.props))\n  // 3. call setup()\n  const { setup } = Component\n  if (setup) {\n    const setupContext = (instance.setupContext =\n      setup.length > 1 ? createSetupContext(instance) : null)\n\n    currentInstance = instance\n    currentSuspense = parentSuspense\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      ErrorCodes.SETUP_FUNCTION,\n      [propsProxy, setupContext]\n    )\n    currentInstance = null\n    currentSuspense = null\n\n    if (isPromise(setupResult)) {\n      if (__FEATURE_SUSPENSE__) {\n        // async setup returned Promise.\n        // bail here and wait for re-entry.\n        instance.asyncDep = setupResult\n      } else if (__DEV__) {\n        warn(\n          `setup() returned a Promise, but the version of Vue you are using ` +\n            `does not support it yet.`\n        )\n      }\n      return\n    } else {\n      handleSetupResult(instance, setupResult, parentSuspense)\n    }\n  } else {\n    finishComponentSetup(instance, parentSuspense)\n  }\n}\n\nexport function handleSetupResult(\n  instance: ComponentInternalInstance,\n  setupResult: unknown,\n  parentSuspense: SuspenseBoundary | null\n) {\n  if (isFunction(setupResult)) {\n    // setup returned an inline render function\n    instance.render = setupResult as RenderFunction\n  } else if (isObject(setupResult)) {\n    if (__DEV__ && isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - ` +\n          `return a render function instead.`\n      )\n    }\n    // setup returned bindings.\n    // assuming a render function compiled from template is present.\n    instance.renderContext = reactive(setupResult)\n  } else if (__DEV__ && setupResult !== undefined) {\n    warn(\n      `setup() should return an object. Received: ${\n        setupResult === null ? 'null' : typeof setupResult\n      }`\n    )\n  }\n  finishComponentSetup(instance, parentSuspense)\n}\n\ntype CompileFunction = (\n  template: string,\n  options?: CompilerOptions\n) => RenderFunction\n\nlet compile: CompileFunction | undefined\n\nexport function registerRuntimeCompiler(_compile: CompileFunction) {\n  compile = _compile\n}\n\nfunction finishComponentSetup(\n  instance: ComponentInternalInstance,\n  parentSuspense: SuspenseBoundary | null\n) {\n  const Component = instance.type as ComponentOptions\n  if (!instance.render) {\n    if (__RUNTIME_COMPILE__ && Component.template && !Component.render) {\n      // __RUNTIME_COMPILE__ ensures `compile` is provided\n      Component.render = compile!(Component.template, {\n        isCustomElement: instance.appContext.config.isCustomElement || NO,\n        onError(err: CompilerError) {\n          if (__DEV__) {\n            const message = `Template compilation error: ${err.message}`\n            const codeFrame =\n              err.loc &&\n              generateCodeFrame(\n                Component.template!,\n                err.loc.start.offset,\n                err.loc.end.offset\n              )\n            warn(codeFrame ? `${message}\\n${codeFrame}` : message)\n          }\n        }\n      })\n    }\n    if (__DEV__ && !Component.render) {\n      /* istanbul ignore if */\n      if (!__RUNTIME_COMPILE__ && Component.template) {\n        warn(\n          `Component provides template but the build of Vue you are running ` +\n            `does not support on-the-fly template compilation. Either use the ` +\n            `full build or pre-compile the template using Vue CLI.`\n        )\n      } else {\n        warn(\n          `Component is missing${\n            __RUNTIME_COMPILE__ ? ` template or` : ``\n          } render function.`\n        )\n      }\n    }\n    instance.render = (Component.render || NOOP) as RenderFunction\n  }\n\n  // support for 2.x options\n  if (__FEATURE_OPTIONS__) {\n    currentInstance = instance\n    currentSuspense = parentSuspense\n    applyOptions(instance, Component)\n    currentInstance = null\n    currentSuspense = null\n  }\n\n  if (instance.renderContext === EMPTY_OBJ) {\n    instance.renderContext = reactive({})\n  }\n}\n\n// used to identify a setup context proxy\nexport const SetupProxySymbol = Symbol()\n\nconst SetupProxyHandlers: { [key: string]: ProxyHandler<any> } = {}\n;['attrs', 'slots'].forEach((type: string) => {\n  SetupProxyHandlers[type] = {\n    get: (instance, key) => instance[type][key],\n    has: (instance, key) => key === SetupProxySymbol || key in instance[type],\n    ownKeys: instance => Reflect.ownKeys(instance[type]),\n    // this is necessary for ownKeys to work properly\n    getOwnPropertyDescriptor: (instance, key) =>\n      Reflect.getOwnPropertyDescriptor(instance[type], key),\n    set: () => false,\n    deleteProperty: () => false\n  }\n})\n\nfunction createSetupContext(instance: ComponentInternalInstance): SetupContext {\n  const context = {\n    // attrs & slots are non-reactive, but they need to always expose\n    // the latest values (instance.xxx may get replaced during updates) so we\n    // need to expose them through a proxy\n    attrs: new Proxy(instance, SetupProxyHandlers.attrs),\n    slots: new Proxy(instance, SetupProxyHandlers.slots),\n    emit: instance.emit\n  }\n  return __DEV__ ? Object.freeze(context) : context\n}\n","import {\n  effect,\n  stop,\n  isRef,\n  Ref,\n  ComputedRef,\n  ReactiveEffectOptions\n} from '@vue/reactivity'\nimport { queueJob } from './scheduler'\nimport { EMPTY_OBJ, isObject, isArray, isFunction, isString } from '@vue/shared'\nimport { recordEffect } from './apiReactivity'\nimport {\n  currentInstance,\n  ComponentInternalInstance,\n  currentSuspense\n} from './component'\nimport {\n  ErrorCodes,\n  callWithErrorHandling,\n  callWithAsyncErrorHandling\n} from './errorHandling'\nimport { onBeforeUnmount } from './apiLifecycle'\nimport { queuePostRenderEffect } from './createRenderer'\nimport { WatchHandler } from './apiOptions'\n\nexport interface WatchOptions {\n  lazy?: boolean\n  flush?: 'pre' | 'post' | 'sync'\n  deep?: boolean\n  onTrack?: ReactiveEffectOptions['onTrack']\n  onTrigger?: ReactiveEffectOptions['onTrigger']\n}\n\ntype StopHandle = () => void\n\ntype WatcherSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\n\ntype MapSources<T> = {\n  [K in keyof T]: T[K] extends WatcherSource<infer V> ? V : never\n}\n\nexport type CleanupRegistrator = (invalidate: () => void) => void\n\ntype SimpleEffect = (onCleanup: CleanupRegistrator) => void\n\nconst invoke = (fn: Function) => fn()\n\n// overload #1: simple effect\nexport function watch(effect: SimpleEffect, options?: WatchOptions): StopHandle\n\n// overload #2: single source + cb\nexport function watch<T>(\n  source: WatcherSource<T>,\n  cb: WatchHandler<T>,\n  options?: WatchOptions\n): StopHandle\n\n// overload #3: array of multiple sources + cb\nexport function watch<T extends readonly WatcherSource<unknown>[]>(\n  sources: T,\n  cb: (\n    newValues: MapSources<T>,\n    oldValues: MapSources<T>,\n    onCleanup: CleanupRegistrator\n  ) => any,\n  options?: WatchOptions\n): StopHandle\n\n// implementation\nexport function watch<T = any>(\n  effectOrSource: WatcherSource<T> | WatcherSource<T>[] | SimpleEffect,\n  cbOrOptions?: WatchHandler<T> | WatchOptions,\n  options?: WatchOptions\n): StopHandle {\n  if (isFunction(cbOrOptions)) {\n    // effect callback as 2nd argument - this is a source watcher\n    return doWatch(effectOrSource, cbOrOptions, options)\n  } else {\n    // 2nd argument is either missing or an options object\n    // - this is a simple effect watcher\n    return doWatch(effectOrSource, null, cbOrOptions)\n  }\n}\n\nfunction doWatch(\n  source: WatcherSource | WatcherSource[] | SimpleEffect,\n  cb:\n    | ((newValue: any, oldValue: any, onCleanup: CleanupRegistrator) => any)\n    | null,\n  { lazy, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\n): StopHandle {\n  const instance = currentInstance\n  const suspense = currentSuspense\n\n  let getter: () => any\n  if (isArray(source)) {\n    getter = () =>\n      source.map(\n        s =>\n          isRef(s)\n            ? s.value\n            : callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\n      )\n  } else if (isRef(source)) {\n    getter = () => source.value\n  } else if (cb) {\n    // getter with cb\n    getter = () =>\n      callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\n  } else {\n    // no cb -> simple effect\n    getter = () => {\n      if (instance && instance.isUnmounted) {\n        return\n      }\n      if (cleanup) {\n        cleanup()\n      }\n      return callWithErrorHandling(\n        source,\n        instance,\n        ErrorCodes.WATCH_CALLBACK,\n        [registerCleanup]\n      )\n    }\n  }\n\n  if (deep) {\n    const baseGetter = getter\n    getter = () => traverse(baseGetter())\n  }\n\n  let cleanup: Function\n  const registerCleanup: CleanupRegistrator = (fn: () => void) => {\n    // TODO wrap the cleanup fn for error handling\n    cleanup = runner.onStop = () => {\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\n    }\n  }\n\n  let oldValue = isArray(source) ? [] : undefined\n  const applyCb = cb\n    ? () => {\n        if (instance && instance.isUnmounted) {\n          return\n        }\n        const newValue = runner()\n        if (deep || newValue !== oldValue) {\n          // cleanup before running cb again\n          if (cleanup) {\n            cleanup()\n          }\n          callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\n            newValue,\n            oldValue,\n            registerCleanup\n          ])\n          oldValue = newValue\n        }\n      }\n    : void 0\n\n  let scheduler: (job: () => any) => void\n  if (flush === 'sync') {\n    scheduler = invoke\n  } else if (flush === 'pre') {\n    scheduler = job => {\n      if (!instance || instance.vnode.el != null) {\n        queueJob(job)\n      } else {\n        // with 'pre' option, the first call must happen before\n        // the component is mounted so it is called synchronously.\n        job()\n      }\n    }\n  } else {\n    scheduler = job => {\n      queuePostRenderEffect(job, suspense)\n    }\n  }\n\n  const runner = effect(getter, {\n    lazy: true,\n    // so it runs before component update effects in pre flush mode\n    computed: true,\n    onTrack,\n    onTrigger,\n    scheduler: applyCb ? () => scheduler(applyCb) : scheduler\n  })\n\n  if (!lazy) {\n    if (applyCb) {\n      scheduler(applyCb)\n    } else {\n      scheduler(runner)\n    }\n  } else {\n    oldValue = runner()\n  }\n\n  recordEffect(runner)\n  return () => {\n    stop(runner)\n  }\n}\n\n// this.$watch\nexport function instanceWatch(\n  this: ComponentInternalInstance,\n  source: string | Function,\n  cb: Function,\n  options?: WatchOptions\n): StopHandle {\n  const ctx = this.renderProxy!\n  const getter = isString(source) ? () => ctx[source] : source.bind(ctx)\n  const stop = watch(getter, cb.bind(ctx), options)\n  onBeforeUnmount(stop, this)\n  return stop\n}\n\nfunction traverse(value: any, seen: Set<any> = new Set()) {\n  if (!isObject(value) || seen.has(value)) {\n    return\n  }\n  seen.add(value)\n  if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen)\n    }\n  } else if (value instanceof Map) {\n    value.forEach((v, key) => {\n      // to register mutation dep for existing keys\n      traverse(value.get(key), seen)\n    })\n  } else if (value instanceof Set) {\n    value.forEach(v => {\n      traverse(v, seen)\n    })\n  } else {\n    for (const key in value) {\n      traverse(value[key], seen)\n    }\n  }\n  return value\n}\n","import { ComponentInternalInstance, Data, Emit } from './component'\nimport { nextTick } from './scheduler'\nimport { instanceWatch } from './apiWatch'\nimport { EMPTY_OBJ, hasOwn, isGloballyWhitelisted } from '@vue/shared'\nimport { ExtractComputedReturns } from './apiOptions'\nimport { UnwrapRef, ReactiveEffect } from '@vue/reactivity'\nimport { warn } from './warning'\n\n// public properties exposed on the proxy, which is used as the render context\n// in templates (as `this` in the render option)\nexport type ComponentPublicInstance<\n  P = {},\n  B = {},\n  D = {},\n  C = {},\n  M = {},\n  PublicProps = P\n> = {\n  [key: string]: any\n  $data: D\n  $props: PublicProps\n  $attrs: Data\n  $refs: Data\n  $slots: Data\n  $root: ComponentInternalInstance | null\n  $parent: ComponentInternalInstance | null\n  $emit: Emit\n  $el: any\n  $options: any\n  $forceUpdate: ReactiveEffect\n  $nextTick: typeof nextTick\n  $watch: typeof instanceWatch\n} & P &\n  UnwrapRef<B> &\n  D &\n  ExtractComputedReturns<C> &\n  M\n\nconst publicPropertiesMap = {\n  $data: 'data',\n  $props: 'propsProxy',\n  $attrs: 'attrs',\n  $slots: 'slots',\n  $refs: 'refs',\n  $parent: 'parent',\n  $root: 'root',\n  $emit: 'emit',\n  $options: 'type'\n}\n\nconst enum AccessTypes {\n  DATA,\n  CONTEXT,\n  PROPS\n}\n\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\n  get(target: ComponentInternalInstance, key: string) {\n    const { renderContext, data, props, propsProxy, accessCache, type } = target\n    // This getter gets called for every property access on the render context\n    // during render and is a major hotspot. The most expensive part of this\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\n    // access on a plain object, so we use an accessCache object (with null\n    // prototype) to memoize what access type a key corresponds to.\n    const n = accessCache![key]\n    if (n !== undefined) {\n      switch (n) {\n        case AccessTypes.DATA:\n          return data[key]\n        case AccessTypes.CONTEXT:\n          return renderContext[key]\n        case AccessTypes.PROPS:\n          return propsProxy![key]\n      }\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      accessCache![key] = AccessTypes.DATA\n      return data[key]\n    } else if (hasOwn(renderContext, key)) {\n      accessCache![key] = AccessTypes.CONTEXT\n      return renderContext[key]\n    } else if (hasOwn(props, key)) {\n      // only cache props access if component has declared (thus stable) props\n      if (type.props != null) {\n        accessCache![key] = AccessTypes.PROPS\n      }\n      // return the value from propsProxy for ref unwrapping and readonly\n      return propsProxy![key]\n    } else if (key === '$cache') {\n      return target.renderCache || (target.renderCache = [])\n    } else if (key === '$el') {\n      return target.vnode.el\n    } else if (hasOwn(publicPropertiesMap, key)) {\n      return target[publicPropertiesMap[key]]\n    }\n    // methods are only exposed when options are supported\n    if (__FEATURE_OPTIONS__) {\n      switch (key) {\n        case '$forceUpdate':\n          return target.update\n        case '$nextTick':\n          return nextTick\n        case '$watch':\n          return instanceWatch.bind(target)\n      }\n    }\n    return target.user[key]\n  },\n\n  set(target: ComponentInternalInstance, key: string, value: any): boolean {\n    const { data, renderContext } = target\n    if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value\n    } else if (hasOwn(renderContext, key)) {\n      renderContext[key] = value\n    } else if (key[0] === '$' && key.slice(1) in target) {\n      __DEV__ &&\n        warn(\n          `Attempting to mutate public property \"${key}\". ` +\n            `Properties starting with $ are reserved and readonly.`,\n          target\n        )\n      return false\n    } else if (key in target.props) {\n      __DEV__ &&\n        warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, target)\n      return false\n    } else {\n      target.user[key] = value\n    }\n    return true\n  }\n}\n\nif (__RUNTIME_COMPILE__) {\n  // this trap is only called in browser-compiled render functions that use\n  // `with (this) {}`\n  PublicInstanceProxyHandlers.has = (_: any, key: string): boolean => {\n    return key[0] !== '_' && !isGloballyWhitelisted(key)\n  }\n}\n","import { currentInstance } from './component'\nimport { warn } from './warning'\n\nexport interface InjectionKey<T> extends Symbol {}\n\nexport function provide<T>(key: InjectionKey<T> | string, value: T) {\n  if (!currentInstance) {\n    if (__DEV__) {\n      warn(`provide() can only be used inside setup().`)\n    }\n  } else {\n    let provides = currentInstance.provides\n    // by default an instance inherits its parent's provides object\n    // but when it needs to provide values of its own, it creates its\n    // own provides object using parent provides object as prototype.\n    // this way in `inject` we can simply look up injections from direct\n    // parent and let the prototype chain do the work.\n    const parentProvides =\n      currentInstance.parent && currentInstance.parent.provides\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides)\n    }\n    // TS doesn't allow symbol as index type\n    provides[key as string] = value\n  }\n}\n\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\nexport function inject<T>(key: InjectionKey<T> | string, defaultValue: T): T\nexport function inject(key: InjectionKey<any> | string, defaultValue?: any) {\n  if (currentInstance) {\n    const provides = currentInstance.provides\n    if (key in provides) {\n      // TS doesn't allow symbol as index type\n      return provides[key as string]\n    } else if (defaultValue !== undefined) {\n      return defaultValue\n    } else if (__DEV__) {\n      warn(`injection \"${key}\" not found.`)\n    }\n  } else if (__DEV__) {\n    warn(`inject() can only be used inside setup().`)\n  }\n}\n","import {\n  ComponentInternalInstance,\n  Data,\n  Component,\n  SetupContext,\n  RenderFunction\n} from './component'\nimport {\n  isFunction,\n  extend,\n  isString,\n  isObject,\n  isArray,\n  EMPTY_OBJ,\n  NOOP\n} from '@vue/shared'\nimport { computed } from './apiReactivity'\nimport { watch, WatchOptions, CleanupRegistrator } from './apiWatch'\nimport { provide, inject } from './apiInject'\nimport {\n  onBeforeMount,\n  onMounted,\n  onBeforeUpdate,\n  onUpdated,\n  onErrorCaptured,\n  onRenderTracked,\n  onBeforeUnmount,\n  onUnmounted,\n  onRenderTriggered,\n  DebuggerHook,\n  ErrorCapturedHook\n} from './apiLifecycle'\nimport {\n  reactive,\n  ComputedGetter,\n  WritableComputedOptions\n} from '@vue/reactivity'\nimport { ComponentObjectPropsOptions, ExtractPropTypes } from './componentProps'\nimport { Directive } from './directives'\nimport { ComponentPublicInstance } from './componentProxy'\nimport { warn } from './warning'\n\ninterface ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C extends ComputedOptions,\n  M extends MethodOptions\n> extends LegacyOptions<Props, RawBindings, D, C, M> {\n  setup?: (\n    this: null,\n    props: Props,\n    ctx: SetupContext\n  ) => RawBindings | RenderFunction | void\n  name?: string\n  template?: string\n  // Note: we are intentionally using the signature-less `Function` type here\n  // since any type with signature will cause the whole inference to fail when\n  // the return expression contains reference to `this`.\n  // Luckily `render()` doesn't need any arguments nor does it care about return\n  // type.\n  render?: Function\n  components?: Record<string, Component>\n  directives?: Record<string, Directive>\n}\n\nexport type ComponentOptionsWithoutProps<\n  Props = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {}\n> = ComponentOptionsBase<Props, RawBindings, D, C, M> & {\n  props?: undefined\n} & ThisType<ComponentPublicInstance<Props, RawBindings, D, C, M>>\n\nexport type ComponentOptionsWithArrayProps<\n  PropNames extends string = string,\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Props = { [key in PropNames]?: unknown }\n> = ComponentOptionsBase<Props, RawBindings, D, C, M> & {\n  props: PropNames[]\n} & ThisType<ComponentPublicInstance<Props, RawBindings, D, C, M>>\n\nexport type ComponentOptionsWithObjectProps<\n  PropsOptions = ComponentObjectPropsOptions,\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Props = ExtractPropTypes<PropsOptions>\n> = ComponentOptionsBase<Props, RawBindings, D, C, M> & {\n  props: PropsOptions\n} & ThisType<ComponentPublicInstance<Props, RawBindings, D, C, M>>\n\nexport type ComponentOptions =\n  | ComponentOptionsWithoutProps\n  | ComponentOptionsWithObjectProps\n  | ComponentOptionsWithArrayProps\n\n// TODO legacy component definition also supports constructors with .options\ntype LegacyComponent = ComponentOptions\n\nexport type ComputedOptions = Record<\n  string,\n  ComputedGetter<any> | WritableComputedOptions<any>\n>\n\nexport interface MethodOptions {\n  [key: string]: Function\n}\n\nexport type ExtractComputedReturns<T extends any> = {\n  [key in keyof T]: T[key] extends { get: Function }\n    ? ReturnType<T[key]['get']>\n    : ReturnType<T[key]>\n}\n\nexport type WatchHandler<T = any> = (\n  val: T,\n  oldVal: T,\n  onCleanup: CleanupRegistrator\n) => any\n\ntype ComponentWatchOptions = Record<\n  string,\n  string | WatchHandler | { handler: WatchHandler } & WatchOptions\n>\n\ntype ComponentInjectOptions =\n  | string[]\n  | Record<\n      string | symbol,\n      string | symbol | { from: string | symbol; default?: any }\n    >\n\n// TODO type inference for these options\nexport interface LegacyOptions<\n  Props,\n  RawBindings,\n  D,\n  C extends ComputedOptions,\n  M extends MethodOptions\n> {\n  el?: any\n\n  // state\n  // Limitation: we cannot expose RawBindings on the `this` context for data\n  // since that leads to some sort of circular inference and breaks ThisType\n  // for the entire component.\n  data?: D | ((this: ComponentPublicInstance<Props>) => D)\n  computed?: C\n  methods?: M\n  // TODO watch array\n  watch?: ComponentWatchOptions\n  provide?: Data | Function\n  inject?: ComponentInjectOptions\n\n  // composition\n  mixins?: LegacyComponent[]\n  extends?: LegacyComponent\n\n  // lifecycle\n  beforeCreate?(): void\n  created?(): void\n  beforeMount?(): void\n  mounted?(): void\n  beforeUpdate?(): void\n  updated?(): void\n  activated?(): void\n  deactivated?(): void\n  beforeUnmount?(): void\n  unmounted?(): void\n  renderTracked?: DebuggerHook\n  renderTriggered?: DebuggerHook\n  errorCaptured?: ErrorCapturedHook\n}\n\nconst enum OptionTypes {\n  PROPS = 'Props',\n  DATA = 'Data',\n  COMPUTED = 'Computed',\n  METHODS = 'Methods',\n  INJECT = 'Inject'\n}\n\nfunction createDuplicateChecker() {\n  const cache = Object.create(null)\n  return (type: OptionTypes, key: string) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\n    } else {\n      cache[key] = type\n    }\n  }\n}\n\nexport function applyOptions(\n  instance: ComponentInternalInstance,\n  options: ComponentOptions,\n  asMixin: boolean = false\n) {\n  const renderContext =\n    instance.renderContext === EMPTY_OBJ\n      ? (instance.renderContext = reactive({}))\n      : instance.renderContext\n  const ctx = instance.renderProxy!\n  const {\n    // composition\n    mixins,\n    extends: extendsOptions,\n    // state\n    props: propsOptions,\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // assets\n    components,\n    directives,\n    // lifecycle\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    // TODO activated\n    // TODO deactivated\n    beforeUnmount,\n    unmounted,\n    renderTracked,\n    renderTriggered,\n    errorCaptured\n  } = options\n\n  const globalMixins = instance.appContext.mixins\n  // call it only during dev\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\n  // applyOptions is called non-as-mixin once per instance\n  if (!asMixin) {\n    callSyncHook('beforeCreate', options, ctx, globalMixins)\n    // global mixins are applied first\n    applyMixins(instance, globalMixins)\n  }\n  // extending a base component...\n  if (extendsOptions) {\n    applyOptions(instance, extendsOptions, true)\n  }\n  // local mixins\n  if (mixins) {\n    applyMixins(instance, mixins)\n  }\n\n  if (__DEV__ && propsOptions) {\n    for (const key in propsOptions) {\n      checkDuplicateProperties!(OptionTypes.PROPS, key)\n    }\n  }\n\n  // state options\n  if (dataOptions) {\n    const data = isFunction(dataOptions) ? dataOptions.call(ctx) : dataOptions\n    if (!isObject(data)) {\n      __DEV__ && warn(`data() should return an object.`)\n    } else if (instance.data === EMPTY_OBJ) {\n      if (__DEV__) {\n        for (const key in data) {\n          checkDuplicateProperties!(OptionTypes.DATA, key)\n        }\n      }\n      instance.data = reactive(data)\n    } else {\n      // existing data: this is a mixin or extends.\n      extend(instance.data, data)\n    }\n  }\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = (computedOptions as ComputedOptions)[key]\n\n      __DEV__ && checkDuplicateProperties!(OptionTypes.COMPUTED, key)\n\n      if (isFunction(opt)) {\n        renderContext[key] = computed(opt.bind(ctx))\n      } else {\n        const { get, set } = opt\n        if (isFunction(get)) {\n          renderContext[key] = computed({\n            get: get.bind(ctx),\n            set: isFunction(set)\n              ? set.bind(ctx)\n              : __DEV__\n                ? () => {\n                    warn(\n                      `Computed property \"${key}\" was assigned to but it has no setter.`\n                    )\n                  }\n                : NOOP\n          })\n        } else if (__DEV__) {\n          warn(`Computed property \"${key}\" has no getter.`)\n        }\n      }\n    }\n  }\n\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = (methods as MethodOptions)[key]\n      if (isFunction(methodHandler)) {\n        __DEV__ && checkDuplicateProperties!(OptionTypes.METHODS, key)\n        renderContext[key] = methodHandler.bind(ctx)\n      } else if (__DEV__) {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\n            `Did you reference the function correctly?`\n        )\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      const raw = watchOptions[key]\n      const getter = () => ctx[key]\n      if (isString(raw)) {\n        const handler = renderContext[raw]\n        if (isFunction(handler)) {\n          watch(getter, handler as WatchHandler)\n        } else if (__DEV__) {\n          warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\n        }\n      } else if (isFunction(raw)) {\n        watch(getter, raw.bind(ctx))\n      } else if (isObject(raw)) {\n        // TODO 2.x compat\n        watch(getter, raw.handler.bind(ctx), raw)\n      } else if (__DEV__) {\n        warn(`Invalid watch option: \"${key}\"`)\n      }\n    }\n  }\n  if (provideOptions) {\n    const provides = isFunction(provideOptions)\n      ? provideOptions.call(ctx)\n      : provideOptions\n    for (const key in provides) {\n      provide(key, provides[key])\n    }\n  }\n  if (injectOptions) {\n    if (isArray(injectOptions)) {\n      for (let i = 0; i < injectOptions.length; i++) {\n        const key = injectOptions[i]\n        __DEV__ && checkDuplicateProperties!(OptionTypes.INJECT, key)\n        renderContext[key] = inject(key)\n      }\n    } else {\n      for (const key in injectOptions) {\n        __DEV__ && checkDuplicateProperties!(OptionTypes.INJECT, key)\n        const opt = injectOptions[key]\n        if (isObject(opt)) {\n          renderContext[key] = inject(opt.from, opt.default)\n        } else {\n          renderContext[key] = inject(opt)\n        }\n      }\n    }\n  }\n\n  // asset options\n  if (components) {\n    extend(instance.components, components)\n  }\n  if (directives) {\n    extend(instance.directives, directives)\n  }\n\n  // lifecycle options\n  if (!asMixin) {\n    callSyncHook('created', options, ctx, globalMixins)\n  }\n  if (beforeMount) {\n    onBeforeMount(beforeMount.bind(ctx))\n  }\n  if (mounted) {\n    onMounted(mounted.bind(ctx))\n  }\n  if (beforeUpdate) {\n    onBeforeUpdate(beforeUpdate.bind(ctx))\n  }\n  if (updated) {\n    onUpdated(updated.bind(ctx))\n  }\n  if (errorCaptured) {\n    onErrorCaptured(errorCaptured.bind(ctx))\n  }\n  if (renderTracked) {\n    onRenderTracked(renderTracked.bind(ctx))\n  }\n  if (renderTriggered) {\n    onRenderTriggered(renderTriggered.bind(ctx))\n  }\n  if (beforeUnmount) {\n    onBeforeUnmount(beforeUnmount.bind(ctx))\n  }\n  if (unmounted) {\n    onUnmounted(unmounted.bind(ctx))\n  }\n}\n\nfunction callSyncHook(\n  name: 'beforeCreate' | 'created',\n  options: ComponentOptions,\n  ctx: ComponentPublicInstance,\n  globalMixins: ComponentOptions[]\n) {\n  callHookFromMixins(name, globalMixins, ctx)\n  const baseHook = options.extends && options.extends[name]\n  if (baseHook) {\n    baseHook.call(ctx)\n  }\n  const mixins = options.mixins\n  if (mixins) {\n    callHookFromMixins(name, mixins, ctx)\n  }\n  const selfHook = options[name]\n  if (selfHook) {\n    selfHook.call(ctx)\n  }\n}\n\nfunction callHookFromMixins(\n  name: 'beforeCreate' | 'created',\n  mixins: ComponentOptions[],\n  ctx: ComponentPublicInstance\n) {\n  for (let i = 0; i < mixins.length; i++) {\n    const fn = mixins[i][name]\n    if (fn) {\n      fn.call(ctx)\n    }\n  }\n}\n\nfunction applyMixins(\n  instance: ComponentInternalInstance,\n  mixins: ComponentOptions[]\n) {\n  for (let i = 0; i < mixins.length; i++) {\n    applyOptions(instance, mixins[i], true)\n  }\n}\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\nexport const PORTAL = Symbol(__DEV__ ? `Portal` : ``)\nexport const COMMENT = Symbol(__DEV__ ? `Comment` : ``)\nexport const TEXT = Symbol(__DEV__ ? `Text` : ``)\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  __DEV__ ? `resolveDynamicComponent` : ``\n)\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\nexport const TO_STRING = Symbol(__DEV__ ? `toString` : ``)\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\n\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\n// Using `any` here because TS doesn't allow symbols as index type.\nexport const helperNameMap: any = {\n  [FRAGMENT]: `Fragment`,\n  [PORTAL]: `Portal`,\n  [COMMENT]: `Comment`,\n  [TEXT]: `Text`,\n  [SUSPENSE]: `Suspense`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_STRING]: `toString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`\n}\n\nexport function registerRuntimeHelpers(helpers: any) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s]\n  })\n}\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\n\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\n\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\n\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`\n})\n","export {\n  ref,\n  isRef,\n  toRefs,\n  reactive,\n  isReactive,\n  readonly,\n  isReadonly,\n  toRaw,\n  markReadonly,\n  markNonReactive,\n  effect,\n  // types\n  ReactiveEffect,\n  ReactiveEffectOptions,\n  DebuggerEvent,\n  OperationTypes,\n  Ref,\n  ComputedRef,\n  UnwrapRef,\n  WritableComputedOptions\n} from '@vue/reactivity'\n\nimport {\n  computed as _computed,\n  ComputedRef,\n  WritableComputedOptions,\n  ReactiveEffect,\n  WritableComputedRef,\n  ComputedGetter\n} from '@vue/reactivity'\n\nimport { currentInstance } from './component'\n\n// record effects created during a component's setup() so that they can be\n// stopped when the component unmounts\nexport function recordEffect(effect: ReactiveEffect) {\n  if (currentInstance) {\n    ;(currentInstance.effects || (currentInstance.effects = [])).push(effect)\n  }\n}\n\nexport function computed<T>(getter: ComputedGetter<T>): ComputedRef<T>\nexport function computed<T>(\n  options: WritableComputedOptions<T>\n): WritableComputedRef<T>\nexport function computed<T>(\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>\n) {\n  const c = _computed(getterOrOptions as any)\n  recordEffect(c.effect)\n  return c\n}\n","// internally the const enum flags are used to avoid overhead of property\n// access\nexport const enum ShapeFlags {\n  ELEMENT = 1,\n  FUNCTIONAL_COMPONENT = 1 << 1,\n  STATEFUL_COMPONENT = 1 << 2,\n  TEXT_CHILDREN = 1 << 3,\n  ARRAY_CHILDREN = 1 << 4,\n  SLOTS_CHILDREN = 1 << 5,\n  COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT\n}\n\n// but the flags are also exported as an actual object for external use\nexport const PublicShapeFlags = {\n  ELEMENT: ShapeFlags.ELEMENT,\n  FUNCTIONAL_COMPONENT: ShapeFlags.FUNCTIONAL_COMPONENT,\n  STATEFUL_COMPONENT: ShapeFlags.STATEFUL_COMPONENT,\n  TEXT_CHILDREN: ShapeFlags.TEXT_CHILDREN,\n  ARRAY_CHILDREN: ShapeFlags.ARRAY_CHILDREN,\n  SLOTS_CHILDREN: ShapeFlags.SLOTS_CHILDREN,\n  COMPONENT: ShapeFlags.COMPONENT\n}\n","import { currentRenderingInstance } from '../componentRenderUtils'\nimport { currentInstance, Component } from '../component'\nimport { Directive } from '../directives'\nimport {\n  camelize,\n  capitalize,\n  isString,\n  isObject,\n  isFunction\n} from '@vue/shared'\nimport { warn } from '../warning'\n\nexport function resolveComponent(name: string): Component | undefined {\n  return resolveAsset('components', name)\n}\n\nexport function resolveDynamicComponent(\n  component: unknown\n): Component | undefined {\n  if (!component) return\n  if (isString(component)) {\n    return resolveAsset('components', component)\n  } else if (isFunction(component) || isObject(component)) {\n    return component\n  }\n}\n\nexport function resolveDirective(name: string): Directive | undefined {\n  return resolveAsset('directives', name)\n}\n\n// overload 1: components\nfunction resolveAsset(type: 'components', name: string): Component | undefined\n// overload 2: directives\nfunction resolveAsset(type: 'directives', name: string): Directive | undefined\n\nfunction resolveAsset(type: 'components' | 'directives', name: string) {\n  const instance = currentRenderingInstance || currentInstance\n  if (instance) {\n    let camelized\n    const registry = instance[type]\n    const res =\n      registry[name] ||\n      registry[(camelized = camelize(name))] ||\n      registry[capitalize(camelized)]\n    if (__DEV__ && !res) {\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`)\n    }\n    return res\n  } else if (__DEV__) {\n    warn(\n      `resolve${capitalize(type.slice(0, -1))} ` +\n        `can only be used in render() or setup().`\n    )\n  }\n}\n","const doc = document\nconst svgNS = 'http://www.w3.org/2000/svg'\n\nexport const nodeOps = {\n  insert: (child: Node, parent: Node, anchor?: Node) => {\n    if (anchor != null) {\n      parent.insertBefore(child, anchor)\n    } else {\n      parent.appendChild(child)\n    }\n  },\n\n  remove: (child: Node) => {\n    const parent = child.parentNode\n    if (parent != null) {\n      parent.removeChild(child)\n    }\n  },\n\n  createElement: (tag: string, isSVG?: boolean): Element =>\n    isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag),\n\n  createText: (text: string): Text => doc.createTextNode(text),\n\n  createComment: (text: string): Comment => doc.createComment(text),\n\n  setText: (node: Text, text: string) => {\n    node.nodeValue = text\n  },\n\n  setElementText: (el: HTMLElement, text: string) => {\n    el.textContent = text\n  },\n\n  parentNode: (node: Node): HTMLElement | null =>\n    node.parentNode as HTMLElement,\n\n  nextSibling: (node: Node): Node | null => node.nextSibling,\n\n  querySelector: (selector: string): Element | null =>\n    doc.querySelector(selector)\n}\n","import { EMPTY_OBJ } from '@vue/shared'\nimport {\n  ComponentInternalInstance,\n  callWithAsyncErrorHandling\n} from '@vue/runtime-core'\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\n\ninterface Invoker extends EventListener {\n  value: EventValue\n  lastUpdated: number\n}\n\ntype EventValue = (Function | Function[]) & {\n  invoker?: Invoker | null\n}\n\ntype EventValueWithOptions = {\n  handler: EventValue\n  options: AddEventListenerOptions\n  invoker?: Invoker | null\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nlet _getNow: () => number = Date.now\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res ( relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\nif (\n  typeof document !== 'undefined' &&\n  _getNow() > document.createEvent('Event').timeStamp\n) {\n  // if the low-res timestamp which is bigger than the event timestamp\n  // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\n  // and we need to use the hi-res version for event listeners as well.\n  _getNow = () => performance.now()\n}\n\n// To avoid the overhead of repeatedly calling performance.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\nlet cachedNow: number = 0\nconst p = Promise.resolve()\nconst reset = () => {\n  cachedNow = 0\n}\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\n\nexport function addEventListener(\n  el: Element,\n  event: string,\n  handler: EventListener,\n  options?: EventListenerOptions\n) {\n  el.addEventListener(event, handler, options)\n}\n\nexport function removeEventListener(\n  el: Element,\n  event: string,\n  handler: EventListener,\n  options?: EventListenerOptions\n) {\n  el.removeEventListener(event, handler, options)\n}\n\nexport function patchEvent(\n  el: Element,\n  name: string,\n  prevValue: EventValueWithOptions | EventValue | null,\n  nextValue: EventValueWithOptions | EventValue | null,\n  instance: ComponentInternalInstance | null = null\n) {\n  const prevOptions = prevValue && 'options' in prevValue && prevValue.options\n  const nextOptions = nextValue && 'options' in nextValue && nextValue.options\n  const invoker = prevValue && prevValue.invoker\n  const value =\n    nextValue && 'handler' in nextValue ? nextValue.handler : nextValue\n\n  if (prevOptions || nextOptions) {\n    const prev = prevOptions || EMPTY_OBJ\n    const next = nextOptions || EMPTY_OBJ\n    if (\n      prev.capture !== next.capture ||\n      prev.passive !== next.passive ||\n      prev.once !== next.once\n    ) {\n      if (invoker) {\n        removeEventListener(el, name, invoker, prev)\n      }\n      if (nextValue && value) {\n        const invoker = createInvoker(value, instance)\n        nextValue.invoker = invoker\n        addEventListener(el, name, invoker, next)\n      }\n      return\n    }\n  }\n\n  if (nextValue && value) {\n    if (invoker) {\n      ;(prevValue as EventValue).invoker = null\n      invoker.value = value\n      nextValue.invoker = invoker\n      invoker.lastUpdated = getNow()\n    } else {\n      addEventListener(\n        el,\n        name,\n        createInvoker(value, instance),\n        nextOptions || void 0\n      )\n    }\n  } else if (invoker) {\n    removeEventListener(el, name, invoker, prevOptions || void 0)\n  }\n}\n\nfunction createInvoker(\n  initialValue: any,\n  instance: ComponentInternalInstance | null\n) {\n  const invoker: Invoker = (e: Event) => {\n    // async edge case #6566: inner click event triggers patch, event handler\n    // attached to outer element during patch, and triggered again. This\n    // happens because browsers fire microtask ticks between event propagation.\n    // the solution is simple: we save the timestamp when a handler is attached,\n    // and the handler would only fire if the event passed to it was fired\n    // AFTER it was attached.\n    if (e.timeStamp >= invoker.lastUpdated - 1) {\n      callWithAsyncErrorHandling(\n        invoker.value,\n        instance,\n        ErrorCodes.NATIVE_EVENT_HANDLER,\n        [e]\n      )\n    }\n  }\n  invoker.value = initialValue\n  initialValue.invoker = invoker\n  invoker.lastUpdated = getNow()\n  return invoker\n}\n","import {\n  ObjectDirective,\n  VNode,\n  DirectiveBinding,\n  warn\n} from '@vue/runtime-core'\nimport { addEventListener } from '../modules/events'\nimport { isArray, isObject } from '@vue/shared'\n\nconst getModelAssigner = (vnode: VNode): ((value: any) => void) =>\n  vnode.props!['onUpdate:modelValue']\n\nfunction onCompositionStart(e: CompositionEvent) {\n  ;(e.target as any).composing = true\n}\n\nfunction onCompositionEnd(e: CompositionEvent) {\n  const target = e.target as any\n  if (target.composing) {\n    target.composing = false\n    trigger(target, 'input')\n  }\n}\n\nfunction trigger(el: HTMLElement, type: string) {\n  const e = document.createEvent('HTMLEvents')\n  e.initEvent(type, true, true)\n  el.dispatchEvent(e)\n}\n\nfunction toNumber(val: string): number | string {\n  const n = parseFloat(val)\n  return isNaN(n) ? val : n\n}\n\n// We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\nexport const vModelText: ObjectDirective<HTMLInputElement | HTMLTextAreaElement> = {\n  beforeMount(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n    el.value = value\n    const assign = getModelAssigner(vnode)\n    const castToNumber = number || el.type === 'number'\n    addEventListener(el, lazy ? 'change' : 'input', () => {\n      let domValue: string | number = el.value\n      if (trim) {\n        domValue = domValue.trim()\n      } else if (castToNumber) {\n        domValue = toNumber(domValue)\n      }\n      assign(domValue)\n    })\n    if (trim) {\n      addEventListener(el, 'change', () => {\n        el.value = el.value.trim()\n      })\n    }\n    if (!lazy) {\n      addEventListener(el, 'compositionstart', onCompositionStart)\n      addEventListener(el, 'compositionend', onCompositionEnd)\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\n      // switching focus before confirming composition choice\n      // this also fixes the issue where some browsers e.g. iOS Chrome\n      // fires \"change\" instead of \"input\" on autocomplete.\n      addEventListener(el, 'change', onCompositionEnd)\n    }\n  },\n  beforeUpdate(el, { value, modifiers: { trim, number } }) {\n    if (document.activeElement === el) {\n      if (trim && el.value.trim() === value) {\n        return\n      }\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\n        return\n      }\n    }\n    el.value = value\n  }\n}\n\nexport const vModelCheckbox: ObjectDirective<HTMLInputElement> = {\n  beforeMount(el, binding, vnode) {\n    setChecked(el, binding, vnode)\n    const assign = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      const modelValue = (el as any)._modelValue\n      const elementValue = getValue(el)\n      const checked = el.checked\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue)\n        const found = index !== -1\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue))\n        } else if (!checked && found) {\n          const filtered = [...modelValue]\n          filtered.splice(index, 1)\n          assign(filtered)\n        }\n      } else {\n        assign(checked)\n      }\n    })\n  },\n  beforeUpdate: setChecked\n}\n\nfunction setChecked(\n  el: HTMLInputElement,\n  { value }: DirectiveBinding,\n  vnode: VNode\n) {\n  // store the v-model value on the element so it can be accessed by the\n  // change listener.\n  ;(el as any)._modelValue = value\n  el.checked = isArray(value)\n    ? looseIndexOf(value, vnode.props!.value) > -1\n    : !!value\n}\n\nexport const vModelRadio: ObjectDirective<HTMLInputElement> = {\n  beforeMount(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props!.value)\n    const assign = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      assign(getValue(el))\n    })\n  },\n  beforeUpdate(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props!.value)\n  }\n}\n\nexport const vModelSelect: ObjectDirective<HTMLSelectElement> = {\n  // use mounted & updated because <select> relies on its children <option>s.\n  mounted(el, { value }, vnode) {\n    setSelected(el, value)\n    const assign = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      const selectedVal = Array.prototype.filter\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\n        .map(getValue)\n      assign(el.multiple ? selectedVal : selectedVal[0])\n    })\n  },\n  updated(el, { value }) {\n    setSelected(el, value)\n  }\n}\n\nfunction setSelected(el: HTMLSelectElement, value: any) {\n  const isMultiple = el.multiple\n  if (isMultiple && !isArray(value)) {\n    __DEV__ &&\n      warn(\n        `<select multiple v-model> expects an Array value for its binding, ` +\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n      )\n    return\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i]\n    const optionValue = getValue(option)\n    if (isMultiple) {\n      option.selected = looseIndexOf(value, optionValue) > -1\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        el.selectedIndex = i\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1\n  }\n}\n\nfunction looseEqual(a: any, b: any): boolean {\n  if (a === b) return true\n  const isObjectA = isObject(a)\n  const isObjectB = isObject(b)\n  if (isObjectA && isObjectB) {\n    try {\n      const isArrayA = isArray(a)\n      const isArrayB = isArray(b)\n      if (isArrayA && isArrayB) {\n        return (\n          a.length === b.length &&\n          a.every((e: any, i: any) => looseEqual(e, b[i]))\n        )\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        const keysA = Object.keys(a)\n        const keysB = Object.keys(b)\n        return (\n          keysA.length === keysB.length &&\n          keysA.every(key => looseEqual(a[key], b[key]))\n        )\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf(arr: any[], val: any): number {\n  return arr.findIndex(item => looseEqual(item, val))\n}\n\n// retrieve raw value set via :value bindings\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\n  return '_value' in el ? (el as any)._value : el.value\n}\n\nexport const vModelDynamic: ObjectDirective<\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n> = {\n  beforeMount(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'beforeMount')\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'mounted')\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\n  }\n}\n\nfunction callModelHook(\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\n  binding: DirectiveBinding,\n  vnode: VNode,\n  prevVNode: VNode | null,\n  hook: keyof ObjectDirective\n) {\n  let modelToUse: ObjectDirective\n  switch (el.tagName) {\n    case 'SELECT':\n      modelToUse = vModelSelect\n      break\n    case 'TEXTAREA':\n      modelToUse = vModelText\n      break\n    default:\n      switch (el.type) {\n        case 'checkbox':\n          modelToUse = vModelCheckbox\n          break\n        case 'radio':\n          modelToUse = vModelRadio\n          break\n        default:\n          modelToUse = vModelText\n      }\n  }\n  const fn = modelToUse[hook]\n  fn && fn(el, binding, vnode, prevVNode)\n}\n","const systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\n\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\n\nconst modifierGuards: Record<\n  string,\n  (e: Event, modifiers?: string[]) => void | boolean\n> = {\n  stop: e => e.stopPropagation(),\n  prevent: e => e.preventDefault(),\n  self: e => e.target !== e.currentTarget,\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\n  shift: e => !(e as KeyedEvent).shiftKey,\n  alt: e => !(e as KeyedEvent).altKey,\n  meta: e => !(e as KeyedEvent).metaKey,\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\n  exact: (e, modifiers: string[]) =>\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\n}\n\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\n  return (event: Event) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]]\n      if (guard && guard(event, modifiers)) return\n    }\n    return fn(event)\n  }\n}\n\n// Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\nconst keyNames: Record<string, string | string[]> = {\n  esc: 'escape',\n  space: ' ',\n  up: 'arrowup',\n  left: 'arrowleft',\n  right: 'arrowright',\n  down: 'arrowdown',\n  delete: 'backspace'\n}\n\nexport const withKeys = (fn: Function, modifiers: string[]) => {\n  return (event: KeyboardEvent) => {\n    if (!('key' in event)) return\n    const eventKey = event.key.toLowerCase()\n    if (\n      // None of the provided key modifiers match the current event key\n      !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)\n    ) {\n      return\n    }\n    return fn(event)\n  }\n}\n","import { createRenderer } from '@vue/runtime-core'\nimport { nodeOps } from './nodeOps'\nimport { patchProp } from './patchProp'\n// Importing from the compiler, will be tree-shaken in prod\nimport { isHTMLTag, isSVGTag } from '@vue/compiler-dom'\n\nconst { render, createApp } = createRenderer<Node, Element>({\n  patchProp,\n  ...nodeOps\n})\n\nconst wrappedCreateApp = () => {\n  const app = createApp()\n  // inject `isNativeTag` dev only\n  Object.defineProperty(app.config, 'isNativeTag', {\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\n    writable: false\n  })\n  return app\n}\n\nconst exportedCreateApp = __DEV__ ? wrappedCreateApp : createApp\n\nexport { render, exportedCreateApp as createApp }\n\n// DOM-only runtime helpers\nexport {\n  vModelText,\n  vModelCheckbox,\n  vModelRadio,\n  vModelSelect,\n  vModelDynamic\n} from './directives/vModel'\n\nexport { withModifiers, withKeys } from './directives/vOn'\n\n// re-export everything from core\n// h, Component, reactivity API, nextTick, flags & types\nexport * from '@vue/runtime-core'\n\n// Type augmentations\nexport interface ComponentPublicInstance {\n  $el: Element\n}\n","import { patchClass } from './modules/class'\nimport { patchStyle } from './modules/style'\nimport { patchAttr } from './modules/attrs'\nimport { patchDOMProp } from './modules/props'\nimport { patchEvent } from './modules/events'\nimport { isOn } from '@vue/shared'\nimport {\n  VNode,\n  ComponentInternalInstance,\n  SuspenseBoundary\n} from '@vue/runtime-core'\n\nexport function patchProp(\n  el: Element,\n  key: string,\n  nextValue: any,\n  prevValue: any,\n  isSVG: boolean,\n  prevChildren?: VNode[],\n  parentComponent?: ComponentInternalInstance,\n  parentSuspense?: SuspenseBoundary<Node, Element>,\n  unmountChildren?: any\n) {\n  switch (key) {\n    // special\n    case 'class':\n      patchClass(el, nextValue, isSVG)\n      break\n    case 'style':\n      patchStyle(el, prevValue, nextValue)\n      break\n    case 'modelValue':\n    case 'onUpdate:modelValue':\n      // Do nothing. This is handled by v-model directives.\n      break\n    default:\n      if (isOn(key)) {\n        patchEvent(\n          el,\n          key.slice(2).toLowerCase(),\n          prevValue,\n          nextValue,\n          parentComponent\n        )\n      } else if (!isSVG && key in el) {\n        patchDOMProp(\n          el,\n          key,\n          nextValue,\n          prevChildren,\n          parentComponent,\n          parentSuspense,\n          unmountChildren\n        )\n      } else {\n        patchAttr(el, key, nextValue)\n      }\n      break\n  }\n}\n","// compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\n\nexport function patchClass(el: Element, value: string, isSVG: boolean) {\n  // directly setting className should be faster than setAttribute in theory\n  if (isSVG) {\n    el.setAttribute('class', value)\n  } else {\n    el.className = value\n  }\n}\n","import { isString } from '@vue/shared'\n\ntype Style = string | Partial<CSSStyleDeclaration> | null\n\nexport function patchStyle(el: Element, prev: Style, next: Style) {\n  const style = (el as HTMLElement).style\n  if (!next) {\n    el.removeAttribute('style')\n  } else if (isString(next)) {\n    style.cssText = next\n  } else {\n    for (const key in next) {\n      style[key] = next[key] as string\n    }\n    if (prev && !isString(prev)) {\n      for (const key in prev) {\n        if (!next[key]) {\n          style[key] = ''\n        }\n      }\n    }\n  }\n}\n","export function patchDOMProp(\n  el: any,\n  key: string,\n  value: any,\n  // the following args are passed only due to potential innerHTML/textContent\n  // overriding existing VNodes, in which case the old tree must be properly\n  // unmounted.\n  prevChildren: any,\n  parentComponent: any,\n  parentSuspense: any,\n  unmountChildren: any\n) {\n  if ((key === 'innerHTML' || key === 'textContent') && prevChildren != null) {\n    unmountChildren(prevChildren, parentComponent, parentSuspense)\n  }\n  if (key === 'value' && el.tagName !== 'PROGRESS') {\n    // store value as _value as well since\n    // non-string values will be stringified.\n    el._value = value\n  }\n  if (value === '' && typeof el[key] === 'boolean') {\n    // e.g. <select multiple> compiles to { multiple: '' }\n    el[key] = true\n  } else {\n    el[key] = value == null ? '' : value\n  }\n}\n","export function patchAttr(el: Element, key: string, value: any) {\n  if (value == null) {\n    el.removeAttribute(key)\n  } else {\n    el.setAttribute(key, value)\n  }\n}\n","// Patch flags are optimization hints generated by the compiler.\n// when a block with dynamicChildren is encountered during diff, the algorithm\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\n// a render function generated by the compiler, so the algorithm only needs to\n// handle updates explicitly marked by these patch flags.\n\n// Patch flags can be combined using the | bitwise operator and can be checked\n// using the & operator, e.g.\n//\n//   const flag = TEXT | CLASS\n//   if (flag & TEXT) { ... }\n//\n// Check the `patchElement` function in './createRenderer.ts' to see how the\n// flags are handled during diff.\n\nexport const enum PatchFlags {\n  // Indicates an element with dynamic textContent (children fast path)\n  TEXT = 1,\n\n  // Indicates an element with dynamic class binding.\n  CLASS = 1 << 1,\n\n  // Indicates an element with dynamic style\n  // The compiler pre-compiles static string styles into static objects\n  // + detects and hoists inline static objects\n  // e.g. style=\"color: red\" and :style=\"{ color: 'red' }\" both get hoisted as\n  //   const style = { color: 'red' }\n  //   render() { return e('div', { style }) }\n  STYLE = 1 << 2,\n\n  // Indicates an element that has non-class/style dynamic props.\n  // Can also be on a component that has any dynamic props (includes\n  // class/style). when this flag is present, the vnode also has a dynamicProps\n  // array that contains the keys of the props that may change so the runtime\n  // can diff them faster (without having to worry about removed props)\n  PROPS = 1 << 3,\n\n  // Indicates an element with props with dynamic keys. When keys change, a full\n  // diff is always needed to remove the old key. This flag is mutually\n  // exclusive with CLASS, STYLE and PROPS.\n  FULL_PROPS = 1 << 4,\n\n  // Indicates an element that only needs non-props patching, e.g. ref or\n  // directives (onVnodeXXX hooks). It simply marks the vnode as \"need patch\",\n  // since every patched vnode checks for refs and onVnodeXXX hooks.\n  // This flag is never directly matched against, it simply serves as a non-zero\n  // value.\n  NEED_PATCH = 1 << 5,\n\n  // Indicates a fragment with keyed or partially keyed children\n  KEYED_FRAGMENT = 1 << 6,\n\n  // Indicates a fragment with unkeyed children.\n  UNKEYED_FRAGMENT = 1 << 7,\n\n  // Indicates a component with dynamic slots (e.g. slot that references a v-for\n  // iterated value, or dynamic slot names).\n  // Components with this flag are always force updated.\n  DYNAMIC_SLOTS = 1 << 8,\n\n  // A special flag that indicates that the diffing algorithm should bail out\n  // of optimized mode. This is only on block fragments created by renderSlot()\n  // when encountering non-compiler generated slots (i.e. manually written\n  // render functions, which should always be fully diffed)\n  BAIL = -1\n}\n\n// runtime object for public consumption\nexport const PublicPatchFlags = {\n  TEXT: PatchFlags.TEXT,\n  CLASS: PatchFlags.CLASS,\n  STYLE: PatchFlags.STYLE,\n  PROPS: PatchFlags.PROPS,\n  NEED_PATCH: PatchFlags.NEED_PATCH,\n  FULL_PROPS: PatchFlags.FULL_PROPS,\n  KEYED_FRAGMENT: PatchFlags.KEYED_FRAGMENT,\n  UNKEYED_FRAGMENT: PatchFlags.UNKEYED_FRAGMENT,\n  DYNAMIC_SLOTS: PatchFlags.DYNAMIC_SLOTS,\n  BAIL: PatchFlags.BAIL\n}\n\n// dev only flag -> name mapping\nexport const PatchFlagNames = {\n  [PatchFlags.TEXT]: `TEXT`,\n  [PatchFlags.CLASS]: `CLASS`,\n  [PatchFlags.STYLE]: `STYLE`,\n  [PatchFlags.PROPS]: `PROPS`,\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\n  [PatchFlags.BAIL]: `BAIL`\n}\n","import {\n  ComputedOptions,\n  MethodOptions,\n  ComponentOptionsWithoutProps,\n  ComponentOptionsWithArrayProps,\n  ComponentOptionsWithObjectProps\n} from './apiOptions'\nimport { SetupContext, RenderFunction } from './component'\nimport { ComponentPublicInstance } from './componentProxy'\nimport { ExtractPropTypes } from './componentProps'\nimport { isFunction } from '@vue/shared'\n\n// overload 1: direct setup function\n// (uses user defined props interface)\nexport function createComponent<Props, RawBindings = object>(\n  setup: (props: Props, ctx: SetupContext) => RawBindings | RenderFunction\n): {\n  new (): ComponentPublicInstance<Props, RawBindings>\n}\n\n// overload 2: object format with no props\n// (uses user defined props interface)\n// return type is for Vetur and TSX support\nexport function createComponent<\n  Props,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {}\n>(\n  options: ComponentOptionsWithoutProps<Props, RawBindings, D, C, M>\n): {\n  new (): ComponentPublicInstance<Props, RawBindings, D, C, M>\n}\n\n// overload 3: object format with array props declaration\n// props inferred as { [key in PropNames]?: unknown }\n// return type is for Vetur and TSX support\nexport function createComponent<\n  PropNames extends string,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {}\n>(\n  options: ComponentOptionsWithArrayProps<PropNames, RawBindings, D, C, M>\n): {\n  new (): ComponentPublicInstance<\n    { [key in PropNames]?: unknown },\n    RawBindings,\n    D,\n    C,\n    M\n  >\n}\n\n// overload 4: object format with object props declaration\n// see `ExtractPropTypes` in ./componentProps.ts\nexport function createComponent<\n  PropsOptions,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {}\n>(\n  options: ComponentOptionsWithObjectProps<PropsOptions, RawBindings, D, C, M>\n): {\n  // for Vetur and TSX support\n  new (): ComponentPublicInstance<\n    ExtractPropTypes<PropsOptions>,\n    RawBindings,\n    D,\n    C,\n    M,\n    ExtractPropTypes<PropsOptions, false>\n  >\n}\n\n// implementation, close to no-op\nexport function createComponent(options: any) {\n  return isFunction(options) ? { setup: options } : options\n}\n","import { Slot } from '../componentSlots'\nimport { isArray } from '@vue/shared'\n\ninterface CompiledSlotDescriptor {\n  name: string\n  fn: Slot\n}\n\nexport function createSlots(\n  slots: Record<string, Slot>,\n  dynamicSlots: (CompiledSlotDescriptor | CompiledSlotDescriptor[])[]\n): Record<string, Slot> {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i]\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn\n      }\n    } else {\n      // conditional single slot generated by <template v-if=\"...\" #foo>\n      slots[slot.name] = slot.fn\n    }\n  }\n  return slots\n}\n","import {\n  VNodeTypes,\n  VNode,\n  createVNode,\n  VNodeChildren,\n  Fragment,\n  Portal,\n  isVNode\n} from './vnode'\nimport { isObject, isArray } from '@vue/shared'\nimport { Ref } from '@vue/reactivity'\nimport { RawSlots } from './componentSlots'\nimport { FunctionalComponent } from './component'\nimport {\n  ComponentOptionsWithoutProps,\n  ComponentOptionsWithArrayProps,\n  ComponentOptionsWithObjectProps,\n  ComponentOptions\n} from './apiOptions'\nimport { ExtractPropTypes } from './componentProps'\n\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\n// props when possible. It is intended for manually written render functions.\n// Compiler-generated code uses `createVNode` because\n// 1. it is monomorphic and avoids the extra call overhead\n// 2. it allows specifying patchFlags for optimization\n\n/*\n// type only\nh('div')\n\n// type + props\nh('div', {})\n\n// type + omit props + children\n// Omit props does NOT support named slots\nh('div', []) // array\nh('div', 'foo') // text\nh('div', h('br')) // vnode\nh(Component, () => {}) // default slot\n\n// type + props + children\nh('div', {}, []) // array\nh('div', {}, 'foo') // text\nh('div', {}, h('br')) // vnode\nh(Component, {}, () => {}) // default slot\nh(Component, {}, {}) // named slots\n\n// named slots without props requires explicit `null` to avoid ambiguity\nh(Component, null, {})\n**/\n\nexport interface RawProps {\n  [key: string]: any\n  key?: string | number\n  ref?: string | Ref | Function\n  // used to differ from a single VNode object as children\n  _isVNode?: never\n  // used to differ from Array children\n  [Symbol.iterator]?: never\n}\n\nexport type RawChildren =\n  | string\n  | number\n  | boolean\n  | VNode\n  | VNodeChildren\n  | (() => any)\n\nexport { RawSlots }\n\n// fake constructor type returned from `createComponent`\ninterface Constructor<P = any> {\n  new (): { $props: P }\n}\n\n// The following is a series of overloads for providing props validation of\n// manually written render functions.\n\n// element\nexport function h(type: string, children?: RawChildren): VNode\nexport function h(\n  type: string,\n  props?: RawProps | null,\n  children?: RawChildren\n): VNode\n\n// keyed fragment\nexport function h(type: typeof Fragment, children?: RawChildren): VNode\nexport function h(\n  type: typeof Fragment,\n  props?: (RawProps & { key?: string | number }) | null,\n  children?: RawChildren\n): VNode\n\n// portal\nexport function h(type: typeof Portal, children?: RawChildren): VNode\nexport function h(\n  type: typeof Portal,\n  props?: (RawProps & { target: any }) | null,\n  children?: RawChildren\n): VNode\n\n// functional component\nexport function h(type: FunctionalComponent, children?: RawChildren): VNode\nexport function h<P>(\n  type: FunctionalComponent<P>,\n  props?: (RawProps & P) | null,\n  children?: RawChildren | RawSlots\n): VNode\n\n// stateful component\nexport function h(type: ComponentOptions, children?: RawChildren): VNode\nexport function h<P>(\n  type: ComponentOptionsWithoutProps<P>,\n  props?: (RawProps & P) | null,\n  children?: RawChildren | RawSlots\n): VNode\nexport function h<P extends string>(\n  type: ComponentOptionsWithArrayProps<P>,\n  // TODO for now this doesn't really do anything, but it would become useful\n  // if we make props required by default\n  props?: (RawProps & { [key in P]?: any }) | null,\n  children?: RawChildren | RawSlots\n): VNode\nexport function h<P>(\n  type: ComponentOptionsWithObjectProps<P>,\n  props?: (RawProps & ExtractPropTypes<P>) | null,\n  children?: RawChildren | RawSlots\n): VNode\n\n// fake constructor type returned by `createComponent`\nexport function h(type: Constructor, children?: RawChildren): VNode\nexport function h<P>(\n  type: Constructor<P>,\n  props?: (RawProps & P) | null,\n  children?: RawChildren | RawSlots\n): VNode\n\n// Actual implementation\nexport function h(\n  type: VNodeTypes,\n  propsOrChildren?: any,\n  children?: any\n): VNode {\n  if (arguments.length === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      // single vnode without props\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren])\n      }\n      // props without children\n      return createVNode(type, propsOrChildren)\n    } else {\n      // omit props\n      return createVNode(type, null, propsOrChildren)\n    }\n  } else {\n    if (isVNode(children)) {\n      children = [children]\n    }\n    return createVNode(type, propsOrChildren, children)\n  }\n}\n","import { VNodeChild } from '../vnode'\nimport { isArray, isString, isObject } from '@vue/shared'\n\nexport function renderList(\n  source: any,\n  renderItem: (value: any, key: string | number, index?: number) => VNodeChild\n): VNodeChild[] {\n  let ret: VNodeChild[]\n  if (isArray(source) || isString(source)) {\n    ret = new Array(source.length)\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i)\n    }\n  } else if (typeof source === 'number') {\n    ret = new Array(source)\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i)\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator as any]) {\n      ret = Array.from(source as Iterable<any>, renderItem)\n    } else {\n      const keys = Object.keys(source)\n      ret = new Array(keys.length)\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i]\n        ret[i] = renderItem(source[key], key, i)\n      }\n    }\n  }\n  return ret!\n}\n","import { Slot } from '../componentSlots'\nimport {\n  VNodeChildren,\n  openBlock,\n  createBlock,\n  Fragment,\n  VNode\n} from '../vnode'\nimport { PatchFlags } from '@vue/shared'\n\nexport function renderSlot(\n  slots: Record<string, Slot>,\n  name: string,\n  props: any = {},\n  // this is not a user-facing function, so the fallback is always generated by\n  // the compiler and guaranteed to be an array\n  fallback?: VNodeChildren\n): VNode {\n  const slot = slots[name]\n  return (\n    openBlock(),\n    createBlock(\n      Fragment,\n      { key: props.key },\n      slot ? slot(props) : fallback || [],\n      slots._compiled ? 0 : PatchFlags.BAIL\n    )\n  )\n}\n","import { isObject } from '@vue/shared'\nimport { warn } from '../warning'\n\n// For prefixing keys in v-on=\"obj\" with \"on\"\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\n  const ret: Record<string, any> = {}\n  if (__DEV__ && !isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`)\n    return ret\n  }\n  for (const key in obj) {\n    ret[`on${key}`] = obj[key]\n  }\n  return ret\n}\n","import { isArray, isPlainObject, objectToString } from '@vue/shared'\n\n// for converting {{ interpolation }} values to displayed strings.\nexport function toString(val: any): string {\n  return val == null\n    ? ''\n    : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n","// Public API ------------------------------------------------------------------\n\nexport { createComponent } from './apiCreateComponent'\nexport { nextTick } from './scheduler'\nexport * from './apiReactivity'\nexport * from './apiWatch'\nexport * from './apiLifecycle'\nexport * from './apiInject'\n\n// Advanced API ----------------------------------------------------------------\n\n// For raw render function users\nexport { h } from './h'\nexport {\n  createVNode,\n  cloneVNode,\n  mergeProps,\n  openBlock,\n  createBlock\n} from './vnode'\n// VNode type symbols\nexport { Text, Comment, Fragment, Portal, Suspense } from './vnode'\n// VNode flags\nexport { PublicShapeFlags as ShapeFlags } from './shapeFlags'\nexport { PublicPatchFlags as PatchFlags } from '@vue/shared'\n\n// For advanced plugins\nexport { getCurrentInstance } from './component'\n\n// For custom renderers\nexport { createRenderer } from './createRenderer'\nexport { warn } from './warning'\nexport {\n  handleError,\n  callWithErrorHandling,\n  callWithAsyncErrorHandling\n} from './errorHandling'\n\n// Internal, for compiler generated code\n// should sync with '@vue/compiler-core/src/runtimeConstants.ts'\nexport { withDirectives } from './directives'\nexport {\n  resolveComponent,\n  resolveDirective,\n  resolveDynamicComponent\n} from './helpers/resolveAssets'\nexport { renderList } from './helpers/renderList'\nexport { toString } from './helpers/toString'\nexport { toHandlers } from './helpers/toHandlers'\nexport { renderSlot } from './helpers/renderSlot'\nexport { createSlots } from './helpers/createSlots'\nexport { capitalize, camelize } from '@vue/shared'\n\n// Internal, for integration with runtime compiler\nexport { registerRuntimeCompiler } from './component'\n\n// Types -----------------------------------------------------------------------\n\nexport { App, AppConfig, AppContext, Plugin } from './apiApp'\nexport { RawProps, RawChildren, RawSlots } from './h'\nexport { VNode, VNodeTypes } from './vnode'\nexport {\n  Component,\n  FunctionalComponent,\n  ComponentInternalInstance,\n  RenderFunction\n} from './component'\nexport {\n  ComponentOptions,\n  ComponentOptionsWithoutProps,\n  ComponentOptionsWithObjectProps as ComponentOptionsWithProps,\n  ComponentOptionsWithArrayProps\n} from './apiOptions'\n\nexport { ComponentPublicInstance } from './componentProxy'\nexport { RendererOptions } from './createRenderer'\nexport { Slot, Slots } from './componentSlots'\nexport {\n  Prop,\n  PropType,\n  ComponentPropsOptions,\n  ComponentObjectPropsOptions\n} from './componentProps'\nexport {\n  Directive,\n  DirectiveBinding,\n  DirectiveHook,\n  ObjectDirective,\n  FunctionDirective,\n  DirectiveArguments\n} from './directives'\nexport { SuspenseBoundary } from './suspense'\n\nexport const version = __VERSION__\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","isOn","key","extend","a","b","hasOwnProperty","prototype","hasOwn","call","isArray","Array","isFunction","isString","isSymbol","isObject","isPromise","then","catch","objectToString","toString","toTypeString","value","isPlainObject","isReservedProp","startsWith","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","LOCKED","builtInSymbols","Set","getOwnPropertyNames","Symbol","filter","createGetter","isReadonly","target","receiver","res","Reflect","get","has","isRef","track","readonly","reactive","set","toRaw","oldValue","hadKey","result","trigger","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","toReactive","toReadonly","wrap","proto","getPrototypeOf","this","size","add","deleteEntry","delete","clear","hadItems","createForEach","callback","thisArg","observed","forEach","createIterableMethod","method","args","isPair","iterator","Map","innerIterator","apply","[object Object]","done","next","createReadonlyMethod","type","mutableInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","readonlyCollectionHandlers","targetMap","WeakMap","rawToReactive","reactiveToRaw","rawToReadonly","readonlyToRaw","readonlyValues","WeakSet","nonReactiveValues","collectionTypes","isObservableType","t","join","canObserve","_isVue","_isVNode","createReactiveObject","toProxy","baseHandlers","collectionHandlers","handlers","constructor","Proxy","isReactive","effectSymbol","effectStack","ITERATE_KEY","effect","fn","options","isEffect","raw","active","includes","cleanup","push","pop","run","scheduler","onTrack","onTrigger","onStop","computed","deps","createReactiveEffect","lazy","stop","shouldTrack","depsMap","dep","extraInfo","effects","computedRunners","addRunners","iterationKey","scheduleRun","effectsToAdd","convert","v","_isRef","toProxyRef","object","newVal","getterOrOptions","getter","setter","dirty","runner","childRunner","parentRunner","trackChildRun","newValue","stack","formatTrace","trace","logs","entry","formatted","formatTraceEntry","vnode","recurseCount","depth","postfix","open","repeat","file","Component","name","displayName","match","classify","formatComponentName","close","rootLabel","component","parent","props","formatProps","classifyRE","JSON","stringify","String","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","cur","exposedInstance","renderProxy","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","logError","queue","postFlushCbs","p","Promise","resolve","isFlushing","nextTick","queueJob","job","flushJobs","queuePostFlushCb","cb","dedupe","cbs","flushPostFlushCbs","seenJobs","shift","Fragment","Text","Comment","Portal","Suspense","blockStack","currentBlock","openBlock","disableTracking","createBlock","children","patchFlag","dynamicProps","createVNode","dynamicChildren","isVNode","SetupProxySymbol","class","klass","style","normalizeClass","normalizeStyle","shapeFlag","ref","suspense","el","anchor","default","normalizeChildren","cloneVNode","normalizeVNode","child","normalized","trim","handlersRE","injectHook","hook","isUnmounted","setCurrentInstance","createHook","lifecycle","currentInstance","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","currentRenderingInstance","renderComponentRoot","slots","attrs","emit","render","hasPropsChanged","prevProps","nextProps","nextKeys","keys","resolveProps","rawProps","_options","hasDeclaredProps","normalizationMap","normalizedKey","opt","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","normalizePropsOptions","propsProxy","setProp","isAbsent","hasDefault","currentValue","undefined","defaultValue","rawInitialProps","getType","ctor","isSameType","expectedTypes","len","normalizeSlotValue","normalizeSlot","rawSlot","resolveSlots","rawSlots","_compiled","valueCache","applyDirective","directive","arg","modifiers","valueCacheForDir","mounted","updated","hookKey","vnodeHook","prevVNode","existing","concat","invokeDirectiveHook","createAppContext","devtools","performance","isNativeTag","isCustomElement","warnHandler","mixins","components","directives","provides","createAppAPI","context","isMounted","app","use","plugin","install","mixin","rootComponent","rootContainer","rootProps","normalizeSuspenseChildren","ShapeFlags","SLOTS_CHILDREN","d","fallback","content","prodEffectOptions","n1","n2","invokeHooks","hooks","queuePostRenderEffect","isResolved","createRenderer","insert","hostInsert","remove","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","querySelector","hostQuerySelector","patch","container","parentComponent","parentSuspense","isSVG","optimized","$once","getNextHostNode","unmount","processText","processCommentNode","fragmentStartAnchor","fragmentEndAnchor","mountChildren","patchChildren","processFragment","targetSelector","patchBlockChildren","nextTarget","move","processPortal","hiddenContainer","subTree","fallbackTree","createSuspenseBoundary","resolveSuspense","mountSuspense","oldSubTree","oldFallbackTree","patchSuspense","processSuspense","tag","onVnodeBeforeMount","onVnodeMounted","mountElement","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","prev","unmountChildren","onVnodeUpdated","patchElement","setRef","processElement","initialVNode","emptyAppContext","root","update","setupContext","accessCache","renderCache","renderContext","data","refs","asyncDep","asyncResult","asyncResolved","user","bc","bm","m","bu","u","um","bum","da","rtg","rtc","event","handler","createComponentInstance","propsOptions","PublicInstanceProxyHandlers","setup","SetupProxyHandlers","createSetupContext","currentSuspense","setupResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","Error","updateHOCHostEl","onSuspense","restartSuspense","asyncSetupResult","setupRenderEffect","retryAsyncComponent","placeholder","mountComponent","nextVNode","prevChildren","nextChildren","shouldUpdateComponent","updateComponentPreRender","processComponent","start","oldChildren","newChildren","fallbackContainer","oldVNode","hasUnresolvedAncestor","onResolve","prevTree","nextTree","c1","prevShapeFlag","c2","patchKeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","patchUnkeyedChildren","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arr","arrI","getSequence","nextIndex","doRemove","unmountComponent","unmountSuspense","onVnodeBeforeUnmount","shouldRemoveChildren","onVnodeUnmounted","oldRef","oldSetupRef","setupRef","rawContainer","_vnode","createApp","invoke","watch","effectOrSource","cbOrOptions","doWatch","source","deep","flush","s","registerCleanup","baseGetter","traverse","seen","applyCb","recordEffect","instanceWatch","ctx","bind","publicPropertiesMap","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","n","provide","parentProvides","inject","applyOptions","asMixin","extends","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","methodHandler","from","callHookFromMixins","baseHook","selfHook","helperNameMap","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","helpers","getOwnPropertySymbols","_computed","getOwnPropertyDescriptor","PublicShapeFlags","ELEMENT","FUNCTIONAL_COMPONENT","STATEFUL_COMPONENT","TEXT_CHILDREN","ARRAY_CHILDREN","COMPONENT","resolveAsset","camelized","registry","doc","document","nodeOps","insertBefore","appendChild","removeChild","createElementNS","text","createTextNode","node","nodeValue","textContent","selector","_getNow","Date","now","createEvent","timeStamp","cachedNow","reset","getNow","addEventListener","removeEventListener","createInvoker","initialValue","invoker","e","lastUpdated","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","toNumber","parseFloat","isNaN","vModelText","number","assign","castToNumber","domValue","activeElement","vModelCheckbox","binding","setChecked","modelValue","_modelValue","elementValue","getValue","checked","index","looseIndexOf","found","filtered","splice","vModelRadio","looseEqual","vModelSelect","setSelected","selectedVal","o","selected","multiple","isMultiple","l","option","optionValue","selectedIndex","isObjectA","isObjectB","isArrayA","isArrayB","every","getTime","keysA","keysB","findIndex","item","_value","vModelDynamic","callModelHook","modelToUse","tagName","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","self","currentTarget","ctrl","ctrlKey","shiftKey","alt","altKey","meta","metaKey","left","button","middle","right","exact","some","keyNames","esc","space","up","down","nextValue","prevValue","setAttribute","className","patchClass","cssText","removeAttribute","patchStyle","prevOptions","nextOptions","capture","passive","once","patchEvent","patchDOMProp","patchAttr","exportedCreateApp","TEXT","CLASS","STYLE","PROPS","NEED_PATCH","FULL_PROPS","KEYED_FRAGMENT","UNKEYED_FRAGMENT","DYNAMIC_SLOTS","BAIL","dynamicSlots","slot","propsOrChildren","arguments","ret","toMerge","test","_compile","renderItem","obj","msg","appWarnHandler","currentVNode","normalizedStack","last","parentInstance","getComponentTrace","console","warn","process","env","NODE_ENV","groupCollapsed","log","groupEnd","dir","eventKey","k","guard"],"mappings":"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"}